{
	"id": "1d63103d8d78f6e2444b4ecb226befc7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/contracts/src/framework/plugin/setup/PluginSetup.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {ERC165} from \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol\";\r\nimport {ERC165Checker} from \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol\";\r\nimport {Clones} from \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol\";\r\n\r\nimport {IProtocolVersion, ProtocolVersion} from \"../../../utils/protocol/ProtocolVersion.sol\";\r\nimport {PermissionLib} from \"../../../core/permission/PermissionLib.sol\";\r\nimport {createERC1967Proxy as createERC1967} from \"../../../utils/Proxy.sol\";\r\nimport {IPluginSetup} from \"./IPluginSetup.sol\";\r\n\r\n/// @title PluginSetup\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An abstract contract that developers have to inherit from to write the setup of a plugin.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract PluginSetup is ERC165, IPluginSetup, ProtocolVersion {\r\n    /// @inheritdoc IPluginSetup\r\n    function prepareUpdate(\r\n        address _dao,\r\n        uint16 _currentBuild,\r\n        SetupPayload calldata _payload\r\n    )\r\n        external\r\n        virtual\r\n        override\r\n        returns (bytes memory initData, PreparedSetupData memory preparedSetupData)\r\n    {}\r\n\r\n    /// @notice A convenience function to create an [ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) proxy contract pointing to an implementation and being associated to a DAO.\r\n    /// @param _implementation The address of the implementation contract to which the proxy is pointing to.\r\n    /// @param _data The data to initialize the storage of the proxy contract.\r\n    /// @return The address of the created proxy contract.\r\n    function createERC1967Proxy(\r\n        address _implementation,\r\n        bytes memory _data\r\n    ) internal returns (address) {\r\n        return createERC1967(_implementation, _data);\r\n    }\r\n\r\n    /// @notice Checks if this or the parent contract supports an interface by its ID.\r\n    /// @param _interfaceId The ID of the interface.\r\n    /// @return Returns `true` if the interface is supported.\r\n    function supportsInterface(bytes4 _interfaceId) public view virtual override returns (bool) {\r\n        return\r\n            _interfaceId == type(IPluginSetup).interfaceId ||\r\n            _interfaceId == type(IProtocolVersion).interfaceId ||\r\n            super.supportsInterface(_interfaceId);\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {PermissionLib} from \"../../../core/permission/PermissionLib.sol\";\r\nimport {IDAO} from \"../../../core/dao/IDAO.sol\";\r\n\r\n/// @title IPluginSetup\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice The interface required for a plugin setup contract to be consumed by the `PluginSetupProcessor` for plugin installations, updates, and uninstallations.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IPluginSetup {\r\n    /// @notice The data associated with a prepared setup.\r\n    /// @param helpers The address array of helpers (contracts or EOAs) associated with this plugin version after the installation or update.\r\n    /// @param permissions The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the installing or updating DAO.\r\n    struct PreparedSetupData {\r\n        address[] helpers;\r\n        PermissionLib.MultiTargetPermission[] permissions;\r\n    }\r\n\r\n    /// @notice The payload for plugin updates and uninstallations containing the existing contracts as well as optional data to be consumed by the plugin setup.\r\n    /// @param plugin The address of the `Plugin`.\r\n    /// @param currentHelpers The address array of all current helpers (contracts or EOAs) associated with the plugin to update from.\r\n    /// @param data The bytes-encoded data containing the input parameters for the preparation of update/uninstall as specified in the corresponding ABI on the version's metadata.\r\n    struct SetupPayload {\r\n        address plugin;\r\n        address[] currentHelpers;\r\n        bytes data;\r\n    }\r\n\r\n    /// @notice Prepares the installation of a plugin.\r\n    /// @param _dao The address of the installing DAO.\r\n    /// @param _data The bytes-encoded data containing the input parameters for the installation as specified in the plugin's build metadata JSON file.\r\n    /// @return plugin The address of the `Plugin` contract being prepared for installation.\r\n    /// @return preparedSetupData The deployed plugin's relevant data which consists of helpers and permissions.\r\n    function prepareInstallation(\r\n        address _dao,\r\n        bytes calldata _data\r\n    ) external returns (address plugin, PreparedSetupData memory preparedSetupData);\r\n\r\n    /// @notice Prepares the update of a plugin.\r\n    /// @param _dao The address of the updating DAO.\r\n    /// @param _currentBuild The build number of the plugin to update from.\r\n    /// @param _payload The relevant data necessary for the `prepareUpdate`. See above.\r\n    /// @return initData The initialization data to be passed to upgradeable contracts when the update is applied in the `PluginSetupProcessor`.\r\n    /// @return preparedSetupData The deployed plugin's relevant data which consists of helpers and permissions.\r\n    function prepareUpdate(\r\n        address _dao,\r\n        uint16 _currentBuild,\r\n        SetupPayload calldata _payload\r\n    ) external returns (bytes memory initData, PreparedSetupData memory preparedSetupData);\r\n\r\n    /// @notice Prepares the uninstallation of a plugin.\r\n    /// @param _dao The address of the uninstalling DAO.\r\n    /// @param _payload The relevant data necessary for the `prepareUninstallation`. See above.\r\n    /// @return permissions The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the uninstalling DAO.\r\n    function prepareUninstallation(\r\n        address _dao,\r\n        SetupPayload calldata _payload\r\n    ) external returns (PermissionLib.MultiTargetPermission[] memory permissions);\r\n\r\n    /// @notice Returns the plugin implementation address.\r\n    /// @return The address of the plugin implementation contract.\r\n    /// @dev The implementation can be instantiated via the `new` keyword, cloned via the minimal clones pattern (see [ERC-1167](https://eips.ethereum.org/EIPS/eip-1167)), or proxied via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\r\n    function implementation() external view returns (address);\r\n}\r\n"
			},
			"packages/contracts/src/utils/Proxy.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\r\n\r\n/// @notice Free function to create a [ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) proxy contract based on the passed base contract address.\r\n/// @param _logic The base contract address.\r\n/// @param _data The constructor arguments for this contract.\r\n/// @return The address of the proxy contract created.\r\n/// @dev Initializes the upgradeable proxy with an initial implementation specified by _logic. If _data is non-empty, itâ€™s used as data in a delegate call to _logic. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor (see [OpenZeppelin ERC1967Proxy-constructor](https://docs.openzeppelin.com/contracts/4.x/api/proxy#ERC1967Proxy-constructor-address-bytes-)).\r\n/// @custom:security-contact sirt@aragon.org\r\nfunction createERC1967Proxy(address _logic, bytes memory _data) returns (address) {\r\n    return address(new ERC1967Proxy(_logic, _data));\r\n}\r\n"
			},
			"packages/contracts/src/core/permission/PermissionLib.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title PermissionLib\r\n/// @author Aragon Association - 2021-2023\r\n/// @notice A library containing objects for permission processing.\r\n/// @custom:security-contact sirt@aragon.org\r\nlibrary PermissionLib {\r\n    /// @notice A constant expressing that no condition is applied to a permission.\r\n    address public constant NO_CONDITION = address(0);\r\n\r\n    /// @notice The types of permission operations available in the `PermissionManager`.\r\n    /// @param Grant The grant operation setting a permission without a condition.\r\n    /// @param Revoke The revoke operation removing a permission (that was granted with or without a condition).\r\n    /// @param GrantWithCondition The grant operation setting a permission with a condition.\r\n    enum Operation {\r\n        Grant,\r\n        Revoke,\r\n        GrantWithCondition\r\n    }\r\n\r\n    /// @notice A struct containing the information for a permission to be applied on a single target contract without a condition.\r\n    /// @param operation The permission operation type.\r\n    /// @param who The address (EOA or contract) receiving the permission.\r\n    /// @param permissionId The permission identifier.\r\n    struct SingleTargetPermission {\r\n        Operation operation;\r\n        address who;\r\n        bytes32 permissionId;\r\n    }\r\n\r\n    /// @notice A struct containing the information for a permission to be applied on multiple target contracts, optionally, with a condition.\r\n    /// @param operation The permission operation type.\r\n    /// @param where The address of the target contract for which `who` receives permission.\r\n    /// @param who The address (EOA or contract) receiving the permission.\r\n    /// @param condition The `PermissionCondition` that will be asked for authorization on calls connected to the specified permission identifier.\r\n    /// @param permissionId The permission identifier.\r\n    struct MultiTargetPermission {\r\n        Operation operation;\r\n        address where;\r\n        address who;\r\n        address condition;\r\n        bytes32 permissionId;\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\nimport {IProtocolVersion} from \"./IProtocolVersion.sol\";\r\n\r\n/// @title ProtocolVersion\r\n/// @author Aragon Association - 2023\r\n/// @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\r\n/// @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\r\n/// @custom:security-contact sirt@aragon.org\r\nabstract contract ProtocolVersion is IProtocolVersion {\r\n    // IMPORTANT: Do not add any storage variable, see the above notice.\r\n\r\n    /// @inheritdoc IProtocolVersion\r\n    function protocolVersion() public pure returns (uint8[3] memory) {\r\n        return [1, 4, 0];\r\n    }\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(0, 0x09, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := keccak256(add(ptr, 0x43), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface.\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            supportsERC165InterfaceUnchecked(account, type(IERC165).interfaceId) &&\n            !supportsERC165InterfaceUnchecked(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && supportsERC165InterfaceUnchecked(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(\n        address account,\n        bytes4[] memory interfaceIds\n    ) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = supportsERC165InterfaceUnchecked(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!supportsERC165InterfaceUnchecked(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     *\n     * Some precompiled contracts will falsely indicate support for a given interface, so caution\n     * should be exercised when using this function.\n     *\n     * Interface identification is specified in ERC-165.\n     */\n    function supportsERC165InterfaceUnchecked(address account, bytes4 interfaceId) internal view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title IProtocolVersion\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice An interface defining the semantic Aragon OSx protocol version number.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IProtocolVersion {\r\n    /// @notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\r\n    /// @return _version Returns the semantic Aragon OSx protocol version number.\r\n    /// @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\r\n    function protocolVersion() external view returns (uint8[3] memory _version);\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0-or-later\r\n\r\npragma solidity ^0.8.8;\r\n\r\n/// @title IDAO\r\n/// @author Aragon Association - 2022-2023\r\n/// @notice The interface required for DAOs within the Aragon App DAO framework.\r\n/// @custom:security-contact sirt@aragon.org\r\ninterface IDAO {\r\n    /// @notice The action struct to be consumed by the DAO's `execute` function resulting in an external call.\r\n    /// @param to The address to call.\r\n    /// @param value The native token value to be sent with the call.\r\n    /// @param data The bytes-encoded function selector and calldata for the call.\r\n    struct Action {\r\n        address to;\r\n        uint256 value;\r\n        bytes data;\r\n    }\r\n\r\n    /// @notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\r\n    /// @param _where The address of the contract.\r\n    /// @param _who The address of a EOA or contract to give the permissions.\r\n    /// @param _permissionId The permission identifier.\r\n    /// @param _data The optional data passed to the `PermissionCondition` registered.\r\n    /// @return Returns true if the address has permission, false if not.\r\n    function hasPermission(\r\n        address _where,\r\n        address _who,\r\n        bytes32 _permissionId,\r\n        bytes memory _data\r\n    ) external view returns (bool);\r\n\r\n    /// @notice Updates the DAO metadata (e.g., an IPFS hash).\r\n    /// @param _metadata The IPFS hash of the new metadata object.\r\n    function setMetadata(bytes calldata _metadata) external;\r\n\r\n    /// @notice Emitted when the DAO metadata is updated.\r\n    /// @param metadata The IPFS hash of the new metadata object.\r\n    event MetadataSet(bytes metadata);\r\n\r\n    /// @notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\r\n    /// @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\r\n    /// @param _actions The array of actions.\r\n    /// @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\r\n    /// @return The array of results obtained from the executed actions in `bytes`.\r\n    /// @return The resulting failure map containing the actions have actually failed.\r\n    function execute(\r\n        bytes32 _callId,\r\n        Action[] memory _actions,\r\n        uint256 _allowFailureMap\r\n    ) external returns (bytes[] memory, uint256);\r\n\r\n    /// @notice Emitted when a proposal is executed.\r\n    /// @param actor The address of the caller.\r\n    /// @param callId The ID of the call.\r\n    /// @param actions The array of actions executed.\r\n    /// @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\r\n    /// @param failureMap The failure map encoding which actions have failed.\r\n    /// @param execResults The array with the results of the executed actions.\r\n    /// @dev The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.\r\n    event Executed(\r\n        address indexed actor,\r\n        bytes32 callId,\r\n        Action[] actions,\r\n        uint256 allowFailureMap,\r\n        uint256 failureMap,\r\n        bytes[] execResults\r\n    );\r\n\r\n    /// @notice Emitted when a standard callback is registered.\r\n    /// @param interfaceId The ID of the interface.\r\n    /// @param callbackSelector The selector of the callback function.\r\n    /// @param magicNumber The magic number to be registered for the callback function selector.\r\n    event StandardCallbackRegistered(\r\n        bytes4 interfaceId,\r\n        bytes4 callbackSelector,\r\n        bytes4 magicNumber\r\n    );\r\n\r\n    /// @notice Deposits (native) tokens to the DAO contract with a reference string.\r\n    /// @param _token The address of the token or address(0) in case of the native token.\r\n    /// @param _amount The amount of tokens to deposit.\r\n    /// @param _reference The reference describing the deposit reason.\r\n    function deposit(address _token, uint256 _amount, string calldata _reference) external payable;\r\n\r\n    /// @notice Emitted when a token deposit has been made to the DAO.\r\n    /// @param sender The address of the sender.\r\n    /// @param token The address of the deposited token.\r\n    /// @param amount The amount of tokens deposited.\r\n    /// @param _reference The reference describing the deposit reason.\r\n    event Deposited(\r\n        address indexed sender,\r\n        address indexed token,\r\n        uint256 amount,\r\n        string _reference\r\n    );\r\n\r\n    /// @notice Emitted when a native token deposit has been made to the DAO.\r\n    /// @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\r\n    /// @param sender The address of the sender.\r\n    /// @param amount The amount of native tokens deposited.\r\n    event NativeTokenDeposited(address sender, uint256 amount);\r\n\r\n    /// @notice Setter for the trusted forwarder verifying the meta transaction.\r\n    /// @param _trustedForwarder The trusted forwarder address.\r\n    function setTrustedForwarder(address _trustedForwarder) external;\r\n\r\n    /// @notice Getter for the trusted forwarder verifying the meta transaction.\r\n    /// @return The trusted forwarder address.\r\n    function getTrustedForwarder() external view returns (address);\r\n\r\n    /// @notice Emitted when a new TrustedForwarder is set on the DAO.\r\n    /// @param forwarder the new forwarder address.\r\n    event TrustedForwarderSet(address forwarder);\r\n\r\n    /// @notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\r\n    /// @param _hash The hash of the data to be signed.\r\n    /// @param _signature The signature byte array associated with `_hash`.\r\n    /// @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\r\n    function isValidSignature(bytes32 _hash, bytes memory _signature) external returns (bytes4);\r\n\r\n    /// @notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\r\n    /// @param _interfaceId The ID of the interface.\r\n    /// @param _callbackSelector The selector of the callback function.\r\n    /// @param _magicNumber The magic number to be registered for the function signature.\r\n    function registerStandardCallback(\r\n        bytes4 _interfaceId,\r\n        bytes4 _callbackSelector,\r\n        bytes4 _magicNumber\r\n    ) external;\r\n\r\n    /// @notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\r\n    /// @dev Introduced in v1.0.0. Removed in v1.4.0.\r\n    function setSignatureValidator(address) external;\r\n}\r\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol\":755:4030  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol\":755:4030  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122064f941ccab6a21722eceb458471a392e452b389909a9971faaa9e3a5086d2f5a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064f941ccab6a21722eceb458471a392e452b389909a9971faaa9e3a5086d2f5a64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xF941CCAB6A 0x21 PUSH19 0x2ECEB458471A392E452B389909A9971FAAA9E3 0xA5 ADDMOD PUSH14 0x2F5A64736F6C6343000811003300 ",
							"sourceMap": "755:3275:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:3275:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064f941ccab6a21722eceb458471a392e452b389909a9971faaa9e3a5086d2f5a64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xF941CCAB6A 0x21 PUSH19 0x2ECEB458471A392E452B389909A9971FAAA9E3 0xA5 ADDMOD PUSH14 0x2F5A64736F6C6343000811003300 ",
							"sourceMap": "755:3275:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 755,
									"end": 4030,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122064f941ccab6a21722eceb458471a392e452b389909a9971faaa9e3a5086d2f5a64736f6c63430008110033",
									".code": [
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 755,
											"end": 4030,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/permission/PermissionLib.sol",
								"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
								"packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
								"packages/contracts/src/utils/Proxy.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":958:1070  constructor(address _logic, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1024:1063  _upgradeToAndCall(_logic, _data, false) */\n  tag_5\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1042:1048  _logic */\n  dup3\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1050:1055  _data */\n  dup3\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1057:1062  false */\n  0x00\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1024:1041  _upgradeToAndCall */\n  tag_6\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1024:1063  _upgradeToAndCall(_logic, _data, false) */\n  jump\t// in\ntag_5:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":958:1070  constructor(address _logic, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  jump(tag_56)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2057:2322  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\ntag_6:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2165:2194  _upgradeTo(newImplementation) */\n  tag_9\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2176:2193  newImplementation */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2165:2175  _upgradeTo */\n  tag_10\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2165:2194  _upgradeTo(newImplementation) */\n  jump\t// in\ntag_9:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2222:2223  0 */\n  0x00\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2212  data */\n  dup3\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2219  data.length */\n  mload\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2223  data.length > 0 */\n  gt\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2236  data.length > 0 || forceCall */\n  dup1\n  tag_11\n  jumpi\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2227:2236  forceCall */\n  dup1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2208:2236  data.length > 0 || forceCall */\ntag_11:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2204:2316  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_12\n  jumpi\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2252:2305  Address.functionDelegateCall(newImplementation, data) */\n  tag_13\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2281:2298  newImplementation */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2300:2304  data */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2252:2280  Address.functionDelegateCall */\n  or(tag_0_10, shl(0x20, tag_14))\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2252:2305  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2204:2316  if (data.length > 0 || forceCall) {... */\ntag_12:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":2057:2322  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1771:1923  function _upgradeTo(address newImplementation) internal {... */\ntag_10:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1837:1874  _setImplementation(newImplementation) */\n  tag_16\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1856:1873  newImplementation */\n  dup2\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1837:1855  _setImplementation */\n  tag_17\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1837:1874  _setImplementation(newImplementation) */\n  jump\t// in\ntag_16:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1889:1916  Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1771:1923  function _upgradeTo(address newImplementation) internal {... */\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_14:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6757:6769  bytes memory */\n  0x60\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_19\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6809:6815  target */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6817:6821  data */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6808  functionDelegateCall */\n  tag_20\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_19:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1406:1665  function _setImplementation(address newImplementation) private {... */\ntag_17:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1487:1524  Address.isContract(newImplementation) */\n  tag_22\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1506:1523  newImplementation */\n  dup2\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1487:1505  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_23))\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1487:1524  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1671:1673   */\n  0x20\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1653:1674   */\n  mstore\n    /* \"#utility.yul\":1710:1712   */\n  0x2d\n    /* \"#utility.yul\":1690:1708   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1683:1713   */\n  mstore\n    /* \"#utility.yul\":1749:1783   */\n  0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n    /* \"#utility.yul\":1729:1747   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1722:1784   */\n  mstore\n  shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":1800:1818   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1793:1836   */\n  mstore\n    /* \"#utility.yul\":1853:1872   */\n  0x84\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1479:1574  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1641:1658  newImplementation */\n  dup1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1584:1632  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  tag_27\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1030:1096  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1611:1631  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1584:1610  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_28))\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1584:1632  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1584:1658  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1406:1665  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\ntag_20:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7199:7211  bytes memory */\n  0x60\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7224:7236  bool success */\n  0x00\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7238:7261  bytes memory returndata */\n  dup1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7265:7271  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7265:7284  target.delegatecall */\n  and\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7285:7289  data */\n  dup6\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n  mload(0x40)\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_34\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_33)\ntag_34:\n  0x60\n  swap2\n  pop\ntag_33:\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  tag_35\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7334:7340  target */\n  dup7\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7363:7375  errorMessage */\n  dup8\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n  tag_36\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  jump\t// in\ntag_35:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n  swap7\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1702:1721  account.code.length */\n  and\n  extcodesize\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_28:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":2029:2033  slot */\n  swap1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\ntag_36:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7851:7863  bytes memory */\n  0x60\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7879:7886  success */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n  iszero\n  tag_40\n  jumpi\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7906:7916  returndata */\n  dup3\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7906:7923  returndata.length */\n  mload\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7927:7928  0 */\n  0x00\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n  sub\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n  tag_43\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1702:1721  account.code.length */\n  dup6\n  and\n  extcodesize\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2377:2379   */\n  0x20\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2359:2380   */\n  mstore\n    /* \"#utility.yul\":2416:2418   */\n  0x1d\n    /* \"#utility.yul\":2396:2414   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2389:2419   */\n  mstore\n    /* \"#utility.yul\":2455:2486   */\n  0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n    /* \"#utility.yul\":2435:2453   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2428:2487   */\n  mstore\n    /* \"#utility.yul\":2504:2522   */\n  0x64\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n  tag_25\n    /* \"#utility.yul\":2175:2528   */\n  jump\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\ntag_43:\n  pop\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8208:8218  returndata */\n  dup2\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8201:8218  return returndata */\n  jump(tag_47)\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7875:8293  if (success) {... */\ntag_40:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  tag_47\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8257:8267  returndata */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8269:8281  errorMessage */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8249:8256  _revert */\n  tag_48\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n  jump\t// in\ntag_47:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\ntag_48:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8980:8997  returndata.length */\n  dup2\n  mload\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n  iszero\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n  tag_50\n  jumpi\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9208:9218  returndata */\n  dup2\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n  mload\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9264:9279  returndata_size */\n  dup1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9251:9261  returndata */\n  dup4\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9247:9249  32 */\n  0x20\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n  add\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\ntag_50:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9331:9343  errorMessage */\n  dup1\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_53\n  jump\t// in\n    /* \"#utility.yul\":14:141   */\ntag_54:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:396   */\ntag_55:\n    /* \"#utility.yul\":231:232   */\n  0x00\n    /* \"#utility.yul\":241:354   */\ntag_59:\n    /* \"#utility.yul\":255:261   */\n  dup4\n    /* \"#utility.yul\":252:253   */\n  dup2\n    /* \"#utility.yul\":249:262   */\n  lt\n    /* \"#utility.yul\":241:354   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":331:342   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":325:343   */\n  mload\n    /* \"#utility.yul\":312:323   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":305:344   */\n  mstore\n    /* \"#utility.yul\":277:279   */\n  0x20\n    /* \"#utility.yul\":270:280   */\n  add\n    /* \"#utility.yul\":241:354   */\n  jump(tag_59)\ntag_61:\n  pop\n  pop\n    /* \"#utility.yul\":388:389   */\n  0x00\n    /* \"#utility.yul\":370:386   */\n  swap2\n  add\n    /* \"#utility.yul\":363:390   */\n  mstore\n    /* \"#utility.yul\":146:396   */\n  jump\t// out\n    /* \"#utility.yul\":401:1464   */\ntag_2:\n    /* \"#utility.yul\":489:495   */\n  0x00\n    /* \"#utility.yul\":497:503   */\n  dup1\n    /* \"#utility.yul\":550:552   */\n  0x40\n    /* \"#utility.yul\":538:547   */\n  dup4\n    /* \"#utility.yul\":529:536   */\n  dup6\n    /* \"#utility.yul\":525:548   */\n  sub\n    /* \"#utility.yul\":521:553   */\n  slt\n    /* \"#utility.yul\":518:570   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":518:570   */\ntag_63:\n    /* \"#utility.yul\":592:608   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":637:668   */\n  dup2\n  and\n    /* \"#utility.yul\":627:669   */\n  dup2\n  eq\n    /* \"#utility.yul\":617:687   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":683:684   */\n  0x00\n    /* \"#utility.yul\":680:681   */\n  dup1\n    /* \"#utility.yul\":673:685   */\n  revert\n    /* \"#utility.yul\":617:687   */\ntag_64:\n    /* \"#utility.yul\":755:757   */\n  0x20\n    /* \"#utility.yul\":740:758   */\n  dup5\n  add\n    /* \"#utility.yul\":734:759   */\n  mload\n    /* \"#utility.yul\":706:711   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":808:822   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":805:839   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":835:836   */\n  0x00\n    /* \"#utility.yul\":832:833   */\n  dup1\n    /* \"#utility.yul\":825:837   */\n  revert\n    /* \"#utility.yul\":805:839   */\ntag_65:\n    /* \"#utility.yul\":873:879   */\n  dup2\n    /* \"#utility.yul\":862:871   */\n  dup6\n    /* \"#utility.yul\":858:880   */\n  add\n    /* \"#utility.yul\":848:880   */\n  swap2\n  pop\n    /* \"#utility.yul\":918:925   */\n  dup6\n    /* \"#utility.yul\":911:915   */\n  0x1f\n    /* \"#utility.yul\":907:909   */\n  dup4\n    /* \"#utility.yul\":903:916   */\n  add\n    /* \"#utility.yul\":899:926   */\n  slt\n    /* \"#utility.yul\":889:944   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":940:941   */\n  0x00\n    /* \"#utility.yul\":937:938   */\n  dup1\n    /* \"#utility.yul\":930:942   */\n  revert\n    /* \"#utility.yul\":889:944   */\ntag_66:\n    /* \"#utility.yul\":969:971   */\n  dup2\n    /* \"#utility.yul\":963:972   */\n  mload\n    /* \"#utility.yul\":991:993   */\n  dup2\n    /* \"#utility.yul\":987:989   */\n  dup2\n    /* \"#utility.yul\":984:994   */\n  gt\n    /* \"#utility.yul\":981:1017   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":997:1015   */\n  tag_68\n  tag_54\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1072:1074   */\n  0x40\n    /* \"#utility.yul\":1066:1075   */\n  mload\n    /* \"#utility.yul\":1040:1042   */\n  0x1f\n    /* \"#utility.yul\":1126:1139   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1122:1144   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1146:1148   */\n  0x3f\n    /* \"#utility.yul\":1118:1149   */\n  add\n    /* \"#utility.yul\":1114:1154   */\n  and\n    /* \"#utility.yul\":1102:1155   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1170:1188   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1190:1212   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1167:1213   */\n  or\n    /* \"#utility.yul\":1164:1236   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1216:1234   */\n  tag_70\n  tag_54\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1256:1266   */\n  dup2\n    /* \"#utility.yul\":1252:1254   */\n  0x40\n    /* \"#utility.yul\":1245:1267   */\n  mstore\n    /* \"#utility.yul\":1291:1293   */\n  dup3\n    /* \"#utility.yul\":1283:1289   */\n  dup2\n    /* \"#utility.yul\":1276:1294   */\n  mstore\n    /* \"#utility.yul\":1331:1338   */\n  dup9\n    /* \"#utility.yul\":1326:1328   */\n  0x20\n    /* \"#utility.yul\":1321:1323   */\n  dup5\n    /* \"#utility.yul\":1317:1319   */\n  dup8\n    /* \"#utility.yul\":1313:1324   */\n  add\n    /* \"#utility.yul\":1309:1329   */\n  add\n    /* \"#utility.yul\":1306:1339   */\n  gt\n    /* \"#utility.yul\":1303:1356   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1349:1350   */\n  dup1\n    /* \"#utility.yul\":1342:1354   */\n  revert\n    /* \"#utility.yul\":1303:1356   */\ntag_71:\n    /* \"#utility.yul\":1365:1433   */\n  tag_72\n    /* \"#utility.yul\":1430:1432   */\n  dup4\n    /* \"#utility.yul\":1425:1427   */\n  0x20\n    /* \"#utility.yul\":1417:1423   */\n  dup4\n    /* \"#utility.yul\":1413:1428   */\n  add\n    /* \"#utility.yul\":1408:1410   */\n  0x20\n    /* \"#utility.yul\":1404:1406   */\n  dup9\n    /* \"#utility.yul\":1400:1411   */\n  add\n    /* \"#utility.yul\":1365:1433   */\n  tag_55\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1452:1458   */\n  dup1\n    /* \"#utility.yul\":1442:1458   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":401:1464   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1883:2170   */\ntag_31:\n    /* \"#utility.yul\":2012:2015   */\n  0x00\n    /* \"#utility.yul\":2050:2056   */\n  dup3\n    /* \"#utility.yul\":2044:2057   */\n  mload\n    /* \"#utility.yul\":2066:2132   */\n  tag_75\n    /* \"#utility.yul\":2125:2131   */\n  dup2\n    /* \"#utility.yul\":2120:2123   */\n  dup5\n    /* \"#utility.yul\":2113:2117   */\n  0x20\n    /* \"#utility.yul\":2105:2111   */\n  dup8\n    /* \"#utility.yul\":2101:2118   */\n  add\n    /* \"#utility.yul\":2066:2132   */\n  tag_55\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2148:2164   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":1883:2170   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2533:2929   */\ntag_53:\n    /* \"#utility.yul\":2682:2684   */\n  0x20\n    /* \"#utility.yul\":2671:2680   */\n  dup2\n    /* \"#utility.yul\":2664:2685   */\n  mstore\n    /* \"#utility.yul\":2645:2649   */\n  0x00\n    /* \"#utility.yul\":2714:2720   */\n  dup3\n    /* \"#utility.yul\":2708:2721   */\n  mload\n    /* \"#utility.yul\":2757:2763   */\n  dup1\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2741:2750   */\n  dup5\n    /* \"#utility.yul\":2737:2755   */\n  add\n    /* \"#utility.yul\":2730:2764   */\n  mstore\n    /* \"#utility.yul\":2773:2852   */\n  tag_78\n    /* \"#utility.yul\":2845:2851   */\n  dup2\n    /* \"#utility.yul\":2840:2842   */\n  0x40\n    /* \"#utility.yul\":2829:2838   */\n  dup6\n    /* \"#utility.yul\":2825:2843   */\n  add\n    /* \"#utility.yul\":2820:2822   */\n  0x20\n    /* \"#utility.yul\":2812:2818   */\n  dup8\n    /* \"#utility.yul\":2808:2823   */\n  add\n    /* \"#utility.yul\":2773:2852   */\n  tag_55\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2913:2915   */\n  0x1f\n    /* \"#utility.yul\":2892:2907   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":2888:2917   */\n  and\n    /* \"#utility.yul\":2873:2918   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":2920:2922   */\n  0x40\n    /* \"#utility.yul\":2869:2923   */\n  add\n  swap3\n    /* \"#utility.yul\":2533:2929   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_56:\n    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      tag_5\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2898:2907  _fallback */\n      tag_6\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2898:2909  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":567:1290  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n      stop\n    tag_2:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2675:2686  _fallback() */\n      tag_5\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      tag_16\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      tag_17\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2407:2422  _implementation */\n      tag_18\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2407:2424  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2397:2406  _delegate */\n      tag_19\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2397:2425  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":2322:2432  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_10:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6757:6769  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_21\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6809:6815  target */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6817:6821  data */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6808  functionDelegateCall */\n      tag_22\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6788:6865  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_21:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6781:6865  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":6674:6872  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_11:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      and\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_12:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":2029:2033  slot */\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":1859:2049  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1148:1288  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_18:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1215:1227  address impl */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1246:1281  ERC1967Upgrade._getImplementation() */\n      tag_27\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1030:1096  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1254:1308  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":1175:1315  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1246:1281  ERC1967Upgrade._getImplementation() */\n    tag_27:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1239:1281  return ERC1967Upgrade._getImplementation() */\n      swap1\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":1148:1288  function _implementation() internal view virtual override returns (address impl) {... */\n      swap1\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":948:1843  function _delegate(address implementation) internal virtual {... */\n    tag_19:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1286:1300  calldatasize() */\n      calldatasize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1283:1284  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1280:1281  0 */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1267:1301  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1500:1501  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1497:1498  0 */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1481:1495  calldatasize() */\n      calldatasize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1478:1479  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1462:1476  implementation */\n      dup5\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1455:1460  gas() */\n      gas\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1442:1502  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1576:1592  returndatasize() */\n      returndatasize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1573:1574  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1570:1571  0 */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1555:1593  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1614:1620  result */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n      dup1\n      iszero\n      tag_31\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1796:1812  returndatasize() */\n      returndatasize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1793:1794  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1786:1813  return(0, returndatasize()) */\n      return\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1681:1747  case 0 {... */\n    tag_31:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1716:1732  returndatasize() */\n      returndatasize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1713:1714  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":1706:1733  revert(0, returndatasize()) */\n      revert\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n    tag_22:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7199:7211  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7224:7236  bool success */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7238:7261  bytes memory returndata */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7265:7271  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7265:7284  target.delegatecall */\n      and\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7285:7289  data */\n      dup6\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7265:7290  target.delegatecall(data) */\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_37\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_36)\n    tag_37:\n      0x60\n      swap2\n      pop\n    tag_36:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7223:7290  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_38\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7334:7340  target */\n      dup7\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7342:7349  success */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7351:7361  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7363:7375  errorMessage */\n      dup8\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7307:7333  verifyCallResultFromTarget */\n      tag_39\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7307:7376  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_38:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7300:7376  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7058:7383  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_39:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup3\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_46\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":763:765   */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":745:766   */\n      mstore\n        /* \"#utility.yul\":802:804   */\n      0x1d\n        /* \"#utility.yul\":782:800   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":775:805   */\n      mstore\n        /* \"#utility.yul\":841:872   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":821:839   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":814:873   */\n      mstore\n        /* \"#utility.yul\":890:908   */\n      0x64\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n      pop\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8201:8218  return returndata */\n      jump(tag_50)\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_43:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_50\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_51\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_50:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_51:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      dup2\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      iszero\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      tag_53\n      jumpi\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_53:\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"#utility.yul\":14:264   */\n    tag_57:\n        /* \"#utility.yul\":99:100   */\n      0x00\n        /* \"#utility.yul\":109:222   */\n    tag_60:\n        /* \"#utility.yul\":123:129   */\n      dup4\n        /* \"#utility.yul\":120:121   */\n      dup2\n        /* \"#utility.yul\":117:130   */\n      lt\n        /* \"#utility.yul\":109:222   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":199:210   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":193:211   */\n      mload\n        /* \"#utility.yul\":180:191   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":173:212   */\n      mstore\n        /* \"#utility.yul\":145:147   */\n      0x20\n        /* \"#utility.yul\":138:148   */\n      add\n        /* \"#utility.yul\":109:222   */\n      jump(tag_60)\n    tag_62:\n      pop\n      pop\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":238:254   */\n      swap2\n      add\n        /* \"#utility.yul\":231:258   */\n      mstore\n        /* \"#utility.yul\":14:264   */\n      jump\t// out\n        /* \"#utility.yul\":269:556   */\n    tag_34:\n        /* \"#utility.yul\":398:401   */\n      0x00\n        /* \"#utility.yul\":436:442   */\n      dup3\n        /* \"#utility.yul\":430:443   */\n      mload\n        /* \"#utility.yul\":452:518   */\n      tag_64\n        /* \"#utility.yul\":511:517   */\n      dup2\n        /* \"#utility.yul\":506:509   */\n      dup5\n        /* \"#utility.yul\":499:503   */\n      0x20\n        /* \"#utility.yul\":491:497   */\n      dup8\n        /* \"#utility.yul\":487:504   */\n      add\n        /* \"#utility.yul\":452:518   */\n      tag_57\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":534:550   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":269:556   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":919:1315   */\n    tag_56:\n        /* \"#utility.yul\":1068:1070   */\n      0x20\n        /* \"#utility.yul\":1057:1066   */\n      dup2\n        /* \"#utility.yul\":1050:1071   */\n      mstore\n        /* \"#utility.yul\":1031:1035   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup3\n        /* \"#utility.yul\":1094:1107   */\n      mload\n        /* \"#utility.yul\":1143:1149   */\n      dup1\n        /* \"#utility.yul\":1138:1140   */\n      0x20\n        /* \"#utility.yul\":1127:1136   */\n      dup5\n        /* \"#utility.yul\":1123:1141   */\n      add\n        /* \"#utility.yul\":1116:1150   */\n      mstore\n        /* \"#utility.yul\":1159:1238   */\n      tag_67\n        /* \"#utility.yul\":1231:1237   */\n      dup2\n        /* \"#utility.yul\":1226:1228   */\n      0x40\n        /* \"#utility.yul\":1215:1224   */\n      dup6\n        /* \"#utility.yul\":1211:1229   */\n      add\n        /* \"#utility.yul\":1206:1208   */\n      0x20\n        /* \"#utility.yul\":1198:1204   */\n      dup8\n        /* \"#utility.yul\":1194:1209   */\n      add\n        /* \"#utility.yul\":1159:1238   */\n      tag_57\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1299:1301   */\n      0x1f\n        /* \"#utility.yul\":1278:1293   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1274:1303   */\n      and\n        /* \"#utility.yul\":1259:1304   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1306:1308   */\n      0x40\n        /* \"#utility.yul\":1255:1309   */\n      add\n      swap3\n        /* \"#utility.yul\":919:1315   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa26469706673582212202d7b152f007afac46d5af3100c39cebff610880979127ee4843f358cb406f89964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_134": {
									"entryPoint": null,
									"id": 134,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_842": {
									"entryPoint": 693,
									"id": 842,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_201": {
									"entryPoint": 215,
									"id": 201,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_246": {
									"entryPoint": 53,
									"id": 246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_216": {
									"entryPoint": 107,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_730": {
									"entryPoint": 171,
									"id": 730,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_759": {
									"entryPoint": 425,
									"id": 759,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_875": {
									"entryPoint": 561,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_531": {
									"entryPoint": 546,
									"id": 531,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_798": {
									"entryPoint": 564,
									"id": 798,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2931:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:19",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:19",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:184:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "222:10:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "231:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "226:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "316:3:19"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "321:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "312:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "312:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "335:3:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "340:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "331:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "331:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "325:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "325:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:39:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "252:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "255:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "249:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "263:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "265:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "274:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "270:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "265:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "245:3:19",
																"statements": []
															},
															"src": "241:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "374:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "370:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "370:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "388:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "363:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "363:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "363:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "190:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "195:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "200:6:19",
														"type": ""
													}
												],
												"src": "146:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:956:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "554:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "563:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "566:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "556:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "556:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:32:19"
															},
															"nodeType": "YulIf",
															"src": "518:52:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "579:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "598:9:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "592:16:19"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "583:5:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "671:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "683:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "641:5:19"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "656:3:19",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "661:1:19",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "652:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "652:11:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "665:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "648:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "648:19:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:31:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:42:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:50:19"
															},
															"nodeType": "YulIf",
															"src": "617:70:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:15:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "706:5:19"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "720:39:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "755:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "740:18:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:25:19"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "724:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "768:28:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "786:2:19",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "790:1:19",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:10:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:18:19"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "772:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "823:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "832:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "835:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "825:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "825:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "819:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "808:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:14:19"
															},
															"nodeType": "YulIf",
															"src": "805:34:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "848:32:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:19"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "858:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "858:22:19"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "852:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "928:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "937:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "940:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "930:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "930:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "930:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "907:2:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "911:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "903:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "903:13:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "918:7:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "892:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:35:19"
															},
															"nodeType": "YulIf",
															"src": "889:55:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "953:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "969:2:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "963:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:9:19"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "957:2:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "995:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "997:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "997:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "997:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "987:2:19"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "991:2:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "984:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:10:19"
															},
															"nodeType": "YulIf",
															"src": "981:36:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1026:17:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1040:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1036:7:19"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1030:2:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1052:23:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1072:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1066:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1066:9:19"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1056:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1084:71:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1106:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1130:2:19"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1134:4:19",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1126:3:19"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1126:13:19"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1141:2:19"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1122:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1122:22:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1146:2:19",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1118:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1118:31:19"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1151:2:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1114:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1114:40:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1102:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1102:53:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1088:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1214:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1216:16:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1216:18:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1173:10:19"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1185:2:19"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1170:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1170:18:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1193:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1205:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1190:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1167:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:46:19"
															},
															"nodeType": "YulIf",
															"src": "1164:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1256:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1245:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1245:22:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1283:6:19"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1291:2:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1276:18:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1276:18:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1352:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1342:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1317:2:19"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1321:2:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1313:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1313:11:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:20:19"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1331:7:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1306:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:33:19"
															},
															"nodeType": "YulIf",
															"src": "1303:53:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1404:2:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1408:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:11:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1417:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1425:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1413:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1413:15:19"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1430:2:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1365:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1365:68:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1365:68:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1442:16:19",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1452:6:19"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "466:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "477:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "489:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "497:6:19",
														"type": ""
													}
												],
												"src": "401:1063:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1643:235:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1660:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1653:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1653:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1694:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1705:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1690:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1690:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:19",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1683:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1683:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1683:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1733:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1744:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1729:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1729:18:19"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1749:34:19",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1722:62:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1722:62:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1804:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1815:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:18:19"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1820:15:19",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:43:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1793:43:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1845:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1857:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1868:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1853:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1845:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1620:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1634:4:19",
														"type": ""
													}
												],
												"src": "1469:409:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2020:150:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2050:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2044:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2034:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2105:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2113:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:17:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2125:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2066:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2066:66:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2141:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2152:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2157:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2148:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2148:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2141:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1996:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2001:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2012:3:19",
														"type": ""
													}
												],
												"src": "1883:287:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2349:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2366:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2377:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2400:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2411:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2396:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2389:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2439:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2450:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2435:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:18:19"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2455:31:19",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2496:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2326:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2340:4:19",
														"type": ""
													}
												],
												"src": "2175:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:275:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2664:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2664:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2664:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2694:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2714:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2708:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2698:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2752:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2737:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2737:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2757:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2730:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:15:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2829:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2840:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2825:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2825:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2845:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2773:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2773:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2773:79:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2861:62:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2877:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2896:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2904:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2892:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2892:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2913:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2909:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2909:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2888:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2888:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2873:45:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2920:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2869:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2869:54:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2861:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2623:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2634:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2645:4:19",
														"type": ""
													}
												],
												"src": "2533:396:19"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405161072738038061072783398101604081905261002291610319565b61002e82826000610035565b5050610436565b61003e8361006b565b60008251118061004b5750805b156100665761006483836100ab60201b6100291760201c565b505b505050565b610074816100d7565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100d08383604051806060016040528060278152602001610700602791396101a9565b9392505050565b6100ea8161022260201b6100551760201c565b6101515760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101887f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61023160201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080856001600160a01b0316856040516101c691906103e7565b600060405180830381855af49150503d8060008114610201576040519150601f19603f3d011682016040523d82523d6000602084013e610206565b606091505b50909250905061021886838387610234565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102a357825160000361029c576001600160a01b0385163b61029c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610148565b50816102ad565b6102ad83836102b5565b949350505050565b8151156102c55781518083602001fd5b8060405162461bcd60e51b81526004016101489190610403565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103105781810151838201526020016102f8565b50506000910152565b6000806040838503121561032c57600080fd5b82516001600160a01b038116811461034357600080fd5b60208401519092506001600160401b038082111561036057600080fd5b818501915085601f83011261037457600080fd5b815181811115610386576103866102df565b604051601f8201601f19908116603f011681019083821181831017156103ae576103ae6102df565b816040528281528860208487010111156103c757600080fd5b6103d88360208301602088016102f5565b80955050505050509250929050565b600082516103f98184602087016102f5565b9190910192915050565b60208152600082518060208401526104228160408501602087016102f5565b601f01601f19169190910160400192915050565b6102bb806104456000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202d7b152f007afac46d5af3100c39cebff610880979127ee4843f358cb406f89964736f6c63430008110033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x727 CODESIZE SUB DUP1 PUSH2 0x727 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x319 JUMP JUMPDEST PUSH2 0x2E DUP3 DUP3 PUSH1 0x0 PUSH2 0x35 JUMP JUMPDEST POP POP PUSH2 0x436 JUMP JUMPDEST PUSH2 0x3E DUP4 PUSH2 0x6B JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x4B JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x66 JUMPI PUSH2 0x64 DUP4 DUP4 PUSH2 0xAB PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74 DUP2 PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD0 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x700 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1A9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEA DUP2 PUSH2 0x222 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x151 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x188 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x231 PUSH1 0x20 SHL PUSH2 0x64 OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x3E7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x206 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x218 DUP7 DUP4 DUP4 DUP8 PUSH2 0x234 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2A3 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x29C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x29C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x148 JUMP JUMPDEST POP DUP2 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x2AD DUP4 DUP4 PUSH2 0x2B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2C5 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x310 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2F8 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x386 PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3AE JUMPI PUSH2 0x3AE PUSH2 0x2DF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3D8 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2F5 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x3F9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x422 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BB DUP1 PUSH2 0x445 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x131 DUP7 DUP4 DUP4 DUP8 PUSH2 0x13B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AF JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1B9 DUP4 DUP4 PUSH2 0x1C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1D1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x221 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212202D7B15 0x2F STOP PUSH27 0xFAC46D5AF3100C39CEBFF610880979127EE4843F358CB406F89964 PUSH20 0x6F6C63430008110033416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65640000000000000000000000 ",
							"sourceMap": "567:723:3:-:0;;;958:112;;;;;;;;;;;;;;;;;;:::i;:::-;1024:39;1042:6;1050:5;1057;1024:17;:39::i;:::-;958:112;;567:723;;2057:265:4;2165:29;2176:17;2165:10;:29::i;:::-;2222:1;2208:4;:11;:15;:28;;;;2227:9;2208:28;2204:112;;;2252:53;2281:17;2300:4;2252:28;;;;;:53;;:::i;:::-;;2204:112;2057:265;;;:::o;1771:152::-;1837:37;1856:17;1837:18;:37::i;:::-;1889:27;;-1:-1:-1;;;;;1889:27:4;;;;;;;;1771:152;:::o;6674:198:7:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:7:o;1406:259:4:-;1487:37;1506:17;1487:18;;;;;:37;;:::i;:::-;1479:95;;;;-1:-1:-1;;;1479:95:4;;1671:2:19;1479:95:4;;;1653:21:19;1710:2;1690:18;;;1683:30;1749:34;1729:18;;;1722:62;-1:-1:-1;;;1800:18:19;;;1793:43;1853:19;;1479:95:4;;;;;;;;;1641:17;1584:48;1030:66;1611:20;;1584:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1584:74:4;-1:-1:-1;;;;;1584:74:4;;;;;;;;;;-1:-1:-1;1406:259:4:o;7058:325:7:-;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:7;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7223:67:7;;-1:-1:-1;7223:67:7;-1:-1:-1;7307:69:7;7334:6;7223:67;;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:7:o;1412:320::-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;1859:190:8:-;2029:4;1859:190::o;7671:628:7:-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;2377:2:19;8113:60:7;;;2359:21:19;2416:2;2396:18;;;2389:30;2455:31;2435:18;;;2428:59;2504:18;;8113:60:7;2175:353:19;8113:60:7;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;;:::i;14:127:19:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:19;370:16;;363:27;146:250::o;401:1063::-;489:6;497;550:2;538:9;529:7;525:23;521:32;518:52;;;566:1;563;556:12;518:52;592:16;;-1:-1:-1;;;;;637:31:19;;627:42;;617:70;;683:1;680;673:12;617:70;755:2;740:18;;734:25;706:5;;-1:-1:-1;;;;;;808:14:19;;;805:34;;;835:1;832;825:12;805:34;873:6;862:9;858:22;848:32;;918:7;911:4;907:2;903:13;899:27;889:55;;940:1;937;930:12;889:55;969:2;963:9;991:2;987;984:10;981:36;;;997:18;;:::i;:::-;1072:2;1066:9;1040:2;1126:13;;-1:-1:-1;;1122:22:19;;;1146:2;1118:31;1114:40;1102:53;;;1170:18;;;1190:22;;;1167:46;1164:72;;;1216:18;;:::i;:::-;1256:10;1252:2;1245:22;1291:2;1283:6;1276:18;1331:7;1326:2;1321;1317;1313:11;1309:20;1306:33;1303:53;;;1352:1;1349;1342:12;1303:53;1365:68;1430:2;1425;1417:6;1413:15;1408:2;1404;1400:11;1365:68;:::i;:::-;1452:6;1442:16;;;;;;;401:1063;;;;;:::o;1883:287::-;2012:3;2050:6;2044:13;2066:66;2125:6;2120:3;2113:4;2105:6;2101:17;2066:66;:::i;:::-;2148:16;;;;;1883:287;-1:-1:-1;;1883:287:19:o;2533:396::-;2682:2;2671:9;2664:21;2645:4;2714:6;2708:13;2757:6;2752:2;2741:9;2737:18;2730:34;2773:79;2845:6;2840:2;2829:9;2825:18;2820:2;2812:6;2808:15;2773:79;:::i;:::-;2913:2;2892:15;-1:-1:-1;;2888:29:19;2873:45;;;;2920:2;2869:54;;2533:396;-1:-1:-1;;2533:396:19:o;:::-;567:723:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_497": {
									"entryPoint": null,
									"id": 497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_502": {
									"entryPoint": null,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_462": {
									"entryPoint": 159,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_481": {
									"entryPoint": 23,
									"id": 481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_177": {
									"entryPoint": null,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_146": {
									"entryPoint": 103,
									"id": 146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_842": {
									"entryPoint": 449,
									"id": 842,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_730": {
									"entryPoint": 41,
									"id": 730,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_759": {
									"entryPoint": 195,
									"id": 759,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_875": {
									"entryPoint": 100,
									"id": 875,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_531": {
									"entryPoint": 85,
									"id": 531,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_798": {
									"entryPoint": 315,
									"id": 798,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1317:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:19",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:19",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:19"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:19"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:19"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:19"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:19"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:19"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:19"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:19",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:19",
																"statements": []
															},
															"src": "109:113:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:19"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:19"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:19",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:19",
														"type": ""
													}
												],
												"src": "14:250:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:150:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "416:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "436:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "430:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "420:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "491:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "499:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:17:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "506:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "452:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:66:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "452:66:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "527:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "538:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "543:6:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:16:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "382:3:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "387:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "398:3:19",
														"type": ""
													}
												],
												"src": "269:287:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "735:179:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "763:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "745:21:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "797:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:18:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "802:2:19",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:30:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "825:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "836:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "821:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "821:18:19"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "841:31:19",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "814:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:59:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "814:59:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "882:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "894:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "905:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "882:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "712:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "726:4:19",
														"type": ""
													}
												],
												"src": "561:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:275:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1057:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1068:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:21:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1080:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1100:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1094:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:13:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1084:6:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1127:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1138:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1143:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1116:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1116:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1116:34:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1198:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1206:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:15:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1226:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1211:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:18:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1231:6:19"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1159:34:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:79:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1247:62:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1263:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1282:6:19"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1290:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1278:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1278:15:19"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1299:2:19",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1295:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1295:7:19"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1274:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1274:29:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1259:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1259:45:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1255:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1255:54:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1247:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1009:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1031:4:19",
														"type": ""
													}
												],
												"src": "919:396:19"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025f602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516100e0919061020f565b600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101318683838761013b565b9695505050505050565b606083156101af5782516000036101a8576001600160a01b0385163b6101a85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b50816101b9565b6101b983836101c1565b949350505050565b8151156101d15781518083602001fd5b8060405162461bcd60e51b815260040161019f919061022b565b60005b838110156102065781810151838201526020016101ee565b50506000910152565b600082516102218184602087016101eb565b9190910192915050565b602081526000825180602084015261024a8160408501602087016101eb565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202d7b152f007afac46d5af3100c39cebff610880979127ee4843f358cb406f89964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x67 JUMP JUMPDEST PUSH2 0x9F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25F PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xBE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x20F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x131 DUP7 DUP4 DUP4 DUP8 PUSH2 0x13B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1AF JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x1A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x1A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP2 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1B9 DUP4 DUP4 PUSH2 0x1C1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1D1 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x22B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x206 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EE JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x221 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24A DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212202D7B15 0x2F STOP PUSH27 0xFAC46D5AF3100C39CEBFF610880979127EE4843F358CB406F89964 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "567:723:3:-:0;;;;;;2898:11:5;:9;:11::i;:::-;567:723:3;;2675:11:5;2322:110;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;6674:198:7:-;6757:12;6788:77;6809:6;6817:4;6788:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6781:84;6674:198;-1:-1:-1;;;6674:198:7:o;1412:320::-;-1:-1:-1;;;;;1702:19:7;;:23;;;1412:320::o;1859:190:8:-;2029:4;1859:190::o;1148:140:3:-;1215:12;1246:35;1030:66:4;1254:54;-1:-1:-1;;;;;1254:54:4;;1175:140;1246:35:3;1239:42;;1148:140;:::o;948:895:5:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;7058:325:7;7199:12;7224;7238:23;7265:6;-1:-1:-1;;;;;7265:19:7;7285:4;7265:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7223:67;;;;7307:69;7334:6;7342:7;7351:10;7363:12;7307:26;:69::i;:::-;7300:76;7058:325;-1:-1:-1;;;;;;7058:325:7:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:7;;;8113:60;;;;-1:-1:-1;;;8113:60:7;;763:2:19;8113:60:7;;;745:21:19;802:2;782:18;;;775:30;841:31;821:18;;;814:59;890:18;;8113:60:7;;;;;;;;;-1:-1:-1;8208:10:7;8201:17;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;:::o;8821:540::-;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:7;;;;;;;;:::i;14:250:19:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:19;238:16;;231:27;14:250::o;269:287::-;398:3;436:6;430:13;452:66;511:6;506:3;499:4;491:6;487:17;452:66;:::i;:::-;534:16;;;;;269:287;-1:-1:-1;;269:287:19:o;919:396::-;1068:2;1057:9;1050:21;1031:4;1100:6;1094:13;1143:6;1138:2;1127:9;1123:18;1116:34;1159:79;1231:6;1226:2;1215:9;1211:18;1206:2;1198:6;1194:15;1159:79;:::i;:::-;1299:2;1278:15;-1:-1:-1;;1274:29:19;1259:45;;;;1306:2;1255:54;;919:396;-1:-1:-1;;919:396:19:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2156"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 958,
									"end": 1070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1024,
									"end": 1063,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1042,
									"end": 1048,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1050,
									"end": 1055,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1057,
									"end": 1062,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1024,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1024,
									"end": 1063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1024,
									"end": 1063,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1024,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 958,
									"end": 1070,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "56"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2057,
									"end": 2322,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2057,
									"end": 2322,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2165,
									"end": 2194,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2176,
									"end": 2193,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2165,
									"end": 2175,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2165,
									"end": 2194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2165,
									"end": 2194,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 2165,
									"end": 2194,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2222,
									"end": 2223,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2208,
									"end": 2212,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2208,
									"end": 2219,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2208,
									"end": 2223,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2208,
									"end": 2236,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2208,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2208,
									"end": 2236,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2208,
									"end": 2236,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2227,
									"end": 2236,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2208,
									"end": 2236,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2208,
									"end": 2236,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2204,
									"end": 2316,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2204,
									"end": 2316,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2204,
									"end": 2316,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2305,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2281,
									"end": 2298,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2304,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2252,
									"end": 2280,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2280,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551626"
								},
								{
									"begin": 2252,
									"end": 2280,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2305,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2252,
									"end": 2305,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2305,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2252,
									"end": 2305,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2252,
									"end": 2305,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2204,
									"end": 2316,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2204,
									"end": 2316,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2057,
									"end": 2322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2057,
									"end": 2322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2057,
									"end": 2322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2057,
									"end": 2322,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1923,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1771,
									"end": 1923,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1837,
									"end": 1874,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1856,
									"end": 1873,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1837,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1837,
									"end": 1874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1837,
									"end": 1874,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1837,
									"end": 1874,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "PUSH",
									"source": 4,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1889,
									"end": 1916,
									"name": "LOG2",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1923,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6757,
									"end": 6769,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 6809,
									"end": 6815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6821,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH data",
									"source": 7,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "PUSH",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6808,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6788,
									"end": 6865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 6788,
									"end": 6865,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6781,
									"end": 6865,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 6674,
									"end": 6872,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6674,
									"end": 6872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1406,
									"end": 1665,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1406,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1524,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1506,
									"end": 1523,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551627"
								},
								{
									"begin": 1487,
									"end": 1505,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1524,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1487,
									"end": 1524,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1524,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1487,
									"end": 1524,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1487,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1673,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1653,
									"end": 1674,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1710,
									"end": 1712,
									"name": "PUSH",
									"source": 19,
									"value": "2D"
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1683,
									"end": 1713,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1749,
									"end": 1783,
									"name": "PUSH",
									"source": 19,
									"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "PUSH",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1729,
									"end": 1747,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1722,
									"end": 1784,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1800,
									"end": 1818,
									"name": "PUSH",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 1800,
									"end": 1818,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1800,
									"end": 1818,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1793,
									"end": 1836,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "PUSH",
									"source": 19,
									"value": "84"
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1479,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1641,
									"end": 1658,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1632,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1030,
									"end": 1096,
									"name": "PUSH",
									"source": 4,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
								},
								{
									"begin": 1611,
									"end": 1631,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1611,
									"end": 1631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1610,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1584,
									"end": 1610,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1584,
									"end": 1610,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1610,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551628"
								},
								{
									"begin": 1584,
									"end": 1610,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1632,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1584,
									"end": 1632,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1632,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1584,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1584,
									"end": 1658,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1406,
									"end": 1665,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7199,
									"end": 7211,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7224,
									"end": 7236,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7238,
									"end": 7261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7271,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7265,
									"end": 7284,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7285,
									"end": 7289,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 7265,
									"end": 7290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "GAS",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DELEGATECALL",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATASIZE",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "RETURNDATACOPY",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 7265,
									"end": 7290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 7334,
									"end": 7340,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7223,
									"end": 7290,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7363,
									"end": 7375,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7307,
									"end": 7333,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 7307,
									"end": 7376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 7307,
									"end": 7376,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7300,
									"end": 7376,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 7058,
									"end": 7383,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7058,
									"end": 7383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1412,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1412,
									"end": 1732,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1859,
									"end": 2049,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1859,
									"end": 2049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2029,
									"end": 2033,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1859,
									"end": 2049,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7851,
									"end": 7863,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7879,
									"end": 7886,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7906,
									"end": 7923,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7927,
									"end": 7928,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7906,
									"end": 7928,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 7902,
									"end": 8188,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1721,
									"name": "EXTCODESIZE",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2379,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2359,
									"end": 2380,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2416,
									"end": 2418,
									"name": "PUSH",
									"source": 19,
									"value": "1D"
								},
								{
									"begin": 2396,
									"end": 2414,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 2396,
									"end": 2414,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2396,
									"end": 2414,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2389,
									"end": 2419,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2455,
									"end": 2486,
									"name": "PUSH",
									"source": 19,
									"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
								},
								{
									"begin": 2435,
									"end": 2453,
									"name": "PUSH",
									"source": 19,
									"value": "44"
								},
								{
									"begin": 2435,
									"end": 2453,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2435,
									"end": 2453,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2428,
									"end": 2487,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2504,
									"end": 2522,
									"name": "PUSH",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 2504,
									"end": 2522,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2175,
									"end": 2528,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 8113,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8208,
									"end": 8218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 8201,
									"end": 8218,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7875,
									"end": 8293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 8257,
									"end": 8267,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8269,
									"end": 8281,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8249,
									"end": 8282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 8249,
									"end": 8282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7671,
									"end": 8299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 8821,
									"end": 9361,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 8997,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8980,
									"end": 9001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9208,
									"end": 9218,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9202,
									"end": 9219,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 9264,
									"end": 9279,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9251,
									"end": 9261,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9247,
									"end": 9249,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9243,
									"end": 9262,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9236,
									"end": 9280,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 8976,
									"end": 9355,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9331,
									"end": 9343,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9324,
									"end": 9344,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 9324,
									"end": 9344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 19,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 19,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 19
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 19,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 19,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 146,
									"end": 396,
									"name": "tag",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 146,
									"end": 396,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 231,
									"end": 232,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 255,
									"end": 261,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 252,
									"end": 253,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 249,
									"end": 262,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 241,
									"end": 354,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 331,
									"end": 342,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 331,
									"end": 342,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 325,
									"end": 343,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 312,
									"end": 323,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 312,
									"end": 323,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 305,
									"end": 344,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 277,
									"end": 279,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 270,
									"end": 280,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 241,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "59"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 241,
									"end": 354,
									"name": "tag",
									"source": 19,
									"value": "61"
								},
								{
									"begin": 241,
									"end": 354,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 388,
									"end": 389,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 386,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 370,
									"end": 386,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 363,
									"end": 390,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 146,
									"end": 396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "tag",
									"source": 19,
									"value": "2"
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 489,
									"end": 495,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 497,
									"end": 503,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 538,
									"end": 547,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 529,
									"end": 536,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 525,
									"end": 548,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 521,
									"end": 553,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 518,
									"end": 570,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 518,
									"end": 570,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 518,
									"end": 570,
									"name": "tag",
									"source": 19,
									"value": "63"
								},
								{
									"begin": 518,
									"end": 570,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 592,
									"end": 608,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 592,
									"end": 608,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 637,
									"end": 668,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 637,
									"end": 668,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 627,
									"end": 669,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 627,
									"end": 669,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 617,
									"end": 687,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 683,
									"end": 684,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 680,
									"end": 681,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 673,
									"end": 685,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 617,
									"end": 687,
									"name": "tag",
									"source": 19,
									"value": "64"
								},
								{
									"begin": 617,
									"end": 687,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 755,
									"end": 757,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 740,
									"end": 758,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 734,
									"end": 759,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 706,
									"end": 711,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 808,
									"end": 822,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 808,
									"end": 822,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 808,
									"end": 822,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 805,
									"end": 839,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 805,
									"end": 839,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "65"
								},
								{
									"begin": 805,
									"end": 839,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 835,
									"end": 836,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 832,
									"end": 833,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 825,
									"end": 837,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 805,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "65"
								},
								{
									"begin": 805,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 873,
									"end": 879,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 862,
									"end": 871,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 858,
									"end": 880,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 848,
									"end": 880,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 848,
									"end": 880,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 918,
									"end": 925,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 911,
									"end": 915,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 907,
									"end": 909,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 903,
									"end": 916,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 899,
									"end": 926,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 889,
									"end": 944,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 889,
									"end": 944,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 940,
									"end": 941,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 938,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 930,
									"end": 942,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 889,
									"end": 944,
									"name": "tag",
									"source": 19,
									"value": "66"
								},
								{
									"begin": 889,
									"end": 944,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 969,
									"end": 971,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 963,
									"end": 972,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 991,
									"end": 993,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 987,
									"end": 989,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 984,
									"end": 994,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 981,
									"end": 1017,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 981,
									"end": 1017,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 981,
									"end": 1017,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 997,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "tag",
									"source": 19,
									"value": "68"
								},
								{
									"begin": 997,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1072,
									"end": 1074,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1075,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 1040,
									"end": 1042,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 1126,
									"end": 1139,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1126,
									"end": 1139,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1122,
									"end": 1144,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1144,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1144,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1146,
									"end": 1148,
									"name": "PUSH",
									"source": 19,
									"value": "3F"
								},
								{
									"begin": 1118,
									"end": 1149,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1114,
									"end": 1154,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 1102,
									"end": 1155,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1102,
									"end": 1155,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1102,
									"end": 1155,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1190,
									"end": 1212,
									"name": "LT",
									"source": 19
								},
								{
									"begin": 1167,
									"end": 1213,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 1164,
									"end": 1236,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1164,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1164,
									"end": 1236,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "54"
								},
								{
									"begin": 1216,
									"end": 1234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "tag",
									"source": 19,
									"value": "70"
								},
								{
									"begin": 1216,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1256,
									"end": 1266,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1252,
									"end": 1254,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 1245,
									"end": 1267,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1291,
									"end": 1293,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1283,
									"end": 1289,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1331,
									"end": 1338,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 1326,
									"end": 1328,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 1323,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1317,
									"end": 1319,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 1313,
									"end": 1324,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1309,
									"end": 1329,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1306,
									"end": 1339,
									"name": "GT",
									"source": 19
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "71"
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1349,
									"end": 1350,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1342,
									"end": 1354,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "tag",
									"source": 19,
									"value": "71"
								},
								{
									"begin": 1303,
									"end": 1356,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 1430,
									"end": 1432,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1417,
									"end": 1423,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1413,
									"end": 1428,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1408,
									"end": 1410,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1404,
									"end": 1406,
									"name": "DUP9",
									"source": 19
								},
								{
									"begin": 1400,
									"end": 1411,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 1365,
									"end": 1433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "tag",
									"source": 19,
									"value": "72"
								},
								{
									"begin": 1365,
									"end": 1433,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1452,
									"end": 1458,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "SWAP6",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1442,
									"end": 1458,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 401,
									"end": 1464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1883,
									"end": 2170,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 1883,
									"end": 2170,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2012,
									"end": 2015,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2050,
									"end": 2056,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 2125,
									"end": 2131,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2120,
									"end": 2123,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2113,
									"end": 2117,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2105,
									"end": 2111,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 2101,
									"end": 2118,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 2066,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "tag",
									"source": 19,
									"value": "75"
								},
								{
									"begin": 2066,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2148,
									"end": 2164,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1883,
									"end": 2170,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1883,
									"end": 2170,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "tag",
									"source": 19,
									"value": "53"
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2682,
									"end": 2684,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2671,
									"end": 2680,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2664,
									"end": 2685,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2645,
									"end": 2649,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 2714,
									"end": 2720,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 2708,
									"end": 2721,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 2757,
									"end": 2763,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2741,
									"end": 2750,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 2737,
									"end": 2755,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2730,
									"end": 2764,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 2845,
									"end": 2851,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 2840,
									"end": 2842,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 2829,
									"end": 2838,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 2825,
									"end": 2843,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2820,
									"end": 2822,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP8",
									"source": 19
								},
								{
									"begin": 2808,
									"end": 2823,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "55"
								},
								{
									"begin": 2773,
									"end": 2852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "tag",
									"source": 19,
									"value": "78"
								},
								{
									"begin": 2773,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 2913,
									"end": 2915,
									"name": "PUSH",
									"source": 19,
									"value": "1F"
								},
								{
									"begin": 2892,
									"end": 2907,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2888,
									"end": 2917,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 2873,
									"end": 2918,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2920,
									"end": 2922,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2923,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 2869,
									"end": 2923,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2533,
									"end": 2929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "tag",
									"source": 19,
									"value": "56"
								},
								{
									"begin": 2533,
									"end": 2929,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 1290,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d7b152f007afac46d5af3100c39cebff610880979127ee4843f358cb406f89964736f6c63430008110033",
									".code": [
										{
											"begin": 567,
											"end": 1290,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2898,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 567,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2675,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2322,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2407,
											"end": 2424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2397,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2397,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6757,
											"end": 6769,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6809,
											"end": 6815,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6821,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH data",
											"source": 7,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6788,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6788,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6865,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6872,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6674,
											"end": 6872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1859,
											"end": 2049,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1859,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1148,
											"end": 1288,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1148,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1215,
											"end": 1227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1030,
											"end": 1096,
											"name": "PUSH",
											"source": 4,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1308,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1175,
											"end": 1315,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1281,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1246,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1281,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1288,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1148,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1267,
											"end": 1301,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1495,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1502,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 1592,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1571,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1593,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1813,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1681,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1732,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7265,
											"end": 7284,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7285,
											"end": 7289,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 7265,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DELEGATECALL",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7223,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 7334,
											"end": 7340,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7342,
											"end": 7349,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7307,
											"end": 7376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 7307,
											"end": 7376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7300,
											"end": 7376,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7058,
											"end": 7383,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7058,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 763,
											"end": 765,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 766,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 802,
											"end": 804,
											"name": "PUSH",
											"source": 19,
											"value": "1D"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 775,
											"end": 805,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 841,
											"end": 872,
											"name": "PUSH",
											"source": 19,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "PUSH",
											"source": 19,
											"value": "44"
										},
										{
											"begin": 821,
											"end": 839,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 821,
											"end": 839,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 814,
											"end": 873,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 890,
											"end": 908,
											"name": "PUSH",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 264,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 14,
											"end": 264,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 123,
											"end": 129,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 120,
											"end": 121,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 117,
											"end": 130,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 109,
											"end": 222,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 199,
											"end": 210,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 199,
											"end": 210,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 193,
											"end": 211,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 180,
											"end": 191,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 180,
											"end": 191,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 173,
											"end": 212,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 145,
											"end": 147,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 138,
											"end": 148,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 109,
											"end": 222,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 109,
											"end": 222,
											"name": "tag",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 109,
											"end": 222,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 254,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 238,
											"end": 254,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 231,
											"end": 258,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 14,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 269,
											"end": 556,
											"name": "tag",
											"source": 19,
											"value": "34"
										},
										{
											"begin": 269,
											"end": 556,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 398,
											"end": 401,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 442,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 430,
											"end": 443,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 452,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 506,
											"end": 509,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 487,
											"end": 504,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 452,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 452,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 452,
											"end": 518,
											"name": "tag",
											"source": 19,
											"value": "64"
										},
										{
											"begin": 452,
											"end": 518,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 534,
											"end": 550,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 534,
											"end": 550,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 269,
											"end": 556,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 269,
											"end": 556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 919,
											"end": 1315,
											"name": "tag",
											"source": 19,
											"value": "56"
										},
										{
											"begin": 919,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1066,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1050,
											"end": 1071,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1031,
											"end": 1035,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1138,
											"end": 1140,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1127,
											"end": 1136,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1116,
											"end": 1150,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1226,
											"end": 1228,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1224,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1206,
											"end": 1208,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 1194,
											"end": 1209,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 1159,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "tag",
											"source": 19,
											"value": "67"
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1299,
											"end": 1301,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1278,
											"end": 1293,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1303,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1259,
											"end": 1304,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1255,
											"end": 1309,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 919,
											"end": 1315,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 919,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							},
							"sourceList": [
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/permission/PermissionLib.sol",
								"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
								"packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
								"packages/contracts/src/utils/Proxy.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122067c0c860daed240bcc2affc87c5999f0dac01a6247f5fc5c03e1afed7f7328dd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067c0c860daed240bcc2affc87c5999f0dac01a6247f5fc5c03e1afed7f7328dd64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xC0C860DAED240BCC 0x2A SELFDESTRUCT 0xC8 PUSH29 0x5999F0DAC01A6247F5FC5C03E1AFED7F7328DD64736F6C634300081100 CALLER ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9169:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122067c0c860daed240bcc2affc87c5999f0dac01a6247f5fc5c03e1afed7f7328dd64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0xC0C860DAED240BCC 0x2A SELFDESTRUCT 0xC8 PUSH29 0x5999F0DAC01A6247F5FC5C03E1AFED7F7328DD64736F6C634300081100 CALLER ",
							"sourceMap": "194:9169:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122067c0c860daed240bcc2affc87c5999f0dac01a6247f5fc5c03e1afed7f7328dd64736f6c63430008110033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/permission/PermissionLib.sol",
								"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
								"packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
								"packages/contracts/src/utils/Proxy.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":1420:4105  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbe40e517fe4aae827ea473191c70bee606754d7d864e929313d2082d24a956064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbe40e517fe4aae827ea473191c70bee606754d7d864e929313d2082d24a956064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xE4 0xE MLOAD PUSH32 0xE4AAE827EA473191C70BEE606754D7D864E929313D2082D24A956064736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1420:2685:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2685:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dbe40e517fe4aae827ea473191c70bee606754d7d864e929313d2082d24a956064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xE4 0xE MLOAD PUSH32 0xE4AAE827EA473191C70BEE606754D7D864E929313D2082D24A956064736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "1420:2685:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1420,
									"end": 4105,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbe40e517fe4aae827ea473191c70bee606754d7d864e929313d2082d24a956064736f6c63430008110033",
									".code": [
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1420,
											"end": 4105,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/permission/PermissionLib.sol",
								"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
								"packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
								"packages/contracts/src/utils/Proxy.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol": {
				"ERC165Checker": {
					"abi": [],
					"devdoc": {
						"details": "Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol\":449:5070  library ERC165Checker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol\":449:5070  library ERC165Checker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ba382a3b89831fe0a225cedbc3660efbdfb1e6542f16dcd23183971d58d29bcd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba382a3b89831fe0a225cedbc3660efbdfb1e6542f16dcd23183971d58d29bcd64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA CODESIZE 0x2A EXTCODESIZE DUP10 DUP4 0x1F 0xE0 LOG2 0x25 0xCE 0xDB 0xC3 PUSH7 0xEFBDFB1E6542F AND 0xDC 0xD2 BALANCE DUP4 SWAP8 SAR PC 0xD2 SWAP12 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "449:4621:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:4621:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba382a3b89831fe0a225cedbc3660efbdfb1e6542f16dcd23183971d58d29bcd64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA CODESIZE 0x2A EXTCODESIZE DUP10 DUP4 0x1F 0xE0 LOG2 0x25 0xCE 0xDB 0xC3 PUSH7 0xEFBDFB1E6542F AND 0xDC 0xD2 BALANCE DUP4 SWAP8 SAR PC 0xD2 SWAP12 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "449:4621:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getSupportedInterfaces(address,bytes4[] memory)": "infinite",
								"supportsAllInterfaces(address,bytes4[] memory)": "infinite",
								"supportsERC165(address)": "infinite",
								"supportsERC165InterfaceUnchecked(address,bytes4)": "infinite",
								"supportsInterface(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 449,
									"end": 5070,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba382a3b89831fe0a225cedbc3660efbdfb1e6542f16dcd23183971d58d29bcd64736f6c63430008110033",
									".code": [
										{
											"begin": 449,
											"end": 5070,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 449,
											"end": 5070,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/permission/PermissionLib.sol",
								"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
								"packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
								"packages/contracts/src/utils/Proxy.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"IDAO": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_reference",
									"type": "string"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "actor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "callId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"indexed": false,
									"internalType": "struct IDAO.Action[]",
									"name": "actions",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "allowFailureMap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "failureMap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes[]",
									"name": "execResults",
									"type": "bytes[]"
								}
							],
							"name": "Executed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "metadata",
									"type": "bytes"
								}
							],
							"name": "MetadataSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NativeTokenDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "callbackSelector",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "magicNumber",
									"type": "bytes4"
								}
							],
							"name": "StandardCallbackRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "TrustedForwarderSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_reference",
									"type": "string"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_callId",
									"type": "bytes32"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "to",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IDAO.Action[]",
									"name": "_actions",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_allowFailureMap",
									"type": "uint256"
								}
							],
							"name": "execute",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "",
									"type": "bytes[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_where",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_permissionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "hasPermission",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "_callbackSelector",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "_magicNumber",
									"type": "bytes4"
								}
							],
							"name": "registerStandardCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_metadata",
									"type": "bytes"
								}
							],
							"name": "setMetadata",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setSignatureValidator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_trustedForwarder",
									"type": "address"
								}
							],
							"name": "setTrustedForwarder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"events": {
							"Deposited(address,address,uint256,string)": {
								"params": {
									"_reference": "The reference describing the deposit reason.",
									"amount": "The amount of tokens deposited.",
									"sender": "The address of the sender.",
									"token": "The address of the deposited token."
								}
							},
							"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])": {
								"details": "The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.",
								"params": {
									"actions": "The array of actions executed.",
									"actor": "The address of the caller.",
									"allowFailureMap": "The allow failure map encoding which actions are allowed to fail.",
									"callId": "The ID of the call.",
									"execResults": "The array with the results of the executed actions.",
									"failureMap": "The failure map encoding which actions have failed."
								}
							},
							"MetadataSet(bytes)": {
								"params": {
									"metadata": "The IPFS hash of the new metadata object."
								}
							},
							"NativeTokenDeposited(address,uint256)": {
								"details": "This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).",
								"params": {
									"amount": "The amount of native tokens deposited.",
									"sender": "The address of the sender."
								}
							},
							"StandardCallbackRegistered(bytes4,bytes4,bytes4)": {
								"params": {
									"callbackSelector": "The selector of the callback function.",
									"interfaceId": "The ID of the interface.",
									"magicNumber": "The magic number to be registered for the callback function selector."
								}
							},
							"TrustedForwarderSet(address)": {
								"params": {
									"forwarder": "the new forwarder address."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256,string)": {
								"params": {
									"_amount": "The amount of tokens to deposit.",
									"_reference": "The reference describing the deposit reason.",
									"_token": "The address of the token or address(0) in case of the native token."
								}
							},
							"execute(bytes32,(address,uint256,bytes)[],uint256)": {
								"params": {
									"_actions": "The array of actions.",
									"_allowFailureMap": "A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.",
									"_callId": "The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce."
								},
								"returns": {
									"_0": "The array of results obtained from the executed actions in `bytes`.",
									"_1": "The resulting failure map containing the actions have actually failed."
								}
							},
							"getTrustedForwarder()": {
								"returns": {
									"_0": "The trusted forwarder address."
								}
							},
							"hasPermission(address,address,bytes32,bytes)": {
								"params": {
									"_data": "The optional data passed to the `PermissionCondition` registered.",
									"_permissionId": "The permission identifier.",
									"_where": "The address of the contract.",
									"_who": "The address of a EOA or contract to give the permissions."
								},
								"returns": {
									"_0": "Returns true if the address has permission, false if not."
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"params": {
									"_hash": "The hash of the data to be signed.",
									"_signature": "The signature byte array associated with `_hash`."
								},
								"returns": {
									"_0": "Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not."
								}
							},
							"registerStandardCallback(bytes4,bytes4,bytes4)": {
								"params": {
									"_callbackSelector": "The selector of the callback function.",
									"_interfaceId": "The ID of the interface.",
									"_magicNumber": "The magic number to be registered for the function signature."
								}
							},
							"setMetadata(bytes)": {
								"params": {
									"_metadata": "The IPFS hash of the new metadata object."
								}
							},
							"setSignatureValidator(address)": {
								"details": "Introduced in v1.0.0. Removed in v1.4.0."
							},
							"setTrustedForwarder(address)": {
								"params": {
									"_trustedForwarder": "The trusted forwarder address."
								}
							}
						},
						"title": "IDAO",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(address,uint256,string)": "bfe07da6",
							"execute(bytes32,(address,uint256,bytes)[],uint256)": "c71bf324",
							"getTrustedForwarder()": "ce1b815f",
							"hasPermission(address,address,bytes32,bytes)": "fdef9106",
							"isValidSignature(bytes32,bytes)": "1626ba7e",
							"registerStandardCallback(bytes4,bytes4,bytes4)": "c4a50145",
							"setMetadata(bytes)": "ee57e36f",
							"setSignatureValidator(address)": "3e2ab0d9",
							"setTrustedForwarder(address)": "da742228"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"actor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct IDAO.Action[]\",\"name\":\"actions\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowFailureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failureMap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"execResults\",\"type\":\"bytes[]\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"callbackSelector\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"magicNumber\",\"type\":\"bytes4\"}],\"name\":\"StandardCallbackRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"TrustedForwarderSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reference\",\"type\":\"string\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_callId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IDAO.Action[]\",\"name\":\"_actions\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_allowFailureMap\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_permissionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"hasPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackSelector\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"_magicNumber\",\"type\":\"bytes4\"}],\"name\":\"registerStandardCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setSignatureValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedForwarder\",\"type\":\"address\"}],\"name\":\"setTrustedForwarder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"events\":{\"Deposited(address,address,uint256,string)\":{\"params\":{\"_reference\":\"The reference describing the deposit reason.\",\"amount\":\"The amount of tokens deposited.\",\"sender\":\"The address of the sender.\",\"token\":\"The address of the deposited token.\"}},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"details\":\"The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce.\",\"params\":{\"actions\":\"The array of actions executed.\",\"actor\":\"The address of the caller.\",\"allowFailureMap\":\"The allow failure map encoding which actions are allowed to fail.\",\"callId\":\"The ID of the call.\",\"execResults\":\"The array with the results of the executed actions.\",\"failureMap\":\"The failure map encoding which actions have failed.\"}},\"MetadataSet(bytes)\":{\"params\":{\"metadata\":\"The IPFS hash of the new metadata object.\"}},\"NativeTokenDeposited(address,uint256)\":{\"details\":\"This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\",\"params\":{\"amount\":\"The amount of native tokens deposited.\",\"sender\":\"The address of the sender.\"}},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"params\":{\"callbackSelector\":\"The selector of the callback function.\",\"interfaceId\":\"The ID of the interface.\",\"magicNumber\":\"The magic number to be registered for the callback function selector.\"}},\"TrustedForwarderSet(address)\":{\"params\":{\"forwarder\":\"the new forwarder address.\"}}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256,string)\":{\"params\":{\"_amount\":\"The amount of tokens to deposit.\",\"_reference\":\"The reference describing the deposit reason.\",\"_token\":\"The address of the token or address(0) in case of the native token.\"}},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"params\":{\"_actions\":\"The array of actions.\",\"_allowFailureMap\":\"A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\",\"_callId\":\"The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\"},\"returns\":{\"_0\":\"The array of results obtained from the executed actions in `bytes`.\",\"_1\":\"The resulting failure map containing the actions have actually failed.\"}},\"getTrustedForwarder()\":{\"returns\":{\"_0\":\"The trusted forwarder address.\"}},\"hasPermission(address,address,bytes32,bytes)\":{\"params\":{\"_data\":\"The optional data passed to the `PermissionCondition` registered.\",\"_permissionId\":\"The permission identifier.\",\"_where\":\"The address of the contract.\",\"_who\":\"The address of a EOA or contract to give the permissions.\"},\"returns\":{\"_0\":\"Returns true if the address has permission, false if not.\"}},\"isValidSignature(bytes32,bytes)\":{\"params\":{\"_hash\":\"The hash of the data to be signed.\",\"_signature\":\"The signature byte array associated with `_hash`.\"},\"returns\":{\"_0\":\"Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not.\"}},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"params\":{\"_callbackSelector\":\"The selector of the callback function.\",\"_interfaceId\":\"The ID of the interface.\",\"_magicNumber\":\"The magic number to be registered for the function signature.\"}},\"setMetadata(bytes)\":{\"params\":{\"_metadata\":\"The IPFS hash of the new metadata object.\"}},\"setSignatureValidator(address)\":{\"details\":\"Introduced in v1.0.0. Removed in v1.4.0.\"},\"setTrustedForwarder(address)\":{\"params\":{\"_trustedForwarder\":\"The trusted forwarder address.\"}}},\"title\":\"IDAO\",\"version\":1},\"userdoc\":{\"events\":{\"Deposited(address,address,uint256,string)\":{\"notice\":\"Emitted when a token deposit has been made to the DAO.\"},\"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])\":{\"notice\":\"Emitted when a proposal is executed.\"},\"MetadataSet(bytes)\":{\"notice\":\"Emitted when the DAO metadata is updated.\"},\"NativeTokenDeposited(address,uint256)\":{\"notice\":\"Emitted when a native token deposit has been made to the DAO.\"},\"StandardCallbackRegistered(bytes4,bytes4,bytes4)\":{\"notice\":\"Emitted when a standard callback is registered.\"},\"TrustedForwarderSet(address)\":{\"notice\":\"Emitted when a new TrustedForwarder is set on the DAO.\"}},\"kind\":\"user\",\"methods\":{\"deposit(address,uint256,string)\":{\"notice\":\"Deposits (native) tokens to the DAO contract with a reference string.\"},\"execute(bytes32,(address,uint256,bytes)[],uint256)\":{\"notice\":\"Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\"},\"getTrustedForwarder()\":{\"notice\":\"Getter for the trusted forwarder verifying the meta transaction.\"},\"hasPermission(address,address,bytes32,bytes)\":{\"notice\":\"Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\"},\"registerStandardCallback(bytes4,bytes4,bytes4)\":{\"notice\":\"Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\"},\"setMetadata(bytes)\":{\"notice\":\"Updates the DAO metadata (e.g., an IPFS hash).\"},\"setSignatureValidator(address)\":{\"notice\":\"Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\"},\"setTrustedForwarder(address)\":{\"notice\":\"Setter for the trusted forwarder verifying the meta transaction.\"}},\"notice\":\"The interface required for DAOs within the Aragon App DAO framework.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/core/dao/IDAO.sol\":\"IDAO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Deposited(address,address,uint256,string)": {
								"notice": "Emitted when a token deposit has been made to the DAO."
							},
							"Executed(address,bytes32,(address,uint256,bytes)[],uint256,uint256,bytes[])": {
								"notice": "Emitted when a proposal is executed."
							},
							"MetadataSet(bytes)": {
								"notice": "Emitted when the DAO metadata is updated."
							},
							"NativeTokenDeposited(address,uint256)": {
								"notice": "Emitted when a native token deposit has been made to the DAO."
							},
							"StandardCallbackRegistered(bytes4,bytes4,bytes4)": {
								"notice": "Emitted when a standard callback is registered."
							},
							"TrustedForwarderSet(address)": {
								"notice": "Emitted when a new TrustedForwarder is set on the DAO."
							}
						},
						"kind": "user",
						"methods": {
							"deposit(address,uint256,string)": {
								"notice": "Deposits (native) tokens to the DAO contract with a reference string."
							},
							"execute(bytes32,(address,uint256,bytes)[],uint256)": {
								"notice": "Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted."
							},
							"getTrustedForwarder()": {
								"notice": "Getter for the trusted forwarder verifying the meta transaction."
							},
							"hasPermission(address,address,bytes32,bytes)": {
								"notice": "Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process."
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271)."
							},
							"registerStandardCallback(bytes4,bytes4,bytes4)": {
								"notice": "Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature."
							},
							"setMetadata(bytes)": {
								"notice": "Updates the DAO metadata (e.g., an IPFS hash)."
							},
							"setSignatureValidator(address)": {
								"notice": "Removed function being left here to not corrupt the IDAO interface ID. Any call will revert."
							},
							"setTrustedForwarder(address)": {
								"notice": "Setter for the trusted forwarder verifying the meta transaction."
							}
						},
						"notice": "The interface required for DAOs within the Aragon App DAO framework.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/core/permission/PermissionLib.sol": {
				"PermissionLib": {
					"abi": [
						{
							"inputs": [],
							"name": "NO_CONDITION",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2021-2023",
						"custom:security-contact": "sirt@aragon.org",
						"kind": "dev",
						"methods": {},
						"title": "PermissionLib",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/core/permission/PermissionLib.sol\":261:2108  library PermissionLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/core/permission/PermissionLib.sol\":261:2108  library PermissionLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6dd02a5b\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/core/permission/PermissionLib.sol\":375:424  address public constant NO_CONDITION = address(0) */\n    tag_2:\n      tag_3\n        /* \"packages/contracts/src/core/permission/PermissionLib.sol\":422:423  0 */\n      0x00\n        /* \"packages/contracts/src/core/permission/PermissionLib.sol\":375:424  address public constant NO_CONDITION = address(0) */\n      dup2\n      jump\n    tag_3:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":186:218   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":168:219   */\n      dup2\n      mstore\n        /* \"#utility.yul\":156:158   */\n      0x20\n        /* \"#utility.yul\":141:159   */\n      add\n        /* \"packages/contracts/src/core/permission/PermissionLib.sol\":375:424  address public constant NO_CONDITION = address(0) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n\n    auxdata: 0xa26469706673582212205b64d19c4d31650f4ac4b8ef13d24cbe4e2d2bdcfc6ec8e434b3745129a18c3a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6091610038600b82828239805160001a607314602b57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80636dd02a5b146038575b600080fd5b603f600081565b6040516001600160a01b03909116815260200160405180910390f3fea26469706673582212205b64d19c4d31650f4ac4b8ef13d24cbe4e2d2bdcfc6ec8e434b3745129a18c3a64736f6c63430008110033",
							"opcodes": "PUSH1 0x91 PUSH2 0x38 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DD02A5B EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH5 0xD19C4D3165 0xF 0x4A 0xC4 0xB8 0xEF SGT 0xD2 0x4C 0xBE 0x4E 0x2D 0x2B 0xDC 0xFC PUSH15 0xC8E434B3745129A18C3A64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "261:1847:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;261:1847:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NO_CONDITION_1344": {
									"entryPoint": null,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:227:19",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:19",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "123:102:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "133:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "145:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "156:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "141:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "141:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "133:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "175:9:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "206:3:19",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "211:1:19",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "202:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "202:11:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "215:1:19",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "198:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "198:19:19"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "186:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "186:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "168:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:51:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "168:51:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "92:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "103:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "114:4:19",
														"type": ""
													}
												],
												"src": "14:211:19"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c80636dd02a5b146038575b600080fd5b603f600081565b6040516001600160a01b03909116815260200160405180910390f3fea26469706673582212205b64d19c4d31650f4ac4b8ef13d24cbe4e2d2bdcfc6ec8e434b3745129a18c3a64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6DD02A5B EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST PUSH5 0xD19C4D3165 0xF 0x4A 0xC4 0xB8 0xEF SGT 0xD2 0x4C 0xBE 0x4E 0x2D 0x2B 0xDC 0xFC PUSH15 0xC8E434B3745129A18C3A64736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "261:1847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;375:49;;422:1;375:49;;;;;-1:-1:-1;;;;;186:32:19;;;168:51;;156:2;141:18;375:49:13;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "29000",
								"executionCost": "112",
								"totalCost": "29112"
							},
							"external": {
								"NO_CONDITION()": "166"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 261,
									"end": 2108,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b64d19c4d31650f4ac4b8ef13d24cbe4e2d2bdcfc6ec8e434b3745129a18c3a64736f6c63430008110033",
									".code": [
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "6DD02A5B"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 261,
											"end": 2108,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 375,
											"end": 424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 422,
											"end": 423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 375,
											"end": 424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 424,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 186,
											"end": 218,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 186,
											"end": 218,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 186,
											"end": 218,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 168,
											"end": 219,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 168,
											"end": 219,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 156,
											"end": 158,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 141,
											"end": 159,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 375,
											"end": 424,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 424,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 375,
											"end": 424,
											"name": "RETURN",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
								"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
								"packages/contracts/src/core/dao/IDAO.sol",
								"packages/contracts/src/core/permission/PermissionLib.sol",
								"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
								"packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
								"packages/contracts/src/utils/Proxy.sol",
								"packages/contracts/src/utils/protocol/IProtocolVersion.sol",
								"packages/contracts/src/utils/protocol/ProtocolVersion.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NO_CONDITION()": "6dd02a5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"NO_CONDITION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2021-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PermissionLib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"NO_CONDITION()\":{\"notice\":\"A constant expressing that no condition is applied to a permission.\"}},\"notice\":\"A library containing objects for permission processing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/core/permission/PermissionLib.sol\":\"PermissionLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/core/permission/PermissionLib.sol\":{\"keccak256\":\"0x768b09a4f4c981870791fabda8acfb2d6eb2787cbfb1dd04053565fe8b0e1092\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://be4dfe12c308a1246dba388cde67e8cd25ad4d4d2e1a1e305ab47451a296d24b\",\"dweb:/ipfs/QmW9V14fFYPKKzZjSp99LqxDZHKDKHK3PEx8A7X2adoMWx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"NO_CONDITION()": {
								"notice": "A constant expressing that no condition is applied to a permission."
							}
						},
						"notice": "A library containing objects for permission processing.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol": {
				"IPluginSetup": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dao",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "prepareInstallation",
							"outputs": [
								{
									"internalType": "address",
									"name": "plugin",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "helpers",
											"type": "address[]"
										},
										{
											"components": [
												{
													"internalType": "enum PermissionLib.Operation",
													"name": "operation",
													"type": "uint8"
												},
												{
													"internalType": "address",
													"name": "where",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "who",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "condition",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "permissionId",
													"type": "bytes32"
												}
											],
											"internalType": "struct PermissionLib.MultiTargetPermission[]",
											"name": "permissions",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IPluginSetup.PreparedSetupData",
									"name": "preparedSetupData",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dao",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "plugin",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "currentHelpers",
											"type": "address[]"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IPluginSetup.SetupPayload",
									"name": "_payload",
									"type": "tuple"
								}
							],
							"name": "prepareUninstallation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "enum PermissionLib.Operation",
											"name": "operation",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "where",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "who",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "condition",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "permissionId",
											"type": "bytes32"
										}
									],
									"internalType": "struct PermissionLib.MultiTargetPermission[]",
									"name": "permissions",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dao",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_currentBuild",
									"type": "uint16"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "plugin",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "currentHelpers",
											"type": "address[]"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IPluginSetup.SetupPayload",
									"name": "_payload",
									"type": "tuple"
								}
							],
							"name": "prepareUpdate",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "initData",
									"type": "bytes"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "helpers",
											"type": "address[]"
										},
										{
											"components": [
												{
													"internalType": "enum PermissionLib.Operation",
													"name": "operation",
													"type": "uint8"
												},
												{
													"internalType": "address",
													"name": "where",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "who",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "condition",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "permissionId",
													"type": "bytes32"
												}
											],
											"internalType": "struct PermissionLib.MultiTargetPermission[]",
											"name": "permissions",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IPluginSetup.PreparedSetupData",
									"name": "preparedSetupData",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "The implementation can be instantiated via the `new` keyword, cloned via the minimal clones pattern (see [ERC-1167](https://eips.ethereum.org/EIPS/eip-1167)), or proxied via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).",
								"returns": {
									"_0": "The address of the plugin implementation contract."
								}
							},
							"prepareInstallation(address,bytes)": {
								"params": {
									"_dao": "The address of the installing DAO.",
									"_data": "The bytes-encoded data containing the input parameters for the installation as specified in the plugin's build metadata JSON file."
								},
								"returns": {
									"plugin": "The address of the `Plugin` contract being prepared for installation.",
									"preparedSetupData": "The deployed plugin's relevant data which consists of helpers and permissions."
								}
							},
							"prepareUninstallation(address,(address,address[],bytes))": {
								"params": {
									"_dao": "The address of the uninstalling DAO.",
									"_payload": "The relevant data necessary for the `prepareUninstallation`. See above."
								},
								"returns": {
									"permissions": "The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the uninstalling DAO."
								}
							},
							"prepareUpdate(address,uint16,(address,address[],bytes))": {
								"params": {
									"_currentBuild": "The build number of the plugin to update from.",
									"_dao": "The address of the updating DAO.",
									"_payload": "The relevant data necessary for the `prepareUpdate`. See above."
								},
								"returns": {
									"initData": "The initialization data to be passed to upgradeable contracts when the update is applied in the `PluginSetupProcessor`.",
									"preparedSetupData": "The deployed plugin's relevant data which consists of helpers and permissions."
								}
							}
						},
						"title": "IPluginSetup",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"prepareInstallation(address,bytes)": "f10832f1",
							"prepareUninstallation(address,(address,address[],bytes))": "9cb0a124",
							"prepareUpdate(address,uint16,(address,address[],bytes))": "a8a9c29e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"prepareInstallation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"helpers\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPluginSetup.PreparedSetupData\",\"name\":\"preparedSetupData\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"currentHelpers\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IPluginSetup.SetupPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"prepareUninstallation\",\"outputs\":[{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_currentBuild\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"currentHelpers\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IPluginSetup.SetupPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"prepareUpdate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"helpers\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPluginSetup.PreparedSetupData\",\"name\":\"preparedSetupData\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"The implementation can be instantiated via the `new` keyword, cloned via the minimal clones pattern (see [ERC-1167](https://eips.ethereum.org/EIPS/eip-1167)), or proxied via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\",\"returns\":{\"_0\":\"The address of the plugin implementation contract.\"}},\"prepareInstallation(address,bytes)\":{\"params\":{\"_dao\":\"The address of the installing DAO.\",\"_data\":\"The bytes-encoded data containing the input parameters for the installation as specified in the plugin's build metadata JSON file.\"},\"returns\":{\"plugin\":\"The address of the `Plugin` contract being prepared for installation.\",\"preparedSetupData\":\"The deployed plugin's relevant data which consists of helpers and permissions.\"}},\"prepareUninstallation(address,(address,address[],bytes))\":{\"params\":{\"_dao\":\"The address of the uninstalling DAO.\",\"_payload\":\"The relevant data necessary for the `prepareUninstallation`. See above.\"},\"returns\":{\"permissions\":\"The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the uninstalling DAO.\"}},\"prepareUpdate(address,uint16,(address,address[],bytes))\":{\"params\":{\"_currentBuild\":\"The build number of the plugin to update from.\",\"_dao\":\"The address of the updating DAO.\",\"_payload\":\"The relevant data necessary for the `prepareUpdate`. See above.\"},\"returns\":{\"initData\":\"The initialization data to be passed to upgradeable contracts when the update is applied in the `PluginSetupProcessor`.\",\"preparedSetupData\":\"The deployed plugin's relevant data which consists of helpers and permissions.\"}}},\"title\":\"IPluginSetup\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementation()\":{\"notice\":\"Returns the plugin implementation address.\"},\"prepareInstallation(address,bytes)\":{\"notice\":\"Prepares the installation of a plugin.\"},\"prepareUninstallation(address,(address,address[],bytes))\":{\"notice\":\"Prepares the uninstallation of a plugin.\"},\"prepareUpdate(address,uint16,(address,address[],bytes))\":{\"notice\":\"Prepares the update of a plugin.\"}},\"notice\":\"The interface required for a plugin setup contract to be consumed by the `PluginSetupProcessor` for plugin installations, updates, and uninstallations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol\":\"IPluginSetup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/permission/PermissionLib.sol\":{\"keccak256\":\"0x768b09a4f4c981870791fabda8acfb2d6eb2787cbfb1dd04053565fe8b0e1092\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://be4dfe12c308a1246dba388cde67e8cd25ad4d4d2e1a1e305ab47451a296d24b\",\"dweb:/ipfs/QmW9V14fFYPKKzZjSp99LqxDZHKDKHK3PEx8A7X2adoMWx\"]},\"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol\":{\"keccak256\":\"0x7142c50653843dc138e426f9315bfa4019169d3d4ccaabf81440d0beb0241934\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4233504e7dbb0efbb30f9333a031f947521d21d41a48715dee3831ecb1fa322b\",\"dweb:/ipfs/QmWDUYBQ8uRSZu5ZQn9SrhcrSnMdQXQF4DNk1HccSpczYD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementation()": {
								"notice": "Returns the plugin implementation address."
							},
							"prepareInstallation(address,bytes)": {
								"notice": "Prepares the installation of a plugin."
							},
							"prepareUninstallation(address,(address,address[],bytes))": {
								"notice": "Prepares the uninstallation of a plugin."
							},
							"prepareUpdate(address,uint16,(address,address[],bytes))": {
								"notice": "Prepares the update of a plugin."
							}
						},
						"notice": "The interface required for a plugin setup contract to be consumed by the `PluginSetupProcessor` for plugin installations, updates, and uninstallations.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/framework/plugin/setup/PluginSetup.sol": {
				"PluginSetup": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dao",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "prepareInstallation",
							"outputs": [
								{
									"internalType": "address",
									"name": "plugin",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "helpers",
											"type": "address[]"
										},
										{
											"components": [
												{
													"internalType": "enum PermissionLib.Operation",
													"name": "operation",
													"type": "uint8"
												},
												{
													"internalType": "address",
													"name": "where",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "who",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "condition",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "permissionId",
													"type": "bytes32"
												}
											],
											"internalType": "struct PermissionLib.MultiTargetPermission[]",
											"name": "permissions",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IPluginSetup.PreparedSetupData",
									"name": "preparedSetupData",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dao",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "plugin",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "currentHelpers",
											"type": "address[]"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IPluginSetup.SetupPayload",
									"name": "_payload",
									"type": "tuple"
								}
							],
							"name": "prepareUninstallation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "enum PermissionLib.Operation",
											"name": "operation",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "where",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "who",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "condition",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "permissionId",
											"type": "bytes32"
										}
									],
									"internalType": "struct PermissionLib.MultiTargetPermission[]",
									"name": "permissions",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dao",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_currentBuild",
									"type": "uint16"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "plugin",
											"type": "address"
										},
										{
											"internalType": "address[]",
											"name": "currentHelpers",
											"type": "address[]"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IPluginSetup.SetupPayload",
									"name": "_payload",
									"type": "tuple"
								}
							],
							"name": "prepareUpdate",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "initData",
									"type": "bytes"
								},
								{
									"components": [
										{
											"internalType": "address[]",
											"name": "helpers",
											"type": "address[]"
										},
										{
											"components": [
												{
													"internalType": "enum PermissionLib.Operation",
													"name": "operation",
													"type": "uint8"
												},
												{
													"internalType": "address",
													"name": "where",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "who",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "condition",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "permissionId",
													"type": "bytes32"
												}
											],
											"internalType": "struct PermissionLib.MultiTargetPermission[]",
											"name": "permissions",
											"type": "tuple[]"
										}
									],
									"internalType": "struct IPluginSetup.PreparedSetupData",
									"name": "preparedSetupData",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "The implementation can be instantiated via the `new` keyword, cloned via the minimal clones pattern (see [ERC-1167](https://eips.ethereum.org/EIPS/eip-1167)), or proxied via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).",
								"returns": {
									"_0": "The address of the plugin implementation contract."
								}
							},
							"prepareInstallation(address,bytes)": {
								"params": {
									"_dao": "The address of the installing DAO.",
									"_data": "The bytes-encoded data containing the input parameters for the installation as specified in the plugin's build metadata JSON file."
								},
								"returns": {
									"plugin": "The address of the `Plugin` contract being prepared for installation.",
									"preparedSetupData": "The deployed plugin's relevant data which consists of helpers and permissions."
								}
							},
							"prepareUninstallation(address,(address,address[],bytes))": {
								"params": {
									"_dao": "The address of the uninstalling DAO.",
									"_payload": "The relevant data necessary for the `prepareUninstallation`. See above."
								},
								"returns": {
									"permissions": "The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the uninstalling DAO."
								}
							},
							"prepareUpdate(address,uint16,(address,address[],bytes))": {
								"params": {
									"_currentBuild": "The build number of the plugin to update from.",
									"_dao": "The address of the updating DAO.",
									"_payload": "The relevant data necessary for the `prepareUpdate`. See above."
								},
								"returns": {
									"initData": "The initialization data to be passed to upgradeable contracts when the update is applied in the `PluginSetupProcessor`.",
									"preparedSetupData": "The deployed plugin's relevant data which consists of helpers and permissions."
								}
							},
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceId": "The ID of the interface."
								},
								"returns": {
									"_0": "Returns `true` if the interface is supported."
								}
							}
						},
						"title": "PluginSetup",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"prepareInstallation(address,bytes)": "f10832f1",
							"prepareUninstallation(address,(address,address[],bytes))": "9cb0a124",
							"prepareUpdate(address,uint16,(address,address[],bytes))": "a8a9c29e",
							"protocolVersion()": "2ae9c600",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"prepareInstallation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"helpers\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPluginSetup.PreparedSetupData\",\"name\":\"preparedSetupData\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"currentHelpers\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IPluginSetup.SetupPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"prepareUninstallation\",\"outputs\":[{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_currentBuild\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"plugin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"currentHelpers\",\"type\":\"address[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IPluginSetup.SetupPayload\",\"name\":\"_payload\",\"type\":\"tuple\"}],\"name\":\"prepareUpdate\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"helpers\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"enum PermissionLib.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"where\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"condition\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"permissionId\",\"type\":\"bytes32\"}],\"internalType\":\"struct PermissionLib.MultiTargetPermission[]\",\"name\":\"permissions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IPluginSetup.PreparedSetupData\",\"name\":\"preparedSetupData\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"The implementation can be instantiated via the `new` keyword, cloned via the minimal clones pattern (see [ERC-1167](https://eips.ethereum.org/EIPS/eip-1167)), or proxied via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822)).\",\"returns\":{\"_0\":\"The address of the plugin implementation contract.\"}},\"prepareInstallation(address,bytes)\":{\"params\":{\"_dao\":\"The address of the installing DAO.\",\"_data\":\"The bytes-encoded data containing the input parameters for the installation as specified in the plugin's build metadata JSON file.\"},\"returns\":{\"plugin\":\"The address of the `Plugin` contract being prepared for installation.\",\"preparedSetupData\":\"The deployed plugin's relevant data which consists of helpers and permissions.\"}},\"prepareUninstallation(address,(address,address[],bytes))\":{\"params\":{\"_dao\":\"The address of the uninstalling DAO.\",\"_payload\":\"The relevant data necessary for the `prepareUninstallation`. See above.\"},\"returns\":{\"permissions\":\"The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the uninstalling DAO.\"}},\"prepareUpdate(address,uint16,(address,address[],bytes))\":{\"params\":{\"_currentBuild\":\"The build number of the plugin to update from.\",\"_dao\":\"The address of the updating DAO.\",\"_payload\":\"The relevant data necessary for the `prepareUpdate`. See above.\"},\"returns\":{\"initData\":\"The initialization data to be passed to upgradeable contracts when the update is applied in the `PluginSetupProcessor`.\",\"preparedSetupData\":\"The deployed plugin's relevant data which consists of helpers and permissions.\"}},\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceId\":\"The ID of the interface.\"},\"returns\":{\"_0\":\"Returns `true` if the interface is supported.\"}}},\"title\":\"PluginSetup\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementation()\":{\"notice\":\"Returns the plugin implementation address.\"},\"prepareInstallation(address,bytes)\":{\"notice\":\"Prepares the installation of a plugin.\"},\"prepareUninstallation(address,(address,address[],bytes))\":{\"notice\":\"Prepares the uninstallation of a plugin.\"},\"prepareUpdate(address,uint16,(address,address[],bytes))\":{\"notice\":\"Prepares the update of a plugin.\"},\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if this or the parent contract supports an interface by its ID.\"}},\"notice\":\"An abstract contract that developers have to inherit from to write the setup of a plugin.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/framework/plugin/setup/PluginSetup.sol\":\"PluginSetup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x01f055f5c26ba25d7f83e9aa9ba877fbea4d0bf22227de046ea67494bc932999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1306add0c9388918d04c45f6acae3551f019ebf8a77e6cc1c0958316ce1c1eb\",\"dweb:/ipfs/QmR4KHkcfP65RfZtH8TcC7rSdCoWk2Dnog6fhzzjLad8Aa\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x5a08ad61f4e82b8a3323562661a86fb10b10190848073fdc13d4ac43710ffba5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f7bb74cf88fd88daa34e118bc6e363381d05044f34f391d39a10c0c9dac3ebd\",\"dweb:/ipfs/QmNbQ3v8v4zuDtg7VeLAbdhAm3tCzUodNoDZZ8ekmCHWZX\"]},\"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"packages/contracts/src/core/dao/IDAO.sol\":{\"keccak256\":\"0x9d45c336c22ef5b7873b31d9d56944f683219127007426bdfa27df5450e15fc0\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://0a0165610147542743bcdc1f4eb38501312768a394e255e53e1a4b8d374d039b\",\"dweb:/ipfs/QmfCvVeH6oCs1yUyGwsV6vLF4JtDR2sUL6MVkhQiSvq45R\"]},\"packages/contracts/src/core/permission/PermissionLib.sol\":{\"keccak256\":\"0x768b09a4f4c981870791fabda8acfb2d6eb2787cbfb1dd04053565fe8b0e1092\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://be4dfe12c308a1246dba388cde67e8cd25ad4d4d2e1a1e305ab47451a296d24b\",\"dweb:/ipfs/QmW9V14fFYPKKzZjSp99LqxDZHKDKHK3PEx8A7X2adoMWx\"]},\"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol\":{\"keccak256\":\"0x7142c50653843dc138e426f9315bfa4019169d3d4ccaabf81440d0beb0241934\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4233504e7dbb0efbb30f9333a031f947521d21d41a48715dee3831ecb1fa322b\",\"dweb:/ipfs/QmWDUYBQ8uRSZu5ZQn9SrhcrSnMdQXQF4DNk1HccSpczYD\"]},\"packages/contracts/src/framework/plugin/setup/PluginSetup.sol\":{\"keccak256\":\"0x93fecd28a4ed8ce6e2cde708d335206808b718599f95268942a72b83bba0182b\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://a9cc18290fbc6e9b2e2e4f36e5f769f273c650b43c8c9f05b11e2c38cf48e618\",\"dweb:/ipfs/QmSSe1enTzB1WfAr9eq68PmzSWE9HsmsLEsyEPYBXQzVoC\"]},\"packages/contracts/src/utils/Proxy.sol\":{\"keccak256\":\"0x91309796e1542436aedf49cbe173a8e8ead37f3b74a1850125f48f97593fd108\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://2adf7506785bef4888e76ae2e808c878bf3e7da362d6a4c182b94ea7a446983a\",\"dweb:/ipfs/QmbeXXB1QzHfMcc5DLLf54bKYcbbqg58ASHpafFh4QA9hC\"]},\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"implementation()": {
								"notice": "Returns the plugin implementation address."
							},
							"prepareInstallation(address,bytes)": {
								"notice": "Prepares the installation of a plugin."
							},
							"prepareUninstallation(address,(address,address[],bytes))": {
								"notice": "Prepares the uninstallation of a plugin."
							},
							"prepareUpdate(address,uint16,(address,address[],bytes))": {
								"notice": "Prepares the update of a plugin."
							},
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							},
							"supportsInterface(bytes4)": {
								"notice": "Checks if this or the parent contract supports an interface by its ID."
							}
						},
						"notice": "An abstract contract that developers have to inherit from to write the setup of a plugin.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"IProtocolVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "_version",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2022-2023",
						"custom:security-contact": "sirt@aragon.org",
						"kind": "dev",
						"methods": {
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_version": "Returns the semantic Aragon OSx protocol version number."
								}
							}
						},
						"title": "IProtocolVersion",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"protocolVersion()": "2ae9c600"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"_version\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2022-2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"kind\":\"dev\",\"methods\":{\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_version\":\"Returns the semantic Aragon OSx protocol version number.\"}}},\"title\":\"IProtocolVersion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"}},\"notice\":\"An interface defining the semantic Aragon OSx protocol version number.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":\"IProtocolVersion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							}
						},
						"notice": "An interface defining the semantic Aragon OSx protocol version number.",
						"version": 1
					}
				}
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"ProtocolVersion": {
					"abi": [
						{
							"inputs": [],
							"name": "protocolVersion",
							"outputs": [
								{
									"internalType": "uint8[3]",
									"name": "",
									"type": "uint8[3]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Aragon Association - 2023",
						"custom:security-contact": "sirt@aragon.org",
						"details": "Do not add any new variables to this contract that would shift down storage in the inheritance chain.",
						"kind": "dev",
						"methods": {
							"protocolVersion()": {
								"details": "This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.",
								"returns": {
									"_0": "Returns the semantic Aragon OSx protocol version number."
								}
							}
						},
						"title": "ProtocolVersion",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"protocolVersion()": "2ae9c600"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolVersion\",\"outputs\":[{\"internalType\":\"uint8[3]\",\"name\":\"\",\"type\":\"uint8[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aragon Association - 2023\",\"custom:security-contact\":\"sirt@aragon.org\",\"details\":\"Do not add any new variables to this contract that would shift down storage in the inheritance chain.\",\"kind\":\"dev\",\"methods\":{\"protocolVersion()\":{\"details\":\"This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts.\",\"returns\":{\"_0\":\"Returns the semantic Aragon OSx protocol version number.\"}}},\"title\":\"ProtocolVersion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolVersion()\":{\"notice\":\"Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\"}},\"notice\":\"An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":\"ProtocolVersion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/utils/protocol/IProtocolVersion.sol\":{\"keccak256\":\"0xd8fc65ec43ce98d036777a945bb3aec34fa96102cb07cc3e347b433e7550d879\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://4f19eb36baedd257e7762902894f447636f51d4df882fafc80b8e111a7d7fa9a\",\"dweb:/ipfs/QmPB8wKS6eEJfn7Zn78KNpMwAdDgjSxjrodbfHMdjHNZYv\"]},\"packages/contracts/src/utils/protocol/ProtocolVersion.sol\":{\"keccak256\":\"0x53e693a16bda9b3483ce71a5b25a523961930c3f03ec381d9da0be9d37686599\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://48336778e4f2097ff1fb1c4909d2be7a50dd6107f1c31c69aebb41e6162ef0e2\",\"dweb:/ipfs/QmNTEmpC3arZ5PPq7HX5SRwe9SNL5kLwnmG9zPfUkbi63B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"protocolVersion()": {
								"notice": "Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with."
							}
						},
						"notice": "An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							20
						]
					},
					"id": 21,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:0",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "IERC1967",
							"nameLocation": "276:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "291:68:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 7,
									"name": "Upgraded",
									"nameLocation": "370:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "395:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "379:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:32:0"
									},
									"src": "364:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "417:67:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 14,
									"name": "AdminChanged",
									"nameLocation": "495:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "516:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "508:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "539:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "531:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:41:0"
									},
									"src": "489:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "555:59:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 19,
									"name": "BeaconUpgraded",
									"nameLocation": "625:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "656:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "640:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:24:0"
									},
									"src": "619:45:0"
								}
							],
							"scope": 21,
							"src": "266:400:0",
							"usedErrors": []
						}
					],
					"src": "107:560:0"
				},
				"id": 0
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							30
						]
					},
					"id": 31,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:1",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 30,
							"linearizedBaseContracts": [
								30
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "352:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "376:438:1",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "828:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "841:2:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "867:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:1"
									},
									"scope": 30,
									"src": "819:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 31,
							"src": "342:536:1",
							"usedErrors": []
						}
					],
					"src": "113:766:1"
				},
				"id": 1
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							110
						]
					},
					"id": 111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 32,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Clones",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 33,
								"nodeType": "StructuredDocumentation",
								"src": "125:629:2",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "Clones",
							"nameLocation": "763:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1048:684:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1110:549:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1315:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1328:4:2",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1338:4:2",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "1344:14:2"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1334:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1334:25:2"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "1324:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1324:36:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:48:2",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1321:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1321:90:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:104:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:104:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1533:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1546:4:2",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "1552:14:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1542:25:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:32:2",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "1539:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1539:63:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1526:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:77:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:33:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:2",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1644:4:2",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:21:2"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1616:8:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1344:14:2",
														"valueSize": 1
													},
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "1552:14:2",
														"valueSize": 1
													},
													{
														"declaration": 39,
														"isOffset": false,
														"isSlot": false,
														"src": "1616:8:2",
														"valueSize": 1
													}
												],
												"id": 41,
												"nodeType": "InlineAssembly",
												"src": "1101:558:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "1676:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1696:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 45,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1688:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 44,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1688:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1688:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1676:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1700:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1668:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1668:57:2"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "776:192:2",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "982:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "996:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "988:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:24:2"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "1038:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1030:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:18:2"
									},
									"scope": 110,
									"src": "973:759:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "2209:692:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2271:556:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2476:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2489:4:2",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2499:4:2",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "2505:14:2"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2495:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2495:25:2"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "2485:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2485:36:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2523:48:2",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2482:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2482:90:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2469:104:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2469:104:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:4:2",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2707:4:2",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "2713:14:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2703:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2703:25:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2730:32:2",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2700:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:63:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2687:77:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2777:40:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2797:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2800:4:2",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2806:4:2",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2812:4:2"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2789:7:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:28:2"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2777:8:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "2505:14:2",
														"valueSize": 1
													},
													{
														"declaration": 56,
														"isOffset": false,
														"isSlot": false,
														"src": "2713:14:2",
														"valueSize": 1
													},
													{
														"declaration": 61,
														"isOffset": false,
														"isSlot": false,
														"src": "2777:8:2",
														"valueSize": 1
													},
													{
														"declaration": 58,
														"isOffset": false,
														"isSlot": false,
														"src": "2812:4:2",
														"valueSize": 1
													}
												],
												"id": 63,
												"nodeType": "InlineAssembly",
												"src": "2262:565:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 65,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "2844:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 68,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2864:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2856:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 66,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2856:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2856:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2844:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2868:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2836:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "2836:58:2"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1738:364:2",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nameLocation": "2116:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "2143:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2135:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2159:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 57,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:38:2"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "2199:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "2191:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2190:18:2"
									},
									"scope": 110,
									"src": "2107:794:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "3176:515:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3238:447:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3252:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3263:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:11:2"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "3256:3:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3298:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:4:2",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3294:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3294:14:2"
																	},
																	{
																		"name": "deployer",
																		"nodeType": "YulIdentifier",
																		"src": "3310:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:32:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3343:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3348:4:2",
																				"type": "",
																				"value": "0x24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3339:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:34:2",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3332:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3332:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3332:58:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3414:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3419:4:2",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3410:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3410:14:2"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "3426:14:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3403:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3403:38:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3403:38:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:42:2",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3454:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3454:55:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3533:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3538:4:2",
																				"type": "",
																				"value": "0x58"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:14:2"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3545:4:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:28:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3522:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3574:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:2",
																				"type": "",
																				"value": "0x78"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3570:14:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "ptr",
																						"nodeType": "YulIdentifier",
																						"src": "3600:3:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3605:4:2",
																						"type": "",
																						"value": "0x0c"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3596:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3596:14:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3612:4:2",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3586:9:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:31:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3563:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3563:55:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3631:44:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3658:3:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:4:2",
																				"type": "",
																				"value": "0x43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:14:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:2",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3644:9:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:31:2"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3631:9:2"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 82,
														"isOffset": false,
														"isSlot": false,
														"src": "3310:8:2",
														"valueSize": 1
													},
													{
														"declaration": 78,
														"isOffset": false,
														"isSlot": false,
														"src": "3426:14:2",
														"valueSize": 1
													},
													{
														"declaration": 85,
														"isOffset": false,
														"isSlot": false,
														"src": "3631:9:2",
														"valueSize": 1
													},
													{
														"declaration": 80,
														"isOffset": false,
														"isSlot": false,
														"src": "3545:4:2",
														"valueSize": 1
													}
												],
												"id": 87,
												"nodeType": "InlineAssembly",
												"src": "3229:456:2"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2907:99:2",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3020:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3065:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3057:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3057:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3097:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3089:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 79,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3089:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "deployer",
												"nameLocation": "3119:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3111:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:86:2"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3165:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3157:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:19:2"
									},
									"scope": 110,
									"src": "3011:680:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "3940:88:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 100,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "3985:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 101,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4001:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 104,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4015:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$110",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$110",
																		"typeString": "library Clones"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4007:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4007:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4007:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 99,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															89,
															109
														],
														"referencedDeclaration": 89,
														"src": "3957:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3957:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 98,
												"id": 107,
												"nodeType": "Return",
												"src": "3950:71:2"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3697:99:2",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nameLocation": "3810:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3855:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3847:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3887:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3879:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3837:60:2"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "predicted",
												"nameLocation": "3929:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3921:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:19:2"
									},
									"scope": 110,
									"src": "3801:227:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 111,
							"src": "755:3275:2",
							"usedErrors": []
						}
					],
					"src": "100:3931:2"
				},
				"id": 2
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
					"exportedSymbols": {
						"Address": [
							843
						],
						"ERC1967Proxy": [
							147
						],
						"ERC1967Upgrade": [
							451
						],
						"IBeacon": [
							513
						],
						"IERC1822Proxiable": [
							30
						],
						"IERC1967": [
							20
						],
						"Proxy": [
							503
						],
						"StorageSlot": [
							953
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 504,
							"src": "139:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
							"file": "./ERC1967Upgrade.sol",
							"id": 114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 452,
							"src": "162:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 116,
										"name": "Proxy",
										"nameLocations": [
											"592:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 503,
										"src": "592:5:3"
									},
									"id": 117,
									"nodeType": "InheritanceSpecifier",
									"src": "592:5:3"
								},
								{
									"baseName": {
										"id": 118,
										"name": "ERC1967Upgrade",
										"nameLocations": [
											"599:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 451,
										"src": "599:14:3"
									},
									"id": 119,
									"nodeType": "InheritanceSpecifier",
									"src": "599:14:3"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "194:372:3",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								451,
								20,
								503
							],
							"name": "ERC1967Proxy",
							"nameLocation": "576:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1014:56:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 128,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1042:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 129,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "1050:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1057:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 127,
														"name": "_upgradeToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "1024:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1024:39:3"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "620:333:3",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."
									},
									"id": 134,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "978:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "970:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "999:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "986:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 123,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "986:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:36:3"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:3"
									},
									"scope": 147,
									"src": "958:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										468
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1229:59:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 141,
															"name": "ERC1967Upgrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "1246:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$451_$",
																"typeString": "type(contract ERC1967Upgrade)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1261:18:3",
														"memberName": "_getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 177,
														"src": "1246:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 140,
												"id": 144,
												"nodeType": "Return",
												"src": "1239:42:3"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1076:67:3",
										"text": " @dev Returns the current implementation address."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1157:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 137,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1197:8:3"
									},
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:2:3"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1223:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1215:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1215:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:14:3"
									},
									"scope": 147,
									"src": "1148:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "567:723:3",
							"usedErrors": []
						}
					],
					"src": "114:1177:3"
				},
				"id": 3
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							843
						],
						"ERC1967Upgrade": [
							451
						],
						"IBeacon": [
							513
						],
						"IERC1822Proxiable": [
							30
						],
						"IERC1967": [
							20
						],
						"StorageSlot": [
							953
						]
					},
					"id": 452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 452,
							"sourceUnit": 514,
							"src": "141:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 452,
							"sourceUnit": 21,
							"src": "173:39:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/interfaces/draft-IERC1822.sol",
							"file": "../../interfaces/draft-IERC1822.sol",
							"id": 152,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 452,
							"sourceUnit": 31,
							"src": "213:45:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 452,
							"sourceUnit": 844,
							"src": "259:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 154,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 452,
							"sourceUnit": 954,
							"src": "293:37:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 156,
										"name": "IERC1967",
										"nameLocations": [
											"553:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "553:8:4"
									},
									"id": 157,
									"nodeType": "InheritanceSpecifier",
									"src": "553:8:4"
								}
							],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 155,
								"nodeType": "StructuredDocumentation",
								"src": "332:184:4",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 451,
							"linearizedBaseContracts": [
								451,
								20
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "535:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 160,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "672:14:4",
									"nodeType": "VariableDeclaration",
									"scope": 451,
									"src": "647:108:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 158,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "647:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "689:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "762:214:4",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 164,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1007:20:4",
									"nodeType": "VariableDeclaration",
									"scope": 451,
									"src": "981:115:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 162,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1030:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "1237:78:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 172,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1281:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 170,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "1254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1266:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "1254:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$849_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1254:48:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1303:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 848,
													"src": "1254:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "1247:61:4"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1103:67:4",
										"text": " @dev Returns the current implementation address."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1184:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:2:4"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "1228:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:9:4"
									},
									"scope": 451,
									"src": "1175:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "1469:196:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 186,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "1506:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 184,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "1487:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$843_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1495:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "1487:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1487:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1526:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 183,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1479:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1479:95:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1479:95:4"
											},
											{
												"expression": {
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 194,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1611:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 191,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "1584:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1596:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 875,
																"src": "1584:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$849_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1584:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1633:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "1584:54:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 197,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "1641:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1584:74:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 199,
												"nodeType": "ExpressionStatement",
												"src": "1584:74:4"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "1321:80:4",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1415:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1442:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1434:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1434:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:27:4"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1469:0:4"
									},
									"scope": 451,
									"src": "1406:259:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1827:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "1856:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1837:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1837:37:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "1898:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 211,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1889:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1889:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "EmitStatement",
												"src": "1884:32:4"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1671:95:4",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1780:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1799:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1791:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:27:4"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1827:0:4"
									},
									"scope": 451,
									"src": "1771:152:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "2155:167:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "2176:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2165:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "2165:29:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 230,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2208:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2213:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2208:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2208:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 234,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "2227:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2208:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 244,
												"nodeType": "IfStatement",
												"src": "2204:112:4",
												"trueBody": {
													"id": 243,
													"nodeType": "Block",
													"src": "2238:78:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 239,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "2281:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 240,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "2300:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 236,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "2252:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$843_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2260:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "2252:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2252:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 242,
															"nodeType": "ExpressionStatement",
															"src": "2252:53:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1929:123:4",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2066:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2092:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2084:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2124:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2111:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2111:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2135:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "2130:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2130:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:62:4"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2155:0:4"
									},
									"scope": 451,
									"src": "2057:265:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2596:820:4",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 258,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "2937:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 256,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "2910:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2922:14:4",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 886,
															"src": "2910:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$852_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
															}
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2910:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$852_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot storage pointer"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2953:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 851,
													"src": "2910:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "3028:382:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 281,
																		"nodeType": "Block",
																		"src": "3122:115:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 277,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 275,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 272,
																								"src": "3148:4:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 276,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 164,
																								"src": "3156:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3148:28:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 278,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3178:43:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 274,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3140:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 279,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3140:82:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 280,
																				"nodeType": "ExpressionStatement",
																				"src": "3140:82:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 282,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 272,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3116:4:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 282,
																				"src": "3108:12:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 271,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3108:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3107:14:4"
																	},
																	"src": "3099:138:4"
																},
																{
																	"block": {
																		"id": 287,
																		"nodeType": "Block",
																		"src": "3244:89:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 284,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3269:48:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 283,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3262:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3262:56:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 286,
																				"nodeType": "ExpressionStatement",
																				"src": "3262:56:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 288,
																	"nodeType": "TryCatchClause",
																	"src": "3238:95:4"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 267,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "3064:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 266,
																			"name": "IERC1822Proxiable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 30,
																			"src": "3046:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$30_$",
																				"typeString": "type(contract IERC1822Proxiable)"
																			}
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3046:36:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822Proxiable_$30",
																			"typeString": "contract IERC1822Proxiable"
																		}
																	},
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3083:13:4",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 29,
																	"src": "3046:50:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3046:52:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 289,
															"nodeType": "TryStatement",
															"src": "3042:291:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 291,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "3364:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 292,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "3383:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 293,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "3389:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 290,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "3346:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3346:53:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 295,
															"nodeType": "ExpressionStatement",
															"src": "3346:53:4"
														}
													]
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "2906:504:4",
												"trueBody": {
													"id": 265,
													"nodeType": "Block",
													"src": "2960:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 262,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "2993:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 261,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "2974:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 264,
															"nodeType": "ExpressionStatement",
															"src": "2974:37:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2328:161:4",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2503:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2533:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2525:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2565:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2552:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2576:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2571:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2524:62:4"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2596:0:4"
									},
									"scope": 451,
									"src": "2494:922:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3422:189:4",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 303,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "3642:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 451,
									"src": "3616:106:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 301,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3616:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 302,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3656:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "3837:69:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 311,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "3881:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 309,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "3854:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3866:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "3854:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$849_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3854:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3894:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 848,
													"src": "3854:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 308,
												"id": 314,
												"nodeType": "Return",
												"src": "3847:52:4"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "3729:50:4",
										"text": " @dev Returns the current admin."
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "3793:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3802:2:4"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3828:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3828:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3827:9:4"
									},
									"scope": 451,
									"src": "3784:122:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "4033:156:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 323,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "4051:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4071:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4063:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 324,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4063:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4063:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4051:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 322,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4043:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "4043:73:4"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 335,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "4153:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 332,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "4126:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4138:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 875,
																"src": "4126:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$849_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4126:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4166:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "4126:45:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 338,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "4174:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4126:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "4126:56:4"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3912:71:4",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3997:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4015:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "4007:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4006:18:4"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4033:0:4"
									},
									"scope": 451,
									"src": "3988:201:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "4349:86:4",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 349,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "4377:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4377:11:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "4390:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4364:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4364:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "EmitStatement",
												"src": "4359:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 355,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "4419:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 354,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "4409:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4409:19:4"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "4195:100:4",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4309:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4330:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4322:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4322:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4321:18:4"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4349:0:4"
									},
									"scope": 451,
									"src": "4300:135:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "4441:232:4",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 363,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "4704:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 451,
									"src": "4678:107:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 361,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4678:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 362,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4719:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "4902:70:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 371,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "4946:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 369,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "4919:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4931:14:4",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 875,
															"src": "4919:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$849_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4960:5:4",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 848,
													"src": "4919:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 368,
												"id": 374,
												"nodeType": "Return",
												"src": "4912:53:4"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "4792:51:4",
										"text": " @dev Returns the current beacon."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "4857:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4867:2:4"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "4893:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:9:4"
									},
									"scope": 451,
									"src": "4848:124:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5101:324:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 385,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "5138:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 383,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "5119:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$843_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5127:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "5119:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5119:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5150:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5111:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5111:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5111:79:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 394,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 379,
																					"src": "5248:9:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 393,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 513,
																				"src": "5240:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$513_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5240:18:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$513",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5259:14:4",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 512,
																		"src": "5240:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5240:35:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 391,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "5221:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$843_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5229:10:4",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 531,
																"src": "5221:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:55:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5290:50:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5200:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5200:150:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "5200:150:4"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 405,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "5387:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 402,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "5360:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$953_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5372:14:4",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 875,
																"src": "5360:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$849_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5360:40:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5401:5:4",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "5360:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 408,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "5409:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5360:58:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "5360:58:4"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "4978:71:4",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5063:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5082:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5074:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5074:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5073:19:4"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5101:0:4"
									},
									"scope": 451,
									"src": "5054:371:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "5824:217:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 423,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5845:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 422,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "5834:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5834:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "5834:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 427,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5885:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 426,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "5870:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5870:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "EmitStatement",
												"src": "5865:30:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 430,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "5909:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5914:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5909:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5923:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5909:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 434,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "5928:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5909:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 448,
												"nodeType": "IfStatement",
												"src": "5905:130:4",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "5939:96:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 440,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 415,
																						"src": "5990:9:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 439,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 513,
																					"src": "5982:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$513_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5982:18:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$513",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6001:14:4",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 512,
																			"src": "5982:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5982:35:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 444,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "6019:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 436,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "5953:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$843_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5961:20:4",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 730,
																	"src": "5953:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5953:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 446,
															"nodeType": "ExpressionStatement",
															"src": "5953:71:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "5431:292:4",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "5737:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5769:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5761:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5761:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5793:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5780:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "5804:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5799:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 418,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5799:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5760:54:4"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5824:0:4"
									},
									"scope": 451,
									"src": "5728:313:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 452,
							"src": "517:5526:4",
							"usedErrors": []
						}
					],
					"src": "116:5928:4"
				},
				"id": 4
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "124:598:5",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "Proxy",
							"nameLocation": "741:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "1008:835:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1027:810:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1283:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1286:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1286:14:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1267:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1267:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1428:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:5:5"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1462:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1481:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1481:14:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1500:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1442:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:60:5"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1432:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1576:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:16:5"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1555:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1555:38:5"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1688:59:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1716:14:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1716:16:5"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1706:27:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1706:27:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1681:66:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:1:5",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1768:59:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1793:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1796:14:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1796:16:5"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1786:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1786:27:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1786:27:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1760:67:5",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1614:6:5"
															},
															"nodeType": "YulSwitch",
															"src": "1607:220:5"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 457,
														"isOffset": false,
														"isSlot": false,
														"src": "1462:14:5",
														"valueSize": 1
													}
												],
												"id": 460,
												"nodeType": "InlineAssembly",
												"src": "1018:819:5"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "753:190:5",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "957:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "975:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "967:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:24:5"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:5"
									},
									"scope": 503,
									"src": "948:895:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "1849:173:5",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2036:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:2:5"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2085:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2084:9:5"
									},
									"scope": 503,
									"src": "2027:67:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "2360:72:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2370:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2370:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 476,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "2407:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:17:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2397:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "2397:28:5"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2100:217:5",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2331:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2340:2:5"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2360:0:5"
									},
									"scope": 503,
									"src": "2322:110:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2665:28:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2675:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:11:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2675:11:5"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "2438:186:5",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 489,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2637:2:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:5"
									},
									"scope": 503,
									"src": "2629:64:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "2888:28:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 493,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "2898:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:11:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "2898:11:5"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "2699:149:5",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 497,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:2:5"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:0:5"
									},
									"scope": 503,
									"src": "2853:63:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3242:2:5",
										"statements": []
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "2922:271:5",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3207:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3222:2:5"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:5"
									},
									"scope": 503,
									"src": "3198:46:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 504,
							"src": "723:2523:5",
							"usedErrors": []
						}
					],
					"src": "99:3148:5"
				},
				"id": 5
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							513
						]
					},
					"id": 514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:6",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 513,
							"linearizedBaseContracts": [
								513
							],
							"name": "IBeacon",
							"nameLocation": "208:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "222:162:6",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "398:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:2:6"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "438:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:9:6"
									},
									"scope": 513,
									"src": "389:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 514,
							"src": "198:251:6",
							"usedErrors": []
						}
					],
					"src": "93:357:6"
				},
				"id": 6
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							843
						]
					},
					"id": 844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 516,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 843,
							"linearizedBaseContracts": [
								843
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1478:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 524,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "1702:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 523,
												"id": 529,
												"nodeType": "Return",
												"src": "1695:30:7"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1432:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:7"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1472:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 521,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:7"
									},
									"scope": 843,
									"src": "1412:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "2718:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 542,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$843",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$843",
																				"typeString": "library Address"
																			}
																		],
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 540,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 545,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "2761:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:7"
											},
											{
												"assignments": [
													551,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "2813:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 550,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 558,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 552,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "2831:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 554,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "2853:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "2882:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:7"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2666:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2693:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:7"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:7"
									},
									"scope": 843,
									"src": "2647:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "3790:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 576,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "3829:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3837:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 575,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															623,
															667
														],
														"referencedDeclaration": 667,
														"src": "3807:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 574,
												"id": 581,
												"nodeType": "Return",
												"src": "3800:79:7"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3723:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3739:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:7"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "3776:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 572,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:7"
									},
									"scope": 843,
									"src": "3701:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "4255:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 596,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4294:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 597,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "4302:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 599,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "4311:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 595,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															623,
															667
														],
														"referencedDeclaration": 667,
														"src": "4272:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 594,
												"id": 601,
												"nodeType": "Return",
												"src": "4265:59:7"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4139:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4163:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4190:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:7"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4241:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:7"
									},
									"scope": 843,
									"src": "4108:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4806:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4845:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4853:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 618,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4859:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 615,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															623,
															667
														],
														"referencedDeclaration": 667,
														"src": "4823:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 614,
												"id": 621,
												"nodeType": "Return",
												"src": "4816:94:7"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4724:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4740:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 607,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4759:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:7"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4792:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:7"
									},
									"scope": 843,
									"src": "4693:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "5344:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 640,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$843",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$843",
																				"typeString": "library Address"
																			}
																		],
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 638,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 643,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5387:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 637,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:7"
											},
											{
												"assignments": [
													649,
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "5446:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 648,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "5460:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 650,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"id": 656,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5513:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 652,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "5487:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5506:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5562:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "5570:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 662,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "5579:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 663,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5591:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 659,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5535:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 665,
												"nodeType": "Return",
												"src": "5528:76:7"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "5205:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "5229:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "5256:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "5279:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 631,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:7"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "5330:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:7"
									},
									"scope": 843,
									"src": "5165:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "5888:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "5924:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "5932:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 677,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															684,
															713
														],
														"referencedDeclaration": 713,
														"src": "5905:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 676,
												"id": 682,
												"nodeType": "Return",
												"src": "5898:80:7"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5816:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5832:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5874:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:7"
									},
									"scope": 843,
									"src": "5788:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "6327:168:7",
										"statements": [
											{
												"assignments": [
													697,
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "6338:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 696,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "6352:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 698,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"arguments": [
														{
															"id": 702,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "6397:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 700,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "6379:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 706,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "6446:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "6454:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 708,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "6463:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 709,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6475:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 705,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "6419:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 695,
												"id": 711,
												"nodeType": "Return",
												"src": "6412:76:7"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6206:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6230:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6257:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 690,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "6313:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 693,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:7"
									},
									"scope": 843,
									"src": "6169:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "6771:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "6809:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "6817:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 723,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															730,
															759
														],
														"referencedDeclaration": 759,
														"src": "6788:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 722,
												"id": 728,
												"nodeType": "Return",
												"src": "6781:84:7"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6720:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 717,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:7"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "6757:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:7"
									},
									"scope": 843,
									"src": "6674:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "7213:170:7",
										"statements": [
											{
												"assignments": [
													743,
													745
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "7224:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 742,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 745,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 758,
														"src": "7238:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 744,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"arguments": [
														{
															"id": 748,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "7285:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 746,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "7265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "7334:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "7342:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 754,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "7351:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 755,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7363:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 751,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "7307:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 741,
												"id": 757,
												"nodeType": "Return",
												"src": "7300:76:7"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "7097:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "7121:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "7148:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:7"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "7199:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:7"
									},
									"scope": 843,
									"src": "7058:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "7865:434:7",
										"statements": [
											{
												"condition": {
													"id": 773,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "7879:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "8235:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 791,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "8257:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 792,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "8269:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 790,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "8249:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 794,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:7"
														}
													]
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "7875:418:7",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "7888:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 774,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "7906:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 786,
															"nodeType": "IfStatement",
															"src": "7902:286:7",
															"trueBody": {
																"id": 785,
																"nodeType": "Block",
																"src": "7930:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 780,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 762,
																							"src": "8132:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 779,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 531,
																						"src": "8121:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 781,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 782,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 778,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 784,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 787,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "8208:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 788,
															"nodeType": "Return",
															"src": "8201:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "7716:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "7740:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "7762:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 765,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "7795:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 767,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:7"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "7851:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:7"
									},
									"scope": 843,
									"src": "7671:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "8680:135:7",
										"statements": [
											{
												"condition": {
													"id": 810,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "8694:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "8751:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 815,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 803,
																		"src": "8773:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 816,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 805,
																		"src": "8785:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 814,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "8765:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 818,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:7"
														}
													]
												},
												"id": 820,
												"nodeType": "IfStatement",
												"src": "8690:119:7",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "8703:42:7",
													"statements": [
														{
															"expression": {
																"id": 811,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "8724:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 809,
															"id": 812,
															"nodeType": "Return",
															"src": "8717:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "8555:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "8577:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "8610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:7"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "8666:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:7"
									},
									"scope": 843,
									"src": "8520:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "8904:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 829,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "8980:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "9310:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 836,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "9331:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 835,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:7"
														}
													]
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "8976:379:7",
												"trueBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "9003:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 824,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 824,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:7",
																	"valueSize": 1
																}
															],
															"id": 833,
															"nodeType": "InlineAssembly",
															"src": "9152:142:7"
														}
													]
												}
											}
										]
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "8838:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "8863:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:7"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:7"
									},
									"scope": 843,
									"src": "8821:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 844,
							"src": "194:9169:7",
							"usedErrors": []
						}
					],
					"src": "101:9263:7"
				},
				"id": 7
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							953
						]
					},
					"id": 954,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 845,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 846,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:8",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 953,
							"linearizedBaseContracts": [
								953
							],
							"name": "StorageSlot",
							"nameLocation": "1428:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 849,
									"members": [
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1483:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 849,
											"src": "1475:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 847,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1475:7:8",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1453:11:8",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "1446:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 852,
									"members": [
										{
											"constant": false,
											"id": 851,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1535:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 852,
											"src": "1530:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 850,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1530:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1508:11:8",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "1501:46:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 855,
									"members": [
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1590:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "1582:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 853,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1582:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1560:11:8",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "1553:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 858,
									"members": [
										{
											"constant": false,
											"id": 857,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1645:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 858,
											"src": "1637:13:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 856,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1615:11:8",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "1608:49:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 861,
									"members": [
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1698:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 861,
											"src": "1691:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 859,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1691:6:8",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1670:10:8",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "1663:47:8",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 864,
									"members": [
										{
											"constant": false,
											"id": 863,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1749:5:8",
											"nodeType": "VariableDeclaration",
											"scope": 864,
											"src": "1743:11:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 862,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1743:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1723:9:8",
									"nodeType": "StructDefinition",
									"scope": 953,
									"src": "1716:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "1943:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2005:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2019:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2029:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 871,
														"isOffset": false,
														"isSlot": true,
														"src": "2019:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 867,
														"isOffset": false,
														"isSlot": false,
														"src": "2029:4:8",
														"valueSize": 1
													}
												],
												"id": 873,
												"nodeType": "InlineAssembly",
												"src": "1996:47:8"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "1767:87:8",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1868:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1891:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1883:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:14:8"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1940:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1920:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 869,
														"name": "AddressSlot",
														"nameLocations": [
															"1920:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 849,
														"src": "1920:11:8"
													},
													"referencedDeclaration": 849,
													"src": "1920:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$849_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:23:8"
									},
									"scope": 953,
									"src": "1859:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "2231:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2293:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2307:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2317:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 882,
														"isOffset": false,
														"isSlot": true,
														"src": "2307:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 878,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:4:8",
														"valueSize": 1
													}
												],
												"id": 884,
												"nodeType": "InlineAssembly",
												"src": "2284:47:8"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2055:87:8",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2156:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2179:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2171:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 877,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:14:8"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2228:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2208:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$852_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 880,
														"name": "BooleanSlot",
														"nameLocations": [
															"2208:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 852,
														"src": "2208:11:8"
													},
													"referencedDeclaration": 852,
													"src": "2208:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$852_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:23:8"
									},
									"scope": 953,
									"src": "2147:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "2519:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2581:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2595:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2605:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2595:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 893,
														"isOffset": false,
														"isSlot": true,
														"src": "2595:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 889,
														"isOffset": false,
														"isSlot": false,
														"src": "2605:4:8",
														"valueSize": 1
													}
												],
												"id": 895,
												"nodeType": "InlineAssembly",
												"src": "2572:47:8"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "2343:87:8",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2444:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2467:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2459:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 888,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2458:14:8"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2516:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "2496:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$855_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 892,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 891,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2496:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 855,
														"src": "2496:11:8"
													},
													"referencedDeclaration": 855,
													"src": "2496:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$855_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2495:23:8"
									},
									"scope": 953,
									"src": "2435:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "2807:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2869:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2883:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2893:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 904,
														"isOffset": false,
														"isSlot": true,
														"src": "2883:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 900,
														"isOffset": false,
														"isSlot": false,
														"src": "2893:4:8",
														"valueSize": 1
													}
												],
												"id": 906,
												"nodeType": "InlineAssembly",
												"src": "2860:47:8"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "2631:87:8",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2732:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2755:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2747:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 899,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2747:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:14:8"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2804:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "2784:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$858_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 902,
														"name": "Uint256Slot",
														"nameLocations": [
															"2784:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 858,
														"src": "2784:11:8"
													},
													"referencedDeclaration": 858,
													"src": "2784:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$858_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:23:8"
									},
									"scope": 953,
									"src": "2723:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "3092:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3154:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3168:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3178:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 915,
														"isOffset": false,
														"isSlot": true,
														"src": "3168:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 911,
														"isOffset": false,
														"isSlot": false,
														"src": "3178:4:8",
														"valueSize": 1
													}
												],
												"id": 917,
												"nodeType": "InlineAssembly",
												"src": "3145:47:8"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "2919:86:8",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3019:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3041:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "3033:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 910,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:14:8"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3089:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "3070:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$861_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 913,
														"name": "StringSlot",
														"nameLocations": [
															"3070:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 861,
														"src": "3070:10:8"
													},
													"referencedDeclaration": 861,
													"src": "3070:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$861_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3069:22:8"
									},
									"scope": 953,
									"src": "3010:188:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "3400:112:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3462:44:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3476:20:8",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3486:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3476:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 926,
														"isOffset": false,
														"isSlot": true,
														"src": "3476:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 922,
														"isOffset": false,
														"isSlot": true,
														"src": "3486:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 928,
												"nodeType": "InlineAssembly",
												"src": "3453:53:8"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "3204:101:8",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3319:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3348:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3333:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3333:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:22:8"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3397:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3378:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$861_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 924,
														"name": "StringSlot",
														"nameLocations": [
															"3378:10:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 861,
														"src": "3378:10:8"
													},
													"referencedDeclaration": 861,
													"src": "3378:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$861_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:22:8"
									},
									"scope": 953,
									"src": "3310:202:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "3688:106:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3750:38:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:14:8",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3774:4:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 937,
														"isOffset": false,
														"isSlot": true,
														"src": "3764:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 933,
														"isOffset": false,
														"isSlot": false,
														"src": "3774:4:8",
														"valueSize": 1
													}
												],
												"id": 939,
												"nodeType": "InlineAssembly",
												"src": "3741:47:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3518:85:8",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3617:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3638:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3630:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 932,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:14:8"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3685:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "3667:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$864_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 935,
														"name": "BytesSlot",
														"nameLocations": [
															"3667:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 864,
														"src": "3667:9:8"
													},
													"referencedDeclaration": 864,
													"src": "3667:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$864_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:21:8"
									},
									"scope": 953,
									"src": "3608:186:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "3991:112:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4053:44:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4067:20:8",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "4077:10:8"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 948,
														"isOffset": false,
														"isSlot": true,
														"src": "4067:6:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 944,
														"isOffset": false,
														"isSlot": true,
														"src": "4077:10:8",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 950,
												"nodeType": "InlineAssembly",
												"src": "4044:53:8"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "3800:99:8",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3913:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3940:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3926:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 943,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3926:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:21:8"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3988:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3970:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$864_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 947,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 946,
														"name": "BytesSlot",
														"nameLocations": [
															"3970:9:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 864,
														"src": "3970:9:8"
													},
													"referencedDeclaration": 864,
													"src": "3970:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$864_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3969:21:8"
									},
									"scope": 953,
									"src": "3904:199:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 954,
							"src": "1420:2685:8",
							"usedErrors": []
						}
					],
					"src": "193:3913:8"
				},
				"id": 8
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							977
						],
						"IERC165": [
							1183
						]
					},
					"id": 978,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 955,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:9"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 956,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 978,
							"sourceUnit": 1184,
							"src": "124:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 958,
										"name": "IERC165",
										"nameLocations": [
											"754:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1183,
										"src": "754:7:9"
									},
									"id": 959,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 977,
							"linearizedBaseContracts": [
								977,
								1183
							],
							"name": "ERC165",
							"nameLocation": "744:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1182
									],
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "920:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "937:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 970,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "957:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1183_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1183_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 969,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1183",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 967,
												"id": 974,
												"nodeType": "Return",
												"src": "930:47:9"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 964,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:9"
									},
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "856:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 961,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:9"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "914:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:9"
									},
									"scope": 977,
									"src": "829:155:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 978,
							"src": "726:260:9",
							"usedErrors": []
						}
					],
					"src": "99:888:9"
				},
				"id": 9
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
					"exportedSymbols": {
						"ERC165Checker": [
							1171
						],
						"IERC165": [
							1183
						]
					},
					"id": 1172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 979,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "121:23:10"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1172,
							"sourceUnit": 1184,
							"src": "146:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165Checker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 981,
								"nodeType": "StructuredDocumentation",
								"src": "171:277:10",
								"text": " @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."
							},
							"fullyImplemented": true,
							"id": 1171,
							"linearizedBaseContracts": [
								1171
							],
							"name": "ERC165Checker",
							"nameLocation": "457:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 984,
									"mutability": "constant",
									"name": "_INTERFACE_ID_INVALID",
									"nameLocation": "575:21:10",
									"nodeType": "VariableDeclaration",
									"scope": 1171,
									"src": "551:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 982,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "551:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30786666666666666666",
										"id": 983,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "599:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4294967295_by_1",
											"typeString": "int_const 4294967295"
										},
										"value": "0xffffffff"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "774:357:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 993,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "1008:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 995,
																			"name": "IERC165",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1183,
																			"src": "1022:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$1183_$",
																				"typeString": "type(contract IERC165)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC165_$1183_$",
																				"typeString": "type(contract IERC165)"
																			}
																		],
																		"id": 994,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1017:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1017:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1183",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1031:11:10",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1017:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 992,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "975:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "975:68:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "1059:65:10",
														"subExpression": {
															"arguments": [
																{
																	"id": 1000,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "1093:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1001,
																	"name": "_INTERFACE_ID_INVALID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "1102:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 999,
																"name": "supportsERC165InterfaceUnchecked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "1060:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1060:64:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "975:149:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 991,
												"id": 1005,
												"nodeType": "Return",
												"src": "956:168:10"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "616:83:10",
										"text": " @dev Returns true if `account` supports the {IERC165} interface."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165",
									"nameLocation": "713:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "736:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "728:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:17:10"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "768:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 989,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "768:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:6:10"
									},
									"scope": 1171,
									"src": "704:427:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1026,
										"nodeType": "Block",
										"src": "1442:189:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1018,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1558:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1017,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "1543:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1543:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 1021,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1010,
																"src": "1603:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1022,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "1612:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1020,
															"name": "supportsERC165InterfaceUnchecked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "1570:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (address,bytes4) view returns (bool)"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1570:54:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1543:81:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1016,
												"id": 1025,
												"nodeType": "Return",
												"src": "1536:88:10"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "1137:207:10",
										"text": " @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."
									},
									"id": 1027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1358:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1384:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1376:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1400:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1393:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:37:10"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1436:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1436:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:6:10"
									},
									"scope": 1171,
									"src": "1349:282:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "2155:560:10",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "interfaceIdsSupported",
														"nameLocation": "2278:21:10",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "2264:35:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[]"
														},
														"typeName": {
															"baseType": {
																"id": 1041,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "2264:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1042,
															"nodeType": "ArrayTypeName",
															"src": "2264:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1047,
																"name": "interfaceIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "2313:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2326:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2313:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2302:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bool[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1044,
																"name": "bool",
																"nodeType": "ElementaryTypeName",
																"src": "2306:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1045,
															"nodeType": "ArrayTypeName",
															"src": "2306:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																"typeString": "bool[]"
															}
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2264:69:10"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 1052,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "2405:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1051,
														"name": "supportsERC165",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "2390:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2390:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "2386:284:10",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "2415:255:10",
													"statements": [
														{
															"body": {
																"id": 1076,
																"nodeType": "Block",
																"src": "2542:118:10",
																"statements": [
																	{
																		"expression": {
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1065,
																					"name": "interfaceIdsSupported",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1043,
																					"src": "2560:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																						"typeString": "bool[] memory"
																					}
																				},
																				"id": 1067,
																				"indexExpression": {
																					"id": 1066,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1055,
																					"src": "2582:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2560:24:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1069,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1030,
																						"src": "2620:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1070,
																							"name": "interfaceIds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1033,
																							"src": "2629:12:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						},
																						"id": 1072,
																						"indexExpression": {
																							"id": 1071,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1055,
																							"src": "2642:1:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2629:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 1068,
																					"name": "supportsERC165InterfaceUnchecked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "2587:32:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																						"typeString": "function (address,bytes4) view returns (bool)"
																					}
																				},
																				"id": 1073,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2587:58:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "2560:85:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1075,
																		"nodeType": "ExpressionStatement",
																		"src": "2560:85:10"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1058,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "2512:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1059,
																		"name": "interfaceIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1033,
																		"src": "2516:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																			"typeString": "bytes4[] memory"
																		}
																	},
																	"id": 1060,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2529:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2516:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2512:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1077,
															"initializationExpression": {
																"assignments": [
																	1055
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1055,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2505:1:10",
																		"nodeType": "VariableDeclaration",
																		"scope": 1077,
																		"src": "2497:9:10",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1054,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2497:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1057,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2509:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2497:13:10"
															},
															"loopExpression": {
																"expression": {
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2537:3:10",
																	"subExpression": {
																		"id": 1062,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "2537:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1064,
																"nodeType": "ExpressionStatement",
																"src": "2537:3:10"
															},
															"nodeType": "ForStatement",
															"src": "2492:168:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1080,
													"name": "interfaceIdsSupported",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1043,
													"src": "2687:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1081,
												"nodeType": "Return",
												"src": "2680:28:10"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:374:10",
										"text": " @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedInterfaces",
									"nameLocation": "2025:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2065:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2057:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "interfaceIds",
												"nameLocation": "2098:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2082:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1031,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "2082:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1032,
													"nodeType": "ArrayTypeName",
													"src": "2082:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:69:10"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "2140:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2140:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "2140:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:15:10"
									},
									"scope": 1171,
									"src": "2016:699:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "3157:436:10",
										"statements": [
											{
												"condition": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3213:24:10",
													"subExpression": {
														"arguments": [
															{
																"id": 1095,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "3229:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1094,
															"name": "supportsERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "3214:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3214:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "3209:67:10",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "3239:37:10",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3260:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1093,
															"id": 1099,
															"nodeType": "Return",
															"src": "3253:12:10"
														}
													]
												}
											},
											{
												"body": {
													"id": 1124,
													"nodeType": "Block",
													"src": "3395:134:10",
													"statements": [
														{
															"condition": {
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "3413:59:10",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1114,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1086,
																			"src": "3447:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1115,
																				"name": "interfaceIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1089,
																				"src": "3456:12:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"id": 1117,
																			"indexExpression": {
																				"id": 1116,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "3469:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3456:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1113,
																		"name": "supportsERC165InterfaceUnchecked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1170,
																		"src": "3414:32:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (address,bytes4) view returns (bool)"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3414:58:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1123,
															"nodeType": "IfStatement",
															"src": "3409:110:10",
															"trueBody": {
																"id": 1122,
																"nodeType": "Block",
																"src": "3474:45:10",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3499:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 1093,
																		"id": 1121,
																		"nodeType": "Return",
																		"src": "3492:12:10"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1106,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "3365:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1107,
															"name": "interfaceIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3369:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3382:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3369:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3365:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1125,
												"initializationExpression": {
													"assignments": [
														1103
													],
													"declarations": [
														{
															"constant": false,
															"id": 1103,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3358:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1125,
															"src": "3350:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3350:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1105,
													"initialValue": {
														"hexValue": "30",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3362:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3350:13:10"
												},
												"loopExpression": {
													"expression": {
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3390:3:10",
														"subExpression": {
															"id": 1110,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3390:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ExpressionStatement",
													"src": "3390:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3345:184:10"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3582:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1093,
												"id": 1127,
												"nodeType": "Return",
												"src": "3575:11:10"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "2721:324:10",
										"text": " @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsAllInterfaces",
									"nameLocation": "3059:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3089:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "3081:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3081:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "interfaceIds",
												"nameLocation": "3114:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "3098:28:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1087,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "3098:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1088,
													"nodeType": "ArrayTypeName",
													"src": "3098:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:47:10"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "3151:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3151:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:6:10"
									},
									"scope": 1171,
									"src": "3050:543:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "4529:539:10",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "encodedParams",
														"nameLocation": "4576:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "4563:26:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1139,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4563:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1143,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "4615:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1183_$",
																		"typeString": "type(contract IERC165)"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4623:17:10",
																"memberName": "supportsInterface",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1182,
																"src": "4615:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4641:8:10",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "4615:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 1146,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "4651:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1141,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4592:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4596:18:10",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "4592:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4592:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4563:100:10"
											},
											{
												"assignments": [
													1150
												],
												"declarations": [
													{
														"constant": false,
														"id": 1150,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4710:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "4705:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4705:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"nodeType": "VariableDeclarationStatement",
												"src": "4705:12:10"
											},
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "4735:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "4727:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4727:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1154,
												"nodeType": "VariableDeclarationStatement",
												"src": "4727:18:10"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "4763:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1169,
														"src": "4755:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4755:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"nodeType": "VariableDeclarationStatement",
												"src": "4755:19:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4793:203:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4807:97:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4829:5:10",
																		"type": "",
																		"value": "30000"
																	},
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "4836:7:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nodeType": "YulIdentifier",
																				"src": "4849:13:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4864:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:24:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "encodedParams",
																				"nodeType": "YulIdentifier",
																				"src": "4877:13:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "4871:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:20:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4893:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nodeType": "YulIdentifier",
																	"src": "4818:10:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4818:86:10"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nodeType": "YulIdentifier",
																	"src": "4807:7:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4917:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "4931:14:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:16:10"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nodeType": "YulIdentifier",
																	"src": "4917:10:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4981:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4975:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:11:10"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nodeType": "YulIdentifier",
																	"src": "4960:11:10"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1132,
														"isOffset": false,
														"isSlot": false,
														"src": "4836:7:10",
														"valueSize": 1
													},
													{
														"declaration": 1140,
														"isOffset": false,
														"isSlot": false,
														"src": "4849:13:10",
														"valueSize": 1
													},
													{
														"declaration": 1140,
														"isOffset": false,
														"isSlot": false,
														"src": "4877:13:10",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "4917:10:10",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "4960:11:10",
														"valueSize": 1
													},
													{
														"declaration": 1150,
														"isOffset": false,
														"isSlot": false,
														"src": "4807:7:10",
														"valueSize": 1
													}
												],
												"id": 1158,
												"nodeType": "InlineAssembly",
												"src": "4784:212:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1159,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "5013:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "returnSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "5024:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30783230",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5038:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "0x20"
															},
															"src": "5024:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5013:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1164,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "5046:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5060:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5046:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5013:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1168,
												"nodeType": "Return",
												"src": "5006:55:10"
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "3599:817:10",
										"text": " @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Some precompiled contracts will falsely indicate support for a given interface, so caution\n should be exercised when using this function.\n Interface identification is specified in ERC-165."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsERC165InterfaceUnchecked",
									"nameLocation": "4430:32:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4471:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "4463:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4487:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "4480:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1133,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4480:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4462:37:10"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "4523:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4523:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:6:10"
									},
									"scope": 1171,
									"src": "4421:647:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1172,
							"src": "449:4621:10",
							"usedErrors": []
						}
					],
					"src": "121:4950:10"
				},
				"id": 10
			},
			"https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1183
						]
					},
					"id": 1184,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1173,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1174,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1183,
							"linearizedBaseContracts": [
								1183
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 1183,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1184,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"packages/contracts/src/core/dao/IDAO.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
					"exportedSymbols": {
						"IDAO": [
							1334
						]
					},
					"id": 1335,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1185,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDAO",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1186,
								"nodeType": "StructuredDocumentation",
								"src": "76:189:12",
								"text": "@title IDAO\n @author Aragon Association - 2022-2023\n @notice The interface required for DAOs within the Aragon App DAO framework.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 1334,
							"linearizedBaseContracts": [
								1334
							],
							"name": "IDAO",
							"nameLocation": "275:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDAO.Action",
									"id": 1193,
									"members": [
										{
											"constant": false,
											"id": 1188,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "628:2:12",
											"nodeType": "VariableDeclaration",
											"scope": 1193,
											"src": "620:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1187,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "620:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1190,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "649:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1193,
											"src": "641:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1189,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "641:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1192,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "671:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 1193,
											"src": "665:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1191,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "665:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Action",
									"nameLocation": "602:6:12",
									"nodeType": "StructDefinition",
									"scope": 1334,
									"src": "595:88:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "691:505:12",
										"text": "@notice Checks if an address has permission on a contract via a permission identifier and considers if `ANY_ADDRESS` was used in the granting process.\n @param _where The address of the contract.\n @param _who The address of a EOA or contract to give the permissions.\n @param _permissionId The permission identifier.\n @param _data The optional data passed to the `PermissionCondition` registered.\n @return Returns true if the address has permission, false if not."
									},
									"functionSelector": "fdef9106",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasPermission",
									"nameLocation": "1211:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_where",
												"nameLocation": "1243:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1235:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "1268:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1260:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_permissionId",
												"nameLocation": "1291:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1283:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1328:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1315:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1315:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:116:12"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1364:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1364:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:6:12"
									},
									"scope": 1334,
									"src": "1202:168:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1378:126:12",
										"text": "@notice Updates the DAO metadata (e.g., an IPFS hash).\n @param _metadata The IPFS hash of the new metadata object."
									},
									"functionSelector": "ee57e36f",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setMetadata",
									"nameLocation": "1519:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "_metadata",
												"nameLocation": "1546:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "1531:24:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1531:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:26:12"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:0:12"
									},
									"scope": 1334,
									"src": "1510:56:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "1574:120:12",
										"text": "@notice Emitted when the DAO metadata is updated.\n @param metadata The IPFS hash of the new metadata object."
									},
									"eventSelector": "bb39ebb37e60fb5d606ffdb749d2336e56b88e6c88c4bd6513b308f643186eed",
									"id": 1218,
									"name": "MetadataSet",
									"nameLocation": "1706:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadata",
												"nameLocation": "1724:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "1718:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1718:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:16:12"
									},
									"src": "1700:34:12"
								},
								{
									"documentation": {
										"id": 1219,
										"nodeType": "StructuredDocumentation",
										"src": "1742:869:12",
										"text": "@notice Executes a list of actions. If a zero allow-failure map is provided, a failing action reverts the entire execution. If a non-zero allow-failure map is provided, allowed actions can fail without the entire call being reverted.\n @param _callId The ID of the call. The definition of the value of `callId` is up to the calling contract and can be used, e.g., as a nonce.\n @param _actions The array of actions.\n @param _allowFailureMap A bitmap allowing execution to succeed, even if individual actions might revert. If the bit at index `i` is 1, the execution succeeds even if the `i`th action reverts. A failure map value of 0 requires every action to not revert.\n @return The array of results obtained from the executed actions in `bytes`.\n @return The resulting failure map containing the actions have actually failed."
									},
									"functionSelector": "c71bf324",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "execute",
									"nameLocation": "2626:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "_callId",
												"nameLocation": "2652:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2644:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "_actions",
												"nameLocation": "2686:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2670:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Action_$1193_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDAO.Action[]"
												},
												"typeName": {
													"baseType": {
														"id": 1223,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1222,
															"name": "Action",
															"nameLocations": [
																"2670:6:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1193,
															"src": "2670:6:12"
														},
														"referencedDeclaration": 1193,
														"src": "2670:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Action_$1193_storage_ptr",
															"typeString": "struct IDAO.Action"
														}
													},
													"id": 1224,
													"nodeType": "ArrayTypeName",
													"src": "2670:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Action_$1193_storage_$dyn_storage_ptr",
														"typeString": "struct IDAO.Action[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "_allowFailureMap",
												"nameLocation": "2713:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2705:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:103:12"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2755:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1229,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "2755:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1230,
													"nodeType": "ArrayTypeName",
													"src": "2755:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "2771:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:25:12"
									},
									"scope": 1334,
									"src": "2617:163:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "2788:618:12",
										"text": "@notice Emitted when a proposal is executed.\n @param actor The address of the caller.\n @param callId The ID of the call.\n @param actions The array of actions executed.\n @param allowFailureMap The allow failure map encoding which actions are allowed to fail.\n @param failureMap The failure map encoding which actions have failed.\n @param execResults The array with the results of the executed actions.\n @dev The value of `callId` is defined by the component/contract calling the execute function. A `Plugin` implementation can use it, for example, as a nonce."
									},
									"eventSelector": "d4e57c2049f004fb297ef78591cd409503ceb6b2c722d7ffed032fc99e5f3b58",
									"id": 1253,
									"name": "Executed",
									"nameLocation": "3418:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"indexed": true,
												"mutability": "mutable",
												"name": "actor",
												"nameLocation": "3453:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3437:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"indexed": false,
												"mutability": "mutable",
												"name": "callId",
												"nameLocation": "3477:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3469:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"indexed": false,
												"mutability": "mutable",
												"name": "actions",
												"nameLocation": "3503:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3494:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Action_$1193_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDAO.Action[]"
												},
												"typeName": {
													"baseType": {
														"id": 1242,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1241,
															"name": "Action",
															"nameLocations": [
																"3494:6:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1193,
															"src": "3494:6:12"
														},
														"referencedDeclaration": 1193,
														"src": "3494:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Action_$1193_storage_ptr",
															"typeString": "struct IDAO.Action"
														}
													},
													"id": 1243,
													"nodeType": "ArrayTypeName",
													"src": "3494:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Action_$1193_storage_$dyn_storage_ptr",
														"typeString": "struct IDAO.Action[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": false,
												"mutability": "mutable",
												"name": "allowFailureMap",
												"nameLocation": "3529:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3521:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": false,
												"mutability": "mutable",
												"name": "failureMap",
												"nameLocation": "3563:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3555:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"indexed": false,
												"mutability": "mutable",
												"name": "execResults",
												"nameLocation": "3592:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "3584:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 1249,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "3584:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 1250,
													"nodeType": "ArrayTypeName",
													"src": "3584:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:184:12"
									},
									"src": "3412:199:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "3619:282:12",
										"text": "@notice Emitted when a standard callback is registered.\n @param interfaceId The ID of the interface.\n @param callbackSelector The selector of the callback function.\n @param magicNumber The magic number to be registered for the callback function selector."
									},
									"eventSelector": "fc72fd547553f7a663e0048e590afc9c47b56a4242e960f31cf4c62e23d308b9",
									"id": 1262,
									"name": "StandardCallbackRegistered",
									"nameLocation": "3913:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3957:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "3950:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3950:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "callbackSelector",
												"nameLocation": "3986:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "3979:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3979:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"indexed": false,
												"mutability": "mutable",
												"name": "magicNumber",
												"nameLocation": "4020:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "4013:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4013:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:99:12"
									},
									"src": "3907:132:12"
								},
								{
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "4047:301:12",
										"text": "@notice Deposits (native) tokens to the DAO contract with a reference string.\n @param _token The address of the token or address(0) in case of the native token.\n @param _amount The amount of tokens to deposit.\n @param _reference The reference describing the deposit reason."
									},
									"functionSelector": "bfe07da6",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "4363:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4379:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4371:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4395:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4387:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "_reference",
												"nameLocation": "4420:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "4404:26:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4404:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:61:12"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4448:0:12"
									},
									"scope": 1334,
									"src": "4354:95:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "4457:301:12",
										"text": "@notice Emitted when a token deposit has been made to the DAO.\n @param sender The address of the sender.\n @param token The address of the deposited token.\n @param amount The amount of tokens deposited.\n @param _reference The reference describing the deposit reason."
									},
									"eventSelector": "2bc500cf071be2d1c1458ed6ff484cd4db4345ada8943dee7ff29e7af3558f76",
									"id": 1283,
									"name": "Deposited",
									"nameLocation": "4770:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4806:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4790:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4839:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4823:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4863:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4855:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"mutability": "mutable",
												"name": "_reference",
												"nameLocation": "4887:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4880:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4880:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4779:125:12"
									},
									"src": "4764:141:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4913:403:12",
										"text": "@notice Emitted when a native token deposit has been made to the DAO.\n @dev This event is intended to be emitted in the `receive` function and is therefore bound by the gas limitations for `send`/`transfer` calls introduced by [ERC-2929](https://eips.ethereum.org/EIPS/eip-2929).\n @param sender The address of the sender.\n @param amount The amount of native tokens deposited."
									},
									"eventSelector": "62c2c8e34665db7c56b2cabd7f5fb9702ccd352ffa8150147e450797e9f8e8f3",
									"id": 1290,
									"name": "NativeTokenDeposited",
									"nameLocation": "5328:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5357:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "5349:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5349:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5373:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "5365:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5348:32:12"
									},
									"src": "5322:59:12"
								},
								{
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "5389:141:12",
										"text": "@notice Setter for the trusted forwarder verifying the meta transaction.\n @param _trustedForwarder The trusted forwarder address."
									},
									"functionSelector": "da742228",
									"id": 1296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setTrustedForwarder",
									"nameLocation": "5545:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "_trustedForwarder",
												"nameLocation": "5573:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1296,
												"src": "5565:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:27:12"
									},
									"returnParameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5600:0:12"
									},
									"scope": 1334,
									"src": "5536:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "5609:124:12",
										"text": "@notice Getter for the trusted forwarder verifying the meta transaction.\n @return The trusted forwarder address."
									},
									"functionSelector": "ce1b815f",
									"id": 1302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedForwarder",
									"nameLocation": "5748:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5767:2:12"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "5793:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5793:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5792:9:12"
									},
									"scope": 1334,
									"src": "5739:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "5810:119:12",
										"text": "@notice Emitted when a new TrustedForwarder is set on the DAO.\n @param forwarder the new forwarder address."
									},
									"eventSelector": "d91237492a9e30cd2faf361fc103998a382ff0ec2b1b07dc1cbebb76ae2f1ea2",
									"id": 1307,
									"name": "TrustedForwarderSet",
									"nameLocation": "5941:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "5969:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "5961:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:19:12"
									},
									"src": "5935:45:12"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "5988:381:12",
										"text": "@notice Checks whether a signature is valid for a provided hash according to [ERC-1271](https://eips.ethereum.org/EIPS/eip-1271).\n @param _hash The hash of the data to be signed.\n @param _signature The signature byte array associated with `_hash`.\n @return Returns the `bytes4` magic value `0x1626ba7e` if the signature is valid and `0xffffffff` if not."
									},
									"functionSelector": "1626ba7e",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "6384:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_hash",
												"nameLocation": "6409:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "6401:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1309,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "_signature",
												"nameLocation": "6429:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "6416:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6416:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6400:40:12"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "6459:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1314,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6459:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6458:8:12"
									},
									"scope": 1334,
									"src": "6375:92:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "6475:388:12",
										"text": "@notice Registers an ERC standard having a callback by registering its [ERC-165](https://eips.ethereum.org/EIPS/eip-165) interface ID and callback function signature.\n @param _interfaceId The ID of the interface.\n @param _callbackSelector The selector of the callback function.\n @param _magicNumber The magic number to be registered for the function signature."
									},
									"functionSelector": "c4a50145",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "registerStandardCallback",
									"nameLocation": "6878:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "_interfaceId",
												"nameLocation": "6920:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6913:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6913:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "_callbackSelector",
												"nameLocation": "6950:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6943:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "_magicNumber",
												"nameLocation": "6985:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6978:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1323,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6978:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6902:102:12"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7013:0:12"
									},
									"scope": 1334,
									"src": "6869:145:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "7022:159:12",
										"text": "@notice Removed function being left here to not corrupt the IDAO interface ID. Any call will revert.\n @dev Introduced in v1.0.0. Removed in v1.4.0."
									},
									"functionSelector": "3e2ab0d9",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setSignatureValidator",
									"nameLocation": "7196:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "7218:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:9:12"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7235:0:12"
									},
									"scope": 1334,
									"src": "7187:49:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1335,
							"src": "265:6974:12",
							"usedErrors": []
						}
					],
					"src": "49:7192:12"
				},
				"id": 12
			},
			"packages/contracts/src/core/permission/PermissionLib.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/core/permission/PermissionLib.sol",
					"exportedSymbols": {
						"PermissionLib": [
							1369
						]
					},
					"id": 1370,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PermissionLib",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1337,
								"nodeType": "StructuredDocumentation",
								"src": "76:185:13",
								"text": "@title PermissionLib\n @author Aragon Association - 2021-2023\n @notice A library containing objects for permission processing.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 1369,
							"linearizedBaseContracts": [
								1369
							],
							"name": "PermissionLib",
							"nameLocation": "269:13:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "290:79:13",
										"text": "@notice A constant expressing that no condition is applied to a permission."
									},
									"functionSelector": "6dd02a5b",
									"id": 1344,
									"mutability": "constant",
									"name": "NO_CONDITION",
									"nameLocation": "399:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "375:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1339,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "422:1:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1341,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "414:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1340,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "414:7:13",
												"typeDescriptions": {}
											}
										},
										"id": 1343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "414:10:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PermissionLib.Operation",
									"id": 1348,
									"members": [
										{
											"id": 1345,
											"name": "Grant",
											"nameLocation": "841:5:13",
											"nodeType": "EnumValue",
											"src": "841:5:13"
										},
										{
											"id": 1346,
											"name": "Revoke",
											"nameLocation": "857:6:13",
											"nodeType": "EnumValue",
											"src": "857:6:13"
										},
										{
											"id": 1347,
											"name": "GrantWithCondition",
											"nameLocation": "874:18:13",
											"nodeType": "EnumValue",
											"src": "874:18:13"
										}
									],
									"name": "Operation",
									"nameLocation": "820:9:13",
									"nodeType": "EnumDefinition",
									"src": "815:84:13"
								},
								{
									"canonicalName": "PermissionLib.SingleTargetPermission",
									"id": 1356,
									"members": [
										{
											"constant": false,
											"id": 1351,
											"mutability": "mutable",
											"name": "operation",
											"nameLocation": "1280:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "1270:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Operation_$1348",
												"typeString": "enum PermissionLib.Operation"
											},
											"typeName": {
												"id": 1350,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1349,
													"name": "Operation",
													"nameLocations": [
														"1270:9:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1348,
													"src": "1270:9:13"
												},
												"referencedDeclaration": 1348,
												"src": "1270:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Operation_$1348",
													"typeString": "enum PermissionLib.Operation"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1353,
											"mutability": "mutable",
											"name": "who",
											"nameLocation": "1308:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "1300:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1352,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1355,
											"mutability": "mutable",
											"name": "permissionId",
											"nameLocation": "1330:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1356,
											"src": "1322:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1354,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1322:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SingleTargetPermission",
									"nameLocation": "1236:22:13",
									"nodeType": "StructDefinition",
									"scope": 1369,
									"src": "1229:121:13",
									"visibility": "public"
								},
								{
									"canonicalName": "PermissionLib.MultiTargetPermission",
									"id": 1368,
									"members": [
										{
											"constant": false,
											"id": 1359,
											"mutability": "mutable",
											"name": "operation",
											"nameLocation": "1983:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "1973:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Operation_$1348",
												"typeString": "enum PermissionLib.Operation"
											},
											"typeName": {
												"id": 1358,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1357,
													"name": "Operation",
													"nameLocations": [
														"1973:9:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1348,
													"src": "1973:9:13"
												},
												"referencedDeclaration": 1348,
												"src": "1973:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Operation_$1348",
													"typeString": "enum PermissionLib.Operation"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1361,
											"mutability": "mutable",
											"name": "where",
											"nameLocation": "2011:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "2003:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1360,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2003:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1363,
											"mutability": "mutable",
											"name": "who",
											"nameLocation": "2035:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "2027:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1362,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2027:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1365,
											"mutability": "mutable",
											"name": "condition",
											"nameLocation": "2057:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "2049:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1364,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2049:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1367,
											"mutability": "mutable",
											"name": "permissionId",
											"nameLocation": "2085:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1368,
											"src": "2077:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1366,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2077:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MultiTargetPermission",
									"nameLocation": "1940:21:13",
									"nodeType": "StructDefinition",
									"scope": 1369,
									"src": "1933:172:13",
									"visibility": "public"
								}
							],
							"scope": 1370,
							"src": "261:1847:13",
							"usedErrors": []
						}
					],
					"src": "49:2061:13"
				},
				"id": 13
			},
			"packages/contracts/src/framework/plugin/setup/IPluginSetup.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
					"exportedSymbols": {
						"IDAO": [
							1334
						],
						"IPluginSetup": [
							1441
						],
						"PermissionLib": [
							1369
						]
					},
					"id": 1442,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1371,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:14"
						},
						{
							"absolutePath": "packages/contracts/src/core/permission/PermissionLib.sol",
							"file": "../../../core/permission/PermissionLib.sol",
							"id": 1373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1370,
							"src": "76:73:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1372,
										"name": "PermissionLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1369,
										"src": "84:13:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/dao/IDAO.sol",
							"file": "../../../core/dao/IDAO.sol",
							"id": 1375,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1442,
							"sourceUnit": 1335,
							"src": "151:48:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1374,
										"name": "IDAO",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1334,
										"src": "159:4:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPluginSetup",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1376,
								"nodeType": "StructuredDocumentation",
								"src": "203:280:14",
								"text": "@title IPluginSetup\n @author Aragon Association - 2022-2023\n @notice The interface required for a plugin setup contract to be consumed by the `PluginSetupProcessor` for plugin installations, updates, and uninstallations.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 1441,
							"linearizedBaseContracts": [
								1441
							],
							"name": "IPluginSetup",
							"nameLocation": "493:12:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPluginSetup.PreparedSetupData",
									"id": 1384,
									"members": [
										{
											"constant": false,
											"id": 1379,
											"mutability": "mutable",
											"name": "helpers",
											"nameLocation": "919:7:14",
											"nodeType": "VariableDeclaration",
											"scope": 1384,
											"src": "909:17:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1378,
												"nodeType": "ArrayTypeName",
												"src": "909:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1383,
											"mutability": "mutable",
											"name": "permissions",
											"nameLocation": "975:11:14",
											"nodeType": "VariableDeclaration",
											"scope": 1384,
											"src": "937:49:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_MultiTargetPermission_$1368_storage_$dyn_storage_ptr",
												"typeString": "struct PermissionLib.MultiTargetPermission[]"
											},
											"typeName": {
												"baseType": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "PermissionLib.MultiTargetPermission",
														"nameLocations": [
															"937:13:14",
															"951:21:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1368,
														"src": "937:35:14"
													},
													"referencedDeclaration": 1368,
													"src": "937:35:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MultiTargetPermission_$1368_storage_ptr",
														"typeString": "struct PermissionLib.MultiTargetPermission"
													}
												},
												"id": 1382,
												"nodeType": "ArrayTypeName",
												"src": "937:37:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MultiTargetPermission_$1368_storage_$dyn_storage_ptr",
													"typeString": "struct PermissionLib.MultiTargetPermission[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PreparedSetupData",
									"nameLocation": "880:17:14",
									"nodeType": "StructDefinition",
									"scope": 1441,
									"src": "873:121:14",
									"visibility": "public"
								},
								{
									"canonicalName": "IPluginSetup.SetupPayload",
									"id": 1392,
									"members": [
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "plugin",
											"nameLocation": "1572:6:14",
											"nodeType": "VariableDeclaration",
											"scope": 1392,
											"src": "1564:14:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1385,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1564:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "currentHelpers",
											"nameLocation": "1599:14:14",
											"nodeType": "VariableDeclaration",
											"scope": 1392,
											"src": "1589:24:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1589:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1388,
												"nodeType": "ArrayTypeName",
												"src": "1589:9:14",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1630:4:14",
											"nodeType": "VariableDeclaration",
											"scope": 1392,
											"src": "1624:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1390,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1624:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SetupPayload",
									"nameLocation": "1540:12:14",
									"nodeType": "StructDefinition",
									"scope": 1441,
									"src": "1533:109:14",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "1650:467:14",
										"text": "@notice Prepares the installation of a plugin.\n @param _dao The address of the installing DAO.\n @param _data The bytes-encoded data containing the input parameters for the installation as specified in the plugin's build metadata JSON file.\n @return plugin The address of the `Plugin` contract being prepared for installation.\n @return preparedSetupData The deployed plugin's relevant data which consists of helpers and permissions."
									},
									"functionSelector": "f10832f1",
									"id": 1405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prepareInstallation",
									"nameLocation": "2132:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "_dao",
												"nameLocation": "2170:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2162:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2162:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "2200:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2185:20:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2185:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:61:14"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "plugin",
												"nameLocation": "2239:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2231:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "preparedSetupData",
												"nameLocation": "2272:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 1405,
												"src": "2247:42:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedSetupData_$1384_memory_ptr",
													"typeString": "struct IPluginSetup.PreparedSetupData"
												},
												"typeName": {
													"id": 1402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1401,
														"name": "PreparedSetupData",
														"nameLocations": [
															"2247:17:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1384,
														"src": "2247:17:14"
													},
													"referencedDeclaration": 1384,
													"src": "2247:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedSetupData_$1384_storage_ptr",
														"typeString": "struct IPluginSetup.PreparedSetupData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2230:60:14"
									},
									"scope": 1441,
									"src": "2123:168:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "2299:524:14",
										"text": "@notice Prepares the update of a plugin.\n @param _dao The address of the updating DAO.\n @param _currentBuild The build number of the plugin to update from.\n @param _payload The relevant data necessary for the `prepareUpdate`. See above.\n @return initData The initialization data to be passed to upgradeable contracts when the update is applied in the `PluginSetupProcessor`.\n @return preparedSetupData The deployed plugin's relevant data which consists of helpers and permissions."
									},
									"functionSelector": "a8a9c29e",
									"id": 1421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prepareUpdate",
									"nameLocation": "2838:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "_dao",
												"nameLocation": "2870:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2862:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "_currentBuild",
												"nameLocation": "2892:13:14",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2885:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1409,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2885:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "_payload",
												"nameLocation": "2938:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2916:30:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SetupPayload_$1392_calldata_ptr",
													"typeString": "struct IPluginSetup.SetupPayload"
												},
												"typeName": {
													"id": 1412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1411,
														"name": "SetupPayload",
														"nameLocations": [
															"2916:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1392,
														"src": "2916:12:14"
													},
													"referencedDeclaration": 1392,
													"src": "2916:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SetupPayload_$1392_storage_ptr",
														"typeString": "struct IPluginSetup.SetupPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2851:102:14"
									},
									"returnParameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "initData",
												"nameLocation": "2985:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2972:21:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2972:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "preparedSetupData",
												"nameLocation": "3020:17:14",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "2995:42:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedSetupData_$1384_memory_ptr",
													"typeString": "struct IPluginSetup.PreparedSetupData"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "PreparedSetupData",
														"nameLocations": [
															"2995:17:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1384,
														"src": "2995:17:14"
													},
													"referencedDeclaration": 1384,
													"src": "2995:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedSetupData_$1384_storage_ptr",
														"typeString": "struct IPluginSetup.PreparedSetupData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2971:67:14"
									},
									"scope": 1441,
									"src": "2829:210:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "3047:355:14",
										"text": "@notice Prepares the uninstallation of a plugin.\n @param _dao The address of the uninstalling DAO.\n @param _payload The relevant data necessary for the `prepareUninstallation`. See above.\n @return permissions The array of multi-targeted permission operations to be applied by the `PluginSetupProcessor` to the uninstalling DAO."
									},
									"functionSelector": "9cb0a124",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prepareUninstallation",
									"nameLocation": "3417:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "_dao",
												"nameLocation": "3457:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3449:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "_payload",
												"nameLocation": "3494:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3472:30:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SetupPayload_$1392_calldata_ptr",
													"typeString": "struct IPluginSetup.SetupPayload"
												},
												"typeName": {
													"id": 1426,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1425,
														"name": "SetupPayload",
														"nameLocations": [
															"3472:12:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1392,
														"src": "3472:12:14"
													},
													"referencedDeclaration": 1392,
													"src": "3472:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SetupPayload_$1392_storage_ptr",
														"typeString": "struct IPluginSetup.SetupPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:71:14"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "permissions",
												"nameLocation": "3573:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3528:56:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MultiTargetPermission_$1368_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PermissionLib.MultiTargetPermission[]"
												},
												"typeName": {
													"baseType": {
														"id": 1430,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1429,
															"name": "PermissionLib.MultiTargetPermission",
															"nameLocations": [
																"3528:13:14",
																"3542:21:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1368,
															"src": "3528:35:14"
														},
														"referencedDeclaration": 1368,
														"src": "3528:35:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MultiTargetPermission_$1368_storage_ptr",
															"typeString": "struct PermissionLib.MultiTargetPermission"
														}
													},
													"id": 1431,
													"nodeType": "ArrayTypeName",
													"src": "3528:37:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MultiTargetPermission_$1368_storage_$dyn_storage_ptr",
														"typeString": "struct PermissionLib.MultiTargetPermission[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:58:14"
									},
									"scope": 1441,
									"src": "3408:178:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "3594:386:14",
										"text": "@notice Returns the plugin implementation address.\n @return The address of the plugin implementation contract.\n @dev The implementation can be instantiated via the `new` keyword, cloned via the minimal clones pattern (see [ERC-1167](https://eips.ethereum.org/EIPS/eip-1167)), or proxied via the UUPS pattern (see [ERC-1822](https://eips.ethereum.org/EIPS/eip-1822))."
									},
									"functionSelector": "5c60da1b",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "3995:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4009:2:14"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "4035:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4034:9:14"
									},
									"scope": 1441,
									"src": "3986:58:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1442,
							"src": "483:3564:14",
							"usedErrors": []
						}
					],
					"src": "49:4000:14"
				},
				"id": 14
			},
			"packages/contracts/src/framework/plugin/setup/PluginSetup.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/framework/plugin/setup/PluginSetup.sol",
					"exportedSymbols": {
						"Clones": [
							110
						],
						"ERC165": [
							977
						],
						"ERC165Checker": [
							1171
						],
						"IPluginSetup": [
							1441
						],
						"IProtocolVersion": [
							1565
						],
						"PermissionLib": [
							1369
						],
						"PluginSetup": [
							1529
						],
						"ProtocolVersion": [
							1587
						],
						"createERC1967": [
							1553
						]
					},
					"id": 1530,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:15"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165.sol",
							"id": 1445,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 978,
							"src": "76:143:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1444,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 977,
										"src": "84:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/utils/introspection/ERC165Checker.sol",
							"id": 1447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1172,
							"src": "221:157:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1446,
										"name": "ERC165Checker",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1171,
										"src": "229:13:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/Clones.sol",
							"id": 1449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 111,
							"src": "380:129:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1448,
										"name": "Clones",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 110,
										"src": "388:6:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
							"file": "../../../utils/protocol/ProtocolVersion.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1588,
							"src": "513:94:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1450,
										"name": "IProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1565,
										"src": "521:16:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1451,
										"name": "ProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1587,
										"src": "539:15:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/core/permission/PermissionLib.sol",
							"file": "../../../core/permission/PermissionLib.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1370,
							"src": "609:73:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1453,
										"name": "PermissionLib",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1369,
										"src": "617:13:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/utils/Proxy.sol",
							"file": "../../../utils/Proxy.sol",
							"id": 1456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1554,
							"src": "684:77:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1455,
										"name": "createERC1967Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1553,
										"src": "692:18:15",
										"typeDescriptions": {}
									},
									"local": "createERC1967",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/framework/plugin/setup/IPluginSetup.sol",
							"file": "./IPluginSetup.sol",
							"id": 1458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1530,
							"sourceUnit": 1442,
							"src": "763:48:15",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1457,
										"name": "IPluginSetup",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1441,
										"src": "771:12:15",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1460,
										"name": "ERC165",
										"nameLocations": [
											"1065:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 977,
										"src": "1065:6:15"
									},
									"id": 1461,
									"nodeType": "InheritanceSpecifier",
									"src": "1065:6:15"
								},
								{
									"baseName": {
										"id": 1462,
										"name": "IPluginSetup",
										"nameLocations": [
											"1073:12:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1441,
										"src": "1073:12:15"
									},
									"id": 1463,
									"nodeType": "InheritanceSpecifier",
									"src": "1073:12:15"
								},
								{
									"baseName": {
										"id": 1464,
										"name": "ProtocolVersion",
										"nameLocations": [
											"1087:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1587,
										"src": "1087:15:15"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "1087:15:15"
								}
							],
							"canonicalName": "PluginSetup",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "815:217:15",
								"text": "@title PluginSetup\n @author Aragon Association - 2022-2023\n @notice An abstract contract that developers have to inherit from to write the setup of a plugin.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 1529,
							"linearizedBaseContracts": [
								1529,
								1587,
								1565,
								1441,
								977,
								1183
							],
							"name": "PluginSetup",
							"nameLocation": "1050:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1421
									],
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "1412:2:15",
										"statements": []
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1110:28:15",
										"text": "@inheritdoc IPluginSetup"
									},
									"functionSelector": "a8a9c29e",
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "prepareUpdate",
									"nameLocation": "1153:13:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1475,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1313:8:15"
									},
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "_dao",
												"nameLocation": "1185:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1177:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_currentBuild",
												"nameLocation": "1207:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1200:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1469,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1200:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "_payload",
												"nameLocation": "1253:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1231:30:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SetupPayload_$1392_calldata_ptr",
													"typeString": "struct IPluginSetup.SetupPayload"
												},
												"typeName": {
													"id": 1472,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1471,
														"name": "SetupPayload",
														"nameLocations": [
															"1231:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1392,
														"src": "1231:12:15"
													},
													"referencedDeclaration": 1392,
													"src": "1231:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SetupPayload_$1392_storage_ptr",
														"typeString": "struct IPluginSetup.SetupPayload"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:102:15"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "initData",
												"nameLocation": "1353:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1340:21:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1340:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "preparedSetupData",
												"nameLocation": "1388:17:15",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "1363:42:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PreparedSetupData_$1384_memory_ptr",
													"typeString": "struct IPluginSetup.PreparedSetupData"
												},
												"typeName": {
													"id": 1479,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1478,
														"name": "PreparedSetupData",
														"nameLocations": [
															"1363:17:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1384,
														"src": "1363:17:15"
													},
													"referencedDeclaration": 1384,
													"src": "1363:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PreparedSetupData_$1384_storage_ptr",
														"typeString": "struct IPluginSetup.PreparedSetupData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:67:15"
									},
									"scope": 1529,
									"src": "1144:270:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1498,
										"nodeType": "Block",
										"src": "1978:63:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1494,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "2010:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1495,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2027:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1493,
														"name": "createERC1967",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "1996:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (address,bytes memory) returns (address)"
														}
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1996:37:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1497,
												"nodeType": "Return",
												"src": "1989:44:15"
											}
										]
									},
									"documentation": {
										"id": 1484,
										"nodeType": "StructuredDocumentation",
										"src": "1422:425:15",
										"text": "@notice A convenience function to create an [ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) proxy contract pointing to an implementation and being associated to a DAO.\n @param _implementation The address of the implementation contract to which the proxy is pointing to.\n @param _data The data to initialize the storage of the proxy contract.\n @return The address of the created proxy contract."
									},
									"id": 1499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createERC1967Proxy",
									"nameLocation": "1862:18:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "1899:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1891:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1938:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1925:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1925:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:70:15"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1969:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:9:15"
									},
									"scope": 1529,
									"src": "1853:188:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										976
									],
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "2346:206:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1508,
																"name": "_interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "2377:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1510,
																			"name": "IPluginSetup",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1441,
																			"src": "2398:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IPluginSetup_$1441_$",
																				"typeString": "type(contract IPluginSetup)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IPluginSetup_$1441_$",
																				"typeString": "type(contract IPluginSetup)"
																			}
																		],
																		"id": 1509,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2393:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2393:18:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IPluginSetup_$1441",
																		"typeString": "type(contract IPluginSetup)"
																	}
																},
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2412:11:15",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2393:30:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2377:46:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1514,
																"name": "_interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "2440:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1516,
																			"name": "IProtocolVersion",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "2461:16:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IProtocolVersion_$1565_$",
																				"typeString": "type(contract IProtocolVersion)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IProtocolVersion_$1565_$",
																				"typeString": "type(contract IProtocolVersion)"
																			}
																		],
																		"id": 1515,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2456:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2456:22:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IProtocolVersion_$1565",
																		"typeString": "type(contract IProtocolVersion)"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2479:11:15",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "2456:34:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "2440:50:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2377:113:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1523,
																"name": "_interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "2531:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1521,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2507:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_PluginSetup_$1529_$",
																	"typeString": "type(contract super PluginSetup)"
																}
															},
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2513:17:15",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 976,
															"src": "2507:23:15",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2507:37:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2377:167:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1526,
												"nodeType": "Return",
												"src": "2357:187:15"
											}
										]
									},
									"documentation": {
										"id": 1500,
										"nodeType": "StructuredDocumentation",
										"src": "2049:199:15",
										"text": "@notice Checks if this or the parent contract supports an interface by its ID.\n @param _interfaceId The ID of the interface.\n @return Returns `true` if the interface is supported."
									},
									"functionSelector": "01ffc9a7",
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2263:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1504,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2322:8:15"
									},
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "_interfaceId",
												"nameLocation": "2288:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2281:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1501,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2281:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:21:15"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "2340:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2340:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2339:6:15"
									},
									"scope": 1529,
									"src": "2254:298:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1530,
							"src": "1032:1523:15",
							"usedErrors": []
						}
					],
					"src": "49:2508:15"
				},
				"id": 15
			},
			"packages/contracts/src/utils/Proxy.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/Proxy.sol",
					"exportedSymbols": {
						"Address": [
							843
						],
						"ERC1967Proxy": [
							147
						],
						"ERC1967Upgrade": [
							451
						],
						"IBeacon": [
							513
						],
						"IERC1822Proxiable": [
							30
						],
						"IERC1967": [
							20
						],
						"Proxy": [
							503
						],
						"StorageSlot": [
							953
						],
						"createERC1967Proxy": [
							1553
						]
					},
					"id": 1554,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:16"
						},
						{
							"absolutePath": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"file": "https://raw.githubusercontent.com/mzfshark/openzeppelin-contracts/release-v4.9/contracts/proxy/ERC1967/ERC1967Proxy.sol",
							"id": 1532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1554,
							"sourceUnit": 148,
							"src": "76:129:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"body": {
								"id": 1552,
								"nodeType": "Block",
								"src": "1088:58:16",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"id": 1547,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "1127:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1548,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "1135:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1110:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$147_$",
															"typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
														},
														"typeName": {
															"id": 1545,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1544,
																"name": "ERC1967Proxy",
																"nameLocations": [
																	"1114:12:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 147,
																"src": "1114:12:16"
															},
															"referencedDeclaration": 147,
															"src": "1114:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1967Proxy_$147",
																"typeString": "contract ERC1967Proxy"
															}
														}
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1110:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC1967Proxy_$147",
														"typeString": "contract ERC1967Proxy"
													}
												}
											],
											"expression": {
												"argumentTypes": [
													{
														"typeIdentifier": "t_contract$_ERC1967Proxy_$147",
														"typeString": "contract ERC1967Proxy"
													}
												],
												"id": 1543,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"nodeType": "ElementaryTypeNameExpression",
												"src": "1102:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_address_$",
													"typeString": "type(address)"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:16",
													"typeDescriptions": {}
												}
											},
											"id": 1550,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "typeConversion",
											"lValueRequested": false,
											"nameLocations": [],
											"names": [],
											"nodeType": "FunctionCall",
											"src": "1102:40:16",
											"tryCall": false,
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"functionReturnParameters": 1541,
										"id": 1551,
										"nodeType": "Return",
										"src": "1095:47:16"
									}
								]
							},
							"documentation": {
								"id": 1533,
								"nodeType": "StructuredDocumentation",
								"src": "209:797:16",
								"text": "@notice Free function to create a [ERC-1967](https://eips.ethereum.org/EIPS/eip-1967) proxy contract based on the passed base contract address.\n @param _logic The base contract address.\n @param _data The constructor arguments for this contract.\n @return The address of the proxy contract created.\n @dev Initializes the upgradeable proxy with an initial implementation specified by _logic. If _data is non-empty, itâ€™s used as data in a delegate call to _logic. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor (see [OpenZeppelin ERC1967Proxy-constructor](https://docs.openzeppelin.com/contracts/4.x/api/proxy#ERC1967Proxy-constructor-address-bytes-)).\n @custom:security-contact sirt@aragon.org"
							},
							"id": 1553,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "createERC1967Proxy",
							"nameLocation": "1015:18:16",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 1538,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1535,
										"mutability": "mutable",
										"name": "_logic",
										"nameLocation": "1042:6:16",
										"nodeType": "VariableDeclaration",
										"scope": 1553,
										"src": "1034:14:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1534,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1034:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									},
									{
										"constant": false,
										"id": 1537,
										"mutability": "mutable",
										"name": "_data",
										"nameLocation": "1063:5:16",
										"nodeType": "VariableDeclaration",
										"scope": 1553,
										"src": "1050:18:16",
										"stateVariable": false,
										"storageLocation": "memory",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_memory_ptr",
											"typeString": "bytes"
										},
										"typeName": {
											"id": 1536,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "1050:5:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1033:36:16"
							},
							"returnParameters": {
								"id": 1541,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1540,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 1553,
										"src": "1079:7:16",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1079:7:16",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "1078:9:16"
							},
							"scope": 1554,
							"src": "1006:140:16",
							"stateMutability": "nonpayable",
							"virtual": false,
							"visibility": "internal"
						}
					],
					"src": "49:1099:16"
				},
				"id": 16
			},
			"packages/contracts/src/utils/protocol/IProtocolVersion.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/protocol/IProtocolVersion.sol",
					"exportedSymbols": {
						"IProtocolVersion": [
							1565
						]
					},
					"id": 1566,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1555,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProtocolVersion",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1556,
								"nodeType": "StructuredDocumentation",
								"src": "76:203:17",
								"text": "@title IProtocolVersion\n @author Aragon Association - 2022-2023\n @notice An interface defining the semantic Aragon OSx protocol version number.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": false,
							"id": 1565,
							"linearizedBaseContracts": [
								1565
							],
							"name": "IProtocolVersion",
							"nameLocation": "289:16:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "313:446:17",
										"text": "@notice Returns the semantic Aragon OSx protocol version number that the implementing contract is associated with.\n @return _version Returns the semantic Aragon OSx protocol version number.\n @dev This version number is not to be confused with the `release` and `build` numbers found in the `Version.Tag` struct inside the `PluginRepo` contract being used to version plugin setup and associated plugin implementation contracts."
									},
									"functionSelector": "2ae9c600",
									"id": 1564,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolVersion",
									"nameLocation": "774:15:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:17"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "831:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "815:24:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
													"typeString": "uint8[3]"
												},
												"typeName": {
													"baseType": {
														"id": 1559,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "815:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1561,
													"length": {
														"hexValue": "33",
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "821:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "815:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
														"typeString": "uint8[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:26:17"
									},
									"scope": 1565,
									"src": "765:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1566,
							"src": "279:565:17",
							"usedErrors": []
						}
					],
					"src": "49:797:17"
				},
				"id": 17
			},
			"packages/contracts/src/utils/protocol/ProtocolVersion.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/utils/protocol/ProtocolVersion.sol",
					"exportedSymbols": {
						"IProtocolVersion": [
							1565
						],
						"ProtocolVersion": [
							1587
						]
					},
					"id": 1588,
					"license": "AGPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".8"
							],
							"nodeType": "PragmaDirective",
							"src": "49:23:18"
						},
						{
							"absolutePath": "packages/contracts/src/utils/protocol/IProtocolVersion.sol",
							"file": "./IProtocolVersion.sol",
							"id": 1569,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1588,
							"sourceUnit": 1566,
							"src": "76:56:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1568,
										"name": "IProtocolVersion",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1565,
										"src": "84:16:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1571,
										"name": "IProtocolVersion",
										"nameLocations": [
											"518:16:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1565,
										"src": "518:16:18"
									},
									"id": 1572,
									"nodeType": "InheritanceSpecifier",
									"src": "518:16:18"
								}
							],
							"canonicalName": "ProtocolVersion",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1570,
								"nodeType": "StructuredDocumentation",
								"src": "136:345:18",
								"text": "@title ProtocolVersion\n @author Aragon Association - 2023\n @notice An abstract, stateless, non-upgradeable contract providing the current Aragon OSx protocol version number.\n @dev Do not add any new variables to this contract that would shift down storage in the inheritance chain.\n @custom:security-contact sirt@aragon.org"
							},
							"fullyImplemented": true,
							"id": 1587,
							"linearizedBaseContracts": [
								1587,
								1565
							],
							"name": "ProtocolVersion",
							"nameLocation": "499:15:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1564
									],
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "721:35:18",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "31",
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "740:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "34",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "743:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														{
															"hexValue": "30",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "746:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 1583,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "739:9:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
														"typeString": "uint8[3] memory"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1584,
												"nodeType": "Return",
												"src": "732:16:18"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "618:32:18",
										"text": "@inheritdoc IProtocolVersion"
									},
									"functionSelector": "2ae9c600",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "protocolVersion",
									"nameLocation": "665:15:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:18"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "704:15:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$3_memory_ptr",
													"typeString": "uint8[3]"
												},
												"typeName": {
													"baseType": {
														"id": 1575,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "704:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1577,
													"length": {
														"hexValue": "33",
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "710:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "ArrayTypeName",
													"src": "704:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$3_storage_ptr",
														"typeString": "uint8[3]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:17:18"
									},
									"scope": 1587,
									"src": "656:100:18",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1588,
							"src": "481:278:18",
							"usedErrors": []
						}
					],
					"src": "49:712:18"
				},
				"id": 18
			}
		}
	}
}