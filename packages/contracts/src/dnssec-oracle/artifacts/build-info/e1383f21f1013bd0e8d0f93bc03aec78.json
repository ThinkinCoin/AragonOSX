{
	"id": "e1383f21f1013bd0e8d0f93bc03aec78",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./Owned.sol\";\r\nimport \"./BytesUtils.sol\";\r\nimport \"./RRUtils.sol\";\r\nimport \"./DNSSEC.sol\";\r\nimport \"./algorithms/Algorithm.sol\";\r\nimport \"./digests/Digest.sol\";\r\nimport \"@ensdomains/buffer/contracts/Buffer.sol\";\r\n\r\n/*\r\n * @dev An oracle contract that verifies and stores DNSSEC-validated DNS records.\r\n * @note This differs from the DNSSEC spec defined in RFC4034 and RFC4035 in some key regards:\r\n *       - NSEC & NSEC3 are not supported; only positive proofs are allowed.\r\n *       - Proofs involving wildcard names will not validate.\r\n *       - TTLs on records are ignored, as data is not stored persistently.\r\n *       - Canonical form of names is not checked; in ENS this is done on the frontend, so submitting\r\n *         proofs with non-canonical names will only result in registering unresolvable ENS names.\r\n */\r\ncontract DNSSECImpl is DNSSEC, Owned {\r\n    using Buffer for Buffer.buffer;\r\n    using BytesUtils for bytes;\r\n    using RRUtils for *;\r\n\r\n    uint16 constant DNSCLASS_IN = 1;\r\n\r\n    uint16 constant DNSTYPE_DS = 43;\r\n    uint16 constant DNSTYPE_DNSKEY = 48;\r\n\r\n    uint256 constant DNSKEY_FLAG_ZONEKEY = 0x100;\r\n\r\n    error InvalidLabelCount(bytes name, uint256 labelsExpected);\r\n    error SignatureNotValidYet(uint32 inception, uint32 now);\r\n    error SignatureExpired(uint32 expiration, uint32 now);\r\n    error InvalidClass(uint16 class);\r\n    error InvalidRRSet();\r\n    error SignatureTypeMismatch(uint16 rrsetType, uint16 sigType);\r\n    error InvalidSignerName(bytes rrsetName, bytes signerName);\r\n    error InvalidProofType(uint16 proofType);\r\n    error ProofNameMismatch(bytes signerName, bytes proofName);\r\n    error NoMatchingProof(bytes signerName);\r\n\r\n    mapping(uint8 => Algorithm) public algorithms;\r\n    mapping(uint8 => Digest) public digests;\r\n\r\n    /**\r\n     * @dev Constructor.\r\n     * @param _anchors The binary format RR entries for the root DS records.\r\n     */\r\n    constructor(bytes memory _anchors) {\r\n        // Insert the 'trust anchors' - the key hashes that start the chain\r\n        // of trust for all other records.\r\n        anchors = _anchors;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the contract address for a signature verification algorithm.\r\n     *      Callable only by the owner.\r\n     * @param id The algorithm ID\r\n     * @param algo The address of the algorithm contract.\r\n     */\r\n    function setAlgorithm(uint8 id, Algorithm algo) public owner_only {\r\n        algorithms[id] = algo;\r\n        emit AlgorithmUpdated(id, address(algo));\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the contract address for a digest verification algorithm.\r\n     *      Callable only by the owner.\r\n     * @param id The digest ID\r\n     * @param digest The address of the digest contract.\r\n     */\r\n    function setDigest(uint8 id, Digest digest) public owner_only {\r\n        digests[id] = digest;\r\n        emit DigestUpdated(id, address(digest));\r\n    }\r\n\r\n    /**\r\n     * @dev Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.\r\n     *      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.\r\n     * @param input A list of signed RRSets.\r\n     * @return rrs The RRData from the last RRSet in the chain.\r\n     * @return inception The inception time of the signed record set.\r\n     */\r\n    function verifyRRSet(\r\n        RRSetWithSignature[] memory input\r\n    )\r\n        external\r\n        view\r\n        virtual\r\n        override\r\n        returns (bytes memory rrs, uint32 inception)\r\n    {\r\n        return verifyRRSet(input, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.\r\n     *      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.\r\n     * @param input A list of signed RRSets.\r\n     * @param now The Unix timestamp to validate the records at.\r\n     * @return rrs The RRData from the last RRSet in the chain.\r\n     * @return inception The inception time of the signed record set.\r\n     */\r\n    function verifyRRSet(\r\n        RRSetWithSignature[] memory input,\r\n        uint256 now\r\n    )\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (bytes memory rrs, uint32 inception)\r\n    {\r\n        bytes memory proof = anchors;\r\n        for (uint256 i = 0; i < input.length; i++) {\r\n            RRUtils.SignedSet memory rrset = validateSignedSet(\r\n                input[i],\r\n                proof,\r\n                now\r\n            );\r\n            proof = rrset.data;\r\n            inception = rrset.inception;\r\n        }\r\n        return (proof, inception);\r\n    }\r\n\r\n    /**\r\n     * @dev Validates an RRSet against the already trusted RR provided in `proof`.\r\n     *\r\n     * @param input The signed RR set. This is in the format described in section\r\n     *        5.3.2 of RFC4035: The RRDATA section from the RRSIG without the signature\r\n     *        data, followed by a series of canonicalised RR records that the signature\r\n     *        applies to.\r\n     * @param proof The DNSKEY or DS to validate the signature against.\r\n     * @param now The current timestamp.\r\n     */\r\n    function validateSignedSet(\r\n        RRSetWithSignature memory input,\r\n        bytes memory proof,\r\n        uint256 now\r\n    ) internal view returns (RRUtils.SignedSet memory rrset) {\r\n        rrset = input.rrset.readSignedSet();\r\n\r\n        // Do some basic checks on the RRs and extract the name\r\n        bytes memory name = validateRRs(rrset, rrset.typeCovered);\r\n        if (name.labelCount(0) != rrset.labels) {\r\n            revert InvalidLabelCount(name, rrset.labels);\r\n        }\r\n        rrset.name = name;\r\n\r\n        // All comparisons involving the Signature Expiration and\r\n        // Inception fields MUST use \"serial number arithmetic\", as\r\n        // defined in RFC 1982\r\n\r\n        // o  The validator's notion of the current time MUST be less than or\r\n        //    equal to the time listed in the RRSIG RR's Expiration field.\r\n        if (!RRUtils.serialNumberGte(rrset.expiration, uint32(now))) {\r\n            revert SignatureExpired(rrset.expiration, uint32(now));\r\n        }\r\n\r\n        // o  The validator's notion of the current time MUST be greater than or\r\n        //    equal to the time listed in the RRSIG RR's Inception field.\r\n        if (!RRUtils.serialNumberGte(uint32(now), rrset.inception)) {\r\n            revert SignatureNotValidYet(rrset.inception, uint32(now));\r\n        }\r\n\r\n        // Validate the signature\r\n        verifySignature(name, rrset, input, proof);\r\n\r\n        return rrset;\r\n    }\r\n\r\n    /**\r\n     * @dev Validates a set of RRs.\r\n     * @param rrset The RR set.\r\n     * @param typecovered The type covered by the RRSIG record.\r\n     */\r\n    function validateRRs(\r\n        RRUtils.SignedSet memory rrset,\r\n        uint16 typecovered\r\n    ) internal pure returns (bytes memory name) {\r\n        // Iterate over all the RRs\r\n        for (\r\n            RRUtils.RRIterator memory iter = rrset.rrs();\r\n            !iter.done();\r\n            iter.next()\r\n        ) {\r\n            // We only support class IN (Internet)\r\n            if (iter.class != DNSCLASS_IN) {\r\n                revert InvalidClass(iter.class);\r\n            }\r\n\r\n            if (name.length == 0) {\r\n                name = iter.name();\r\n            } else {\r\n                // Name must be the same on all RRs. We do things this way to avoid copying the name\r\n                // repeatedly.\r\n                if (\r\n                    name.length != iter.data.nameLength(iter.offset) ||\r\n                    !name.equals(0, iter.data, iter.offset, name.length)\r\n                ) {\r\n                    revert InvalidRRSet();\r\n                }\r\n            }\r\n\r\n            // o  The RRSIG RR's Type Covered field MUST equal the RRset's type.\r\n            if (iter.dnstype != typecovered) {\r\n                revert SignatureTypeMismatch(iter.dnstype, typecovered);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Performs signature verification.\r\n     *\r\n     * Throws or reverts if unable to verify the record.\r\n     *\r\n     * @param name The name of the RRSIG record, in DNS label-sequence format.\r\n     * @param data The original data to verify.\r\n     * @param proof A DS or DNSKEY record that's already verified by the oracle.\r\n     */\r\n    function verifySignature(\r\n        bytes memory name,\r\n        RRUtils.SignedSet memory rrset,\r\n        RRSetWithSignature memory data,\r\n        bytes memory proof\r\n    ) internal view {\r\n        // o  The RRSIG RR's Signer's Name field MUST be the name of the zone\r\n        //    that contains the RRset.\r\n        if (!name.isSubdomainOf(rrset.signerName)) {\r\n            revert InvalidSignerName(name, rrset.signerName);\r\n        }\r\n\r\n        RRUtils.RRIterator memory proofRR = proof.iterateRRs(0);\r\n        // Check the proof\r\n        if (proofRR.dnstype == DNSTYPE_DS) {\r\n            verifyWithDS(rrset, data, proofRR);\r\n        } else if (proofRR.dnstype == DNSTYPE_DNSKEY) {\r\n            verifyWithKnownKey(rrset, data, proofRR);\r\n        } else {\r\n            revert InvalidProofType(proofRR.dnstype);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to verify a signed RRSET against an already known public key.\r\n     * @param rrset The signed set to verify.\r\n     * @param data The original data the signed set was read from.\r\n     * @param proof The serialized DS or DNSKEY record to use as proof.\r\n     */\r\n    function verifyWithKnownKey(\r\n        RRUtils.SignedSet memory rrset,\r\n        RRSetWithSignature memory data,\r\n        RRUtils.RRIterator memory proof\r\n    ) internal view {\r\n        // Check the DNSKEY's owner name matches the signer name on the RRSIG\r\n        for (; !proof.done(); proof.next()) {\r\n            bytes memory proofName = proof.name();\r\n            if (!proofName.equals(rrset.signerName)) {\r\n                revert ProofNameMismatch(rrset.signerName, proofName);\r\n            }\r\n\r\n            bytes memory keyrdata = proof.rdata();\r\n            RRUtils.DNSKEY memory dnskey = keyrdata.readDNSKEY(\r\n                0,\r\n                keyrdata.length\r\n            );\r\n            if (verifySignatureWithKey(dnskey, keyrdata, rrset, data)) {\r\n                return;\r\n            }\r\n        }\r\n        revert NoMatchingProof(rrset.signerName);\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to verify some data using a provided key and a signature.\r\n     * @param dnskey The dns key record to verify the signature with.\r\n     * @param rrset The signed RRSET being verified.\r\n     * @param data The original data `rrset` was decoded from.\r\n     * @return True iff the key verifies the signature.\r\n     */\r\n    function verifySignatureWithKey(\r\n        RRUtils.DNSKEY memory dnskey,\r\n        bytes memory keyrdata,\r\n        RRUtils.SignedSet memory rrset,\r\n        RRSetWithSignature memory data\r\n    ) internal view returns (bool) {\r\n        // TODO: Check key isn't expired, unless updating key itself\r\n\r\n        // The Protocol Field MUST have value 3 (RFC4034 2.1.2)\r\n        if (dnskey.protocol != 3) {\r\n            return false;\r\n        }\r\n\r\n        // o The RRSIG RR's Signer's Name, Algorithm, and Key Tag fields MUST\r\n        //   match the owner name, algorithm, and key tag for some DNSKEY RR in\r\n        //   the zone's apex DNSKEY RRset.\r\n        if (dnskey.algorithm != rrset.algorithm) {\r\n            return false;\r\n        }\r\n        uint16 computedkeytag = keyrdata.computeKeytag();\r\n        if (computedkeytag != rrset.keytag) {\r\n            return false;\r\n        }\r\n\r\n        // o The matching DNSKEY RR MUST be present in the zone's apex DNSKEY\r\n        //   RRset, and MUST have the Zone Flag bit (DNSKEY RDATA Flag bit 7)\r\n        //   set.\r\n        if (dnskey.flags & DNSKEY_FLAG_ZONEKEY == 0) {\r\n            return false;\r\n        }\r\n\r\n        Algorithm algorithm = algorithms[dnskey.algorithm];\r\n        if (address(algorithm) == address(0)) {\r\n            return false;\r\n        }\r\n        return algorithm.verify(keyrdata, data.rrset, data.sig);\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to verify a signed RRSET against an already known hash. This function assumes\r\n     *      that the record\r\n     * @param rrset The signed set to verify.\r\n     * @param data The original data the signed set was read from.\r\n     * @param proof The serialized DS or DNSKEY record to use as proof.\r\n     */\r\n    function verifyWithDS(\r\n        RRUtils.SignedSet memory rrset,\r\n        RRSetWithSignature memory data,\r\n        RRUtils.RRIterator memory proof\r\n    ) internal view {\r\n        uint256 proofOffset = proof.offset;\r\n        for (\r\n            RRUtils.RRIterator memory iter = rrset.rrs();\r\n            !iter.done();\r\n            iter.next()\r\n        ) {\r\n            if (iter.dnstype != DNSTYPE_DNSKEY) {\r\n                revert InvalidProofType(iter.dnstype);\r\n            }\r\n\r\n            bytes memory keyrdata = iter.rdata();\r\n            RRUtils.DNSKEY memory dnskey = keyrdata.readDNSKEY(\r\n                0,\r\n                keyrdata.length\r\n            );\r\n            if (verifySignatureWithKey(dnskey, keyrdata, rrset, data)) {\r\n                // It's self-signed - look for a DS record to verify it.\r\n                if (\r\n                    verifyKeyWithDS(rrset.signerName, proof, dnskey, keyrdata)\r\n                ) {\r\n                    return;\r\n                }\r\n                // Rewind proof iterator to the start for the next loop iteration.\r\n                proof.nextOffset = proofOffset;\r\n                proof.next();\r\n            }\r\n        }\r\n        revert NoMatchingProof(rrset.signerName);\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to verify a key using DS records.\r\n     * @param keyname The DNS name of the key, in DNS label-sequence format.\r\n     * @param dsrrs The DS records to use in verification.\r\n     * @param dnskey The dnskey to verify.\r\n     * @param keyrdata The RDATA section of the key.\r\n     * @return True if a DS record verifies this key.\r\n     */\r\n    function verifyKeyWithDS(\r\n        bytes memory keyname,\r\n        RRUtils.RRIterator memory dsrrs,\r\n        RRUtils.DNSKEY memory dnskey,\r\n        bytes memory keyrdata\r\n    ) internal view returns (bool) {\r\n        uint16 keytag = keyrdata.computeKeytag();\r\n        for (; !dsrrs.done(); dsrrs.next()) {\r\n            bytes memory proofName = dsrrs.name();\r\n            if (!proofName.equals(keyname)) {\r\n                revert ProofNameMismatch(keyname, proofName);\r\n            }\r\n\r\n            RRUtils.DS memory ds = dsrrs.data.readDS(\r\n                dsrrs.rdataOffset,\r\n                dsrrs.nextOffset - dsrrs.rdataOffset\r\n            );\r\n            if (ds.keytag != keytag) {\r\n                continue;\r\n            }\r\n            if (ds.algorithm != dnskey.algorithm) {\r\n                continue;\r\n            }\r\n\r\n            Buffer.buffer memory buf;\r\n            buf.init(keyname.length + keyrdata.length);\r\n            buf.append(keyname);\r\n            buf.append(keyrdata);\r\n            if (verifyDSHash(ds.digestType, buf.buf, ds.digest)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @dev Attempts to verify a DS record's hash value against some data.\r\n     * @param digesttype The digest ID from the DS record.\r\n     * @param data The data to digest.\r\n     * @param digest The digest data to check against.\r\n     * @return True iff the digest matches.\r\n     */\r\n    function verifyDSHash(\r\n        uint8 digesttype,\r\n        bytes memory data,\r\n        bytes memory digest\r\n    ) internal view returns (bool) {\r\n        if (address(digests[digesttype]) == address(0)) {\r\n            return false;\r\n        }\r\n        return digests[digesttype].verify(data, digest);\r\n    }\r\n}"
			},
			"@ensdomains/buffer/contracts/Buffer.sol": {
				"content": "// SPDX-License-Identifier: BSD-2-Clause\npragma solidity ^0.8.4;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for appending to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n    /**\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n    *      a capacity. The capacity may be longer than the current value, in\n    *      which case it can be extended without the need to allocate more memory.\n    */\n    struct buffer {\n        bytes buf;\n        uint capacity;\n    }\n\n    /**\n    * @dev Initializes a buffer with an initial capacity.\n    * @param buf The buffer to initialize.\n    * @param capacity The number of bytes of space to allocate the buffer.\n    * @return The buffer, for chaining.\n    */\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n        if (capacity % 32 != 0) {\n            capacity += 32 - (capacity % 32);\n        }\n        // Allocate space for the buffer data\n        buf.capacity = capacity;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(buf, ptr)\n            mstore(ptr, 0)\n            let fpm := add(32, add(ptr, capacity))\n            if lt(fpm, ptr) {\n                revert(0, 0)\n            }\n            mstore(0x40, fpm)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Initializes a new buffer from an existing bytes object.\n    *      Changes to the buffer may mutate the original value.\n    * @param b The bytes object to initialize the buffer with.\n    * @return A new buffer.\n    */\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n        buffer memory buf;\n        buf.buf = b;\n        buf.capacity = b.length;\n        return buf;\n    }\n\n    function resize(buffer memory buf, uint capacity) private pure {\n        bytes memory oldbuf = buf.buf;\n        init(buf, capacity);\n        append(buf, oldbuf);\n    }\n\n    /**\n    * @dev Sets buffer length to 0.\n    * @param buf The buffer to truncate.\n    * @return The original buffer, for chaining..\n    */\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\n        assembly {\n            let bufptr := mload(buf)\n            mstore(bufptr, 0)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\n        require(len <= data.length);\n\n        uint off = buf.buf.length;\n        uint newCapacity = off + len;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint dest;\n        uint src;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Start address = buffer address + offset + sizeof(buffer length)\n            dest := add(add(bufptr, 32), off)\n            // Update buffer length if we're extending it\n            if gt(newCapacity, buflen) {\n                mstore(bufptr, newCapacity)\n            }\n            src := add(data, 32)\n        }\n\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        unchecked {\n            uint mask = (256 ** (32 - len)) - 1;\n            assembly {\n                let srcpart := and(mload(src), not(mask))\n                let destpart := and(mload(dest), mask)\n                mstore(dest, or(destpart, srcpart))\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n        return append(buf, data, data.length);\n    }\n\n    /**\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint offPlusOne = off + 1;\n        if (off >= buf.capacity) {\n            resize(buf, offPlusOne * 2);\n        }\n\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + off\n            let dest := add(add(bufptr, off), 32)\n            mstore8(dest, data)\n            // Update buffer length if we extended it\n            if gt(offPlusOne, mload(bufptr)) {\n                mstore(bufptr, offPlusOne)\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n    *      exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to write (left-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        unchecked {\n            uint mask = (256 ** len) - 1;\n            // Right-align data\n            data = data >> (8 * (32 - len));\n            assembly {\n                // Memory address of the buffer data\n                let bufptr := mload(buf)\n                // Address = buffer address + sizeof(buffer length) + newCapacity\n                let dest := add(bufptr, newCapacity)\n                mstore(dest, or(and(mload(dest), not(mask)), data))\n                // Update buffer length if we extended it\n                if gt(newCapacity, mload(bufptr)) {\n                    mstore(bufptr, newCapacity)\n                }\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chhaining.\n    */\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n        return append(buf, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n        return append(buf, data, 32);\n    }\n\n    /**\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n     *      exceed the capacity of the buffer.\n     * @param buf The buffer to append to.\n     * @param data The data to append.\n     * @param len The number of bytes to write (right-aligned).\n     * @return The original buffer.\n     */\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint mask = (256 ** len) - 1;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + newCapacity\n            let dest := add(bufptr, newCapacity)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(newCapacity, mload(bufptr)) {\n                mstore(bufptr, newCapacity)\n            }\n        }\n        return buf;\n    }\n}\n"
			},
			"packages/contracts/src/dnssec-oracle/digests/Digest.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev An interface for contracts implementing a DNSSEC digest.\r\n */\r\ninterface Digest {\r\n    /**\r\n     * @dev Verifies a cryptographic hash.\r\n     * @param data The data to hash.\r\n     * @param hash The hash to compare to.\r\n     * @return True iff the hashed data matches the provided hash value.\r\n     */\r\n    function verify(\r\n        bytes calldata data,\r\n        bytes calldata hash\r\n    ) external pure virtual returns (bool);\r\n}\r\n"
			},
			"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev An interface for contracts implementing a DNSSEC (signing) algorithm.\r\n */\r\ninterface Algorithm {\r\n    /**\r\n     * @dev Verifies a signature.\r\n     * @param key The public key to verify with.\r\n     * @param data The signed data to verify.\r\n     * @param signature The signature to verify.\r\n     * @return True iff the signature is valid.\r\n     */\r\n    function verify(\r\n        bytes calldata key,\r\n        bytes calldata data,\r\n        bytes calldata signature\r\n    ) external view virtual returns (bool);\r\n}\r\n"
			},
			"packages/contracts/src/dnssec-oracle/DNSSEC.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\npragma experimental ABIEncoderV2;\r\n\r\nabstract contract DNSSEC {\r\n    bytes public anchors;\r\n\r\n    struct RRSetWithSignature {\r\n        bytes rrset;\r\n        bytes sig;\r\n    }\r\n\r\n    event AlgorithmUpdated(uint8 id, address addr);\r\n    event DigestUpdated(uint8 id, address addr);\r\n\r\n    function verifyRRSet(\r\n        RRSetWithSignature[] memory input\r\n    ) external view virtual returns (bytes memory rrs, uint32 inception);\r\n\r\n    function verifyRRSet(\r\n        RRSetWithSignature[] memory input,\r\n        uint256 now\r\n    ) public view virtual returns (bytes memory rrs, uint32 inception);\r\n}\r\n"
			},
			"packages/contracts/src/dnssec-oracle/RRUtils.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./BytesUtils.sol\";\r\nimport \"@ensdomains/buffer/contracts/Buffer.sol\";\r\n\r\n/**\r\n * @dev RRUtils is a library that provides utilities for parsing DNS resource records.\r\n */\r\nlibrary RRUtils {\r\n    using BytesUtils for *;\r\n    using Buffer for *;\r\n\r\n    /**\r\n     * @dev Returns the number of bytes in the DNS name at 'offset' in 'self'.\r\n     * @param self The byte array to read a name from.\r\n     * @param offset The offset to start reading at.\r\n     * @return The length of the DNS name at 'offset', in bytes.\r\n     */\r\n    function nameLength(\r\n        bytes memory self,\r\n        uint256 offset\r\n    ) internal pure returns (uint256) {\r\n        uint256 idx = offset;\r\n        while (true) {\r\n            assert(idx < self.length);\r\n            uint256 labelLen = self.readUint8(idx);\r\n            idx += labelLen + 1;\r\n            if (labelLen == 0) {\r\n                break;\r\n            }\r\n        }\r\n        return idx - offset;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns a DNS format name at the specified offset of self.\r\n     * @param self The byte array to read a name from.\r\n     * @param offset The offset to start reading at.\r\n     * @return ret The name.\r\n     */\r\n    function readName(\r\n        bytes memory self,\r\n        uint256 offset\r\n    ) internal pure returns (bytes memory ret) {\r\n        uint256 len = nameLength(self, offset);\r\n        return self.substring(offset, len);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of labels in the DNS name at 'offset' in 'self'.\r\n     * @param self The byte array to read a name from.\r\n     * @param offset The offset to start reading at.\r\n     * @return The number of labels in the DNS name at 'offset', in bytes.\r\n     */\r\n    function labelCount(\r\n        bytes memory self,\r\n        uint256 offset\r\n    ) internal pure returns (uint256) {\r\n        uint256 count = 0;\r\n        while (true) {\r\n            assert(offset < self.length);\r\n            uint256 labelLen = self.readUint8(offset);\r\n            offset += labelLen + 1;\r\n            if (labelLen == 0) {\r\n                break;\r\n            }\r\n            count += 1;\r\n        }\r\n        return count;\r\n    }\r\n\r\n    uint256 constant RRSIG_TYPE = 0;\r\n    uint256 constant RRSIG_ALGORITHM = 2;\r\n    uint256 constant RRSIG_LABELS = 3;\r\n    uint256 constant RRSIG_TTL = 4;\r\n    uint256 constant RRSIG_EXPIRATION = 8;\r\n    uint256 constant RRSIG_INCEPTION = 12;\r\n    uint256 constant RRSIG_KEY_TAG = 16;\r\n    uint256 constant RRSIG_SIGNER_NAME = 18;\r\n\r\n    struct SignedSet {\r\n        uint16 typeCovered;\r\n        uint8 algorithm;\r\n        uint8 labels;\r\n        uint32 ttl;\r\n        uint32 expiration;\r\n        uint32 inception;\r\n        uint16 keytag;\r\n        bytes signerName;\r\n        bytes data;\r\n        bytes name;\r\n    }\r\n\r\n    function readSignedSet(\r\n        bytes memory data\r\n    ) internal pure returns (SignedSet memory self) {\r\n        self.typeCovered = data.readUint16(RRSIG_TYPE);\r\n        self.algorithm = data.readUint8(RRSIG_ALGORITHM);\r\n        self.labels = data.readUint8(RRSIG_LABELS);\r\n        self.ttl = data.readUint32(RRSIG_TTL);\r\n        self.expiration = data.readUint32(RRSIG_EXPIRATION);\r\n        self.inception = data.readUint32(RRSIG_INCEPTION);\r\n        self.keytag = data.readUint16(RRSIG_KEY_TAG);\r\n        self.signerName = readName(data, RRSIG_SIGNER_NAME);\r\n        self.data = data.substring(\r\n            RRSIG_SIGNER_NAME + self.signerName.length,\r\n            data.length - RRSIG_SIGNER_NAME - self.signerName.length\r\n        );\r\n    }\r\n\r\n    function rrs(\r\n        SignedSet memory rrset\r\n    ) internal pure returns (RRIterator memory) {\r\n        return iterateRRs(rrset.data, 0);\r\n    }\r\n\r\n    /**\r\n     * @dev An iterator over resource records.\r\n     */\r\n    struct RRIterator {\r\n        bytes data;\r\n        uint256 offset;\r\n        uint16 dnstype;\r\n        uint16 class;\r\n        uint32 ttl;\r\n        uint256 rdataOffset;\r\n        uint256 nextOffset;\r\n    }\r\n\r\n    /**\r\n     * @dev Begins iterating over resource records.\r\n     * @param self The byte string to read from.\r\n     * @param offset The offset to start reading at.\r\n     * @return ret An iterator object.\r\n     */\r\n    function iterateRRs(\r\n        bytes memory self,\r\n        uint256 offset\r\n    ) internal pure returns (RRIterator memory ret) {\r\n        ret.data = self;\r\n        ret.nextOffset = offset;\r\n        next(ret);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true iff there are more RRs to iterate.\r\n     * @param iter The iterator to check.\r\n     * @return True iff the iterator has finished.\r\n     */\r\n    function done(RRIterator memory iter) internal pure returns (bool) {\r\n        return iter.offset >= iter.data.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves the iterator to the next resource record.\r\n     * @param iter The iterator to advance.\r\n     */\r\n    function next(RRIterator memory iter) internal pure {\r\n        iter.offset = iter.nextOffset;\r\n        if (iter.offset >= iter.data.length) {\r\n            return;\r\n        }\r\n\r\n        // Skip the name\r\n        uint256 off = iter.offset + nameLength(iter.data, iter.offset);\r\n\r\n        // Read type, class, and ttl\r\n        iter.dnstype = iter.data.readUint16(off);\r\n        off += 2;\r\n        iter.class = iter.data.readUint16(off);\r\n        off += 2;\r\n        iter.ttl = iter.data.readUint32(off);\r\n        off += 4;\r\n\r\n        // Read the rdata\r\n        uint256 rdataLength = iter.data.readUint16(off);\r\n        off += 2;\r\n        iter.rdataOffset = off;\r\n        iter.nextOffset = off + rdataLength;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the current record.\r\n     * @param iter The iterator.\r\n     * @return A new bytes object containing the owner name from the RR.\r\n     */\r\n    function name(RRIterator memory iter) internal pure returns (bytes memory) {\r\n        return\r\n            iter.data.substring(\r\n                iter.offset,\r\n                nameLength(iter.data, iter.offset)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the rdata portion of the current record.\r\n     * @param iter The iterator.\r\n     * @return A new bytes object containing the RR's RDATA.\r\n     */\r\n    function rdata(\r\n        RRIterator memory iter\r\n    ) internal pure returns (bytes memory) {\r\n        return\r\n            iter.data.substring(\r\n                iter.rdataOffset,\r\n                iter.nextOffset - iter.rdataOffset\r\n            );\r\n    }\r\n\r\n    uint256 constant DNSKEY_FLAGS = 0;\r\n    uint256 constant DNSKEY_PROTOCOL = 2;\r\n    uint256 constant DNSKEY_ALGORITHM = 3;\r\n    uint256 constant DNSKEY_PUBKEY = 4;\r\n\r\n    struct DNSKEY {\r\n        uint16 flags;\r\n        uint8 protocol;\r\n        uint8 algorithm;\r\n        bytes publicKey;\r\n    }\r\n\r\n    function readDNSKEY(\r\n        bytes memory data,\r\n        uint256 offset,\r\n        uint256 length\r\n    ) internal pure returns (DNSKEY memory self) {\r\n        self.flags = data.readUint16(offset + DNSKEY_FLAGS);\r\n        self.protocol = data.readUint8(offset + DNSKEY_PROTOCOL);\r\n        self.algorithm = data.readUint8(offset + DNSKEY_ALGORITHM);\r\n        self.publicKey = data.substring(\r\n            offset + DNSKEY_PUBKEY,\r\n            length - DNSKEY_PUBKEY\r\n        );\r\n    }\r\n\r\n    uint256 constant DS_KEY_TAG = 0;\r\n    uint256 constant DS_ALGORITHM = 2;\r\n    uint256 constant DS_DIGEST_TYPE = 3;\r\n    uint256 constant DS_DIGEST = 4;\r\n\r\n    struct DS {\r\n        uint16 keytag;\r\n        uint8 algorithm;\r\n        uint8 digestType;\r\n        bytes digest;\r\n    }\r\n\r\n    function readDS(\r\n        bytes memory data,\r\n        uint256 offset,\r\n        uint256 length\r\n    ) internal pure returns (DS memory self) {\r\n        self.keytag = data.readUint16(offset + DS_KEY_TAG);\r\n        self.algorithm = data.readUint8(offset + DS_ALGORITHM);\r\n        self.digestType = data.readUint8(offset + DS_DIGEST_TYPE);\r\n        self.digest = data.substring(offset + DS_DIGEST, length - DS_DIGEST);\r\n    }\r\n\r\n    function isSubdomainOf(\r\n        bytes memory self,\r\n        bytes memory other\r\n    ) internal pure returns (bool) {\r\n        uint256 off = 0;\r\n        uint256 counts = labelCount(self, 0);\r\n        uint256 othercounts = labelCount(other, 0);\r\n\r\n        while (counts > othercounts) {\r\n            off = progress(self, off);\r\n            counts--;\r\n        }\r\n\r\n        return self.equals(off, other, 0);\r\n    }\r\n\r\n    function compareNames(\r\n        bytes memory self,\r\n        bytes memory other\r\n    ) internal pure returns (int256) {\r\n        if (self.equals(other)) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 off;\r\n        uint256 otheroff;\r\n        uint256 prevoff;\r\n        uint256 otherprevoff;\r\n        uint256 counts = labelCount(self, 0);\r\n        uint256 othercounts = labelCount(other, 0);\r\n\r\n        // Keep removing labels from the front of the name until both names are equal length\r\n        while (counts > othercounts) {\r\n            prevoff = off;\r\n            off = progress(self, off);\r\n            counts--;\r\n        }\r\n\r\n        while (othercounts > counts) {\r\n            otherprevoff = otheroff;\r\n            otheroff = progress(other, otheroff);\r\n            othercounts--;\r\n        }\r\n\r\n        // Compare the last nonequal labels to each other\r\n        while (counts > 0 && !self.equals(off, other, otheroff)) {\r\n            prevoff = off;\r\n            off = progress(self, off);\r\n            otherprevoff = otheroff;\r\n            otheroff = progress(other, otheroff);\r\n            counts -= 1;\r\n        }\r\n\r\n        if (off == 0) {\r\n            return -1;\r\n        }\r\n        if (otheroff == 0) {\r\n            return 1;\r\n        }\r\n\r\n        return\r\n            self.compare(\r\n                prevoff + 1,\r\n                self.readUint8(prevoff),\r\n                other,\r\n                otherprevoff + 1,\r\n                other.readUint8(otherprevoff)\r\n            );\r\n    }\r\n\r\n    /**\r\n     * @dev Compares two serial numbers using RFC1982 serial number math.\r\n     */\r\n    function serialNumberGte(\r\n        uint32 i1,\r\n        uint32 i2\r\n    ) internal pure returns (bool) {\r\n        unchecked {\r\n            return int32(i1) - int32(i2) >= 0;\r\n        }\r\n    }\r\n\r\n    function progress(\r\n        bytes memory body,\r\n        uint256 off\r\n    ) internal pure returns (uint256) {\r\n        return off + 1 + body.readUint8(off);\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the keytag for a chunk of data.\r\n     * @param data The data to compute a keytag for.\r\n     * @return The computed key tag.\r\n     */\r\n    function computeKeytag(bytes memory data) internal pure returns (uint16) {\r\n        /* This function probably deserves some explanation.\r\n         * The DNSSEC keytag function is a checksum that relies on summing up individual bytes\r\n         * from the input string, with some mild bitshifting. Here's a Naive solidity implementation:\r\n         *\r\n         *     function computeKeytag(bytes memory data) internal pure returns (uint16) {\r\n         *         uint ac;\r\n         *         for (uint i = 0; i < data.length; i++) {\r\n         *             ac += i & 1 == 0 ? uint16(data.readUint8(i)) << 8 : data.readUint8(i);\r\n         *         }\r\n         *         return uint16(ac + (ac >> 16));\r\n         *     }\r\n         *\r\n         * The EVM, with its 256 bit words, is exceedingly inefficient at doing byte-by-byte operations;\r\n         * the code above, on reasonable length inputs, consumes over 100k gas. But we can make the EVM's\r\n         * large words work in our favour.\r\n         *\r\n         * The code below works by treating the input as a series of 256 bit words. It first masks out\r\n         * even and odd bytes from each input word, adding them to two separate accumulators `ac1` and `ac2`.\r\n         * The bytes are separated by empty bytes, so as long as no individual sum exceeds 2^16-1, we're\r\n         * effectively summing 16 different numbers with each EVM ADD opcode.\r\n         *\r\n         * Once it's added up all the inputs, it has to add all the 16 bit values in `ac1` and `ac2` together.\r\n         * It does this using the same trick - mask out every other value, shift to align them, add them together.\r\n         * After the first addition on both accumulators, there's enough room to add the two accumulators together,\r\n         * and the remaining sums can be done just on ac1.\r\n         */\r\n        unchecked {\r\n            require(data.length <= 8192, \"Long keys not permitted\");\r\n            uint256 ac1;\r\n            uint256 ac2;\r\n            for (uint256 i = 0; i < data.length + 31; i += 32) {\r\n                uint256 word;\r\n                assembly {\r\n                    word := mload(add(add(data, 32), i))\r\n                }\r\n                if (i + 32 > data.length) {\r\n                    uint256 unused = 256 - (data.length - i) * 8;\r\n                    word = (word >> unused) << unused;\r\n                }\r\n                ac1 +=\r\n                    (word &\r\n                        0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00) >>\r\n                    8;\r\n                ac2 += (word &\r\n                    0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF);\r\n            }\r\n            ac1 =\r\n                (ac1 &\r\n                    0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) +\r\n                ((ac1 &\r\n                    0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000) >>\r\n                    16);\r\n            ac2 =\r\n                (ac2 &\r\n                    0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) +\r\n                ((ac2 &\r\n                    0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000) >>\r\n                    16);\r\n            ac1 = (ac1 << 8) + ac2;\r\n            ac1 =\r\n                (ac1 &\r\n                    0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) +\r\n                ((ac1 &\r\n                    0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000) >>\r\n                    32);\r\n            ac1 =\r\n                (ac1 &\r\n                    0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) +\r\n                ((ac1 &\r\n                    0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF0000000000000000) >>\r\n                    64);\r\n            ac1 =\r\n                (ac1 &\r\n                    0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF) +\r\n                (ac1 >> 128);\r\n            ac1 += (ac1 >> 16) & 0xFFFF;\r\n            return uint16(ac1);\r\n        }\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/dnssec-oracle/BytesUtils.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\nlibrary BytesUtils {\r\n    error OffsetOutOfBoundsError(uint256 offset, uint256 length);\r\n\r\n    /*\r\n     * @dev Returns the keccak-256 hash of a byte range.\r\n     * @param self The byte string to hash.\r\n     * @param offset The position to start hashing at.\r\n     * @param len The number of bytes to hash.\r\n     * @return The hash of the byte range.\r\n     */\r\n    function keccak(\r\n        bytes memory self,\r\n        uint256 offset,\r\n        uint256 len\r\n    ) internal pure returns (bytes32 ret) {\r\n        require(offset + len <= self.length);\r\n        assembly {\r\n            ret := keccak256(add(add(self, 32), offset), len)\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Returns a positive number if `other` comes lexicographically after\r\n     *      `self`, a negative number if it comes before, or zero if the\r\n     *      contents of the two bytes are equal.\r\n     * @param self The first bytes to compare.\r\n     * @param other The second bytes to compare.\r\n     * @return The result of the comparison.\r\n     */\r\n    function compare(\r\n        bytes memory self,\r\n        bytes memory other\r\n    ) internal pure returns (int256) {\r\n        return compare(self, 0, self.length, other, 0, other.length);\r\n    }\r\n\r\n    /*\r\n     * @dev Returns a positive number if `other` comes lexicographically after\r\n     *      `self`, a negative number if it comes before, or zero if the\r\n     *      contents of the two bytes are equal. Comparison is done per-rune,\r\n     *      on unicode codepoints.\r\n     * @param self The first bytes to compare.\r\n     * @param offset The offset of self.\r\n     * @param len    The length of self.\r\n     * @param other The second bytes to compare.\r\n     * @param otheroffset The offset of the other string.\r\n     * @param otherlen    The length of the other string.\r\n     * @return The result of the comparison.\r\n     */\r\n    function compare(\r\n        bytes memory self,\r\n        uint256 offset,\r\n        uint256 len,\r\n        bytes memory other,\r\n        uint256 otheroffset,\r\n        uint256 otherlen\r\n    ) internal pure returns (int256) {\r\n        if (offset + len > self.length) {\r\n            revert OffsetOutOfBoundsError(offset + len, self.length);\r\n        }\r\n        if (otheroffset + otherlen > other.length) {\r\n            revert OffsetOutOfBoundsError(otheroffset + otherlen, other.length);\r\n        }\r\n\r\n        uint256 shortest = len;\r\n        if (otherlen < len) shortest = otherlen;\r\n\r\n        uint256 selfptr;\r\n        uint256 otherptr;\r\n\r\n        assembly {\r\n            selfptr := add(self, add(offset, 32))\r\n            otherptr := add(other, add(otheroffset, 32))\r\n        }\r\n        for (uint256 idx = 0; idx < shortest; idx += 32) {\r\n            uint256 a;\r\n            uint256 b;\r\n            assembly {\r\n                a := mload(selfptr)\r\n                b := mload(otherptr)\r\n            }\r\n            if (a != b) {\r\n                // Mask out irrelevant bytes and check again\r\n                uint256 mask;\r\n                if (shortest - idx >= 32) {\r\n                    mask = type(uint256).max;\r\n                } else {\r\n                    mask = ~(2 ** (8 * (idx + 32 - shortest)) - 1);\r\n                }\r\n                int256 diff = int256(a & mask) - int256(b & mask);\r\n                if (diff != 0) return diff;\r\n            }\r\n            selfptr += 32;\r\n            otherptr += 32;\r\n        }\r\n\r\n        return int256(len) - int256(otherlen);\r\n    }\r\n\r\n    /*\r\n     * @dev Returns true if the two byte ranges are equal.\r\n     * @param self The first byte range to compare.\r\n     * @param offset The offset into the first byte range.\r\n     * @param other The second byte range to compare.\r\n     * @param otherOffset The offset into the second byte range.\r\n     * @param len The number of bytes to compare\r\n     * @return True if the byte ranges are equal, false otherwise.\r\n     */\r\n    function equals(\r\n        bytes memory self,\r\n        uint256 offset,\r\n        bytes memory other,\r\n        uint256 otherOffset,\r\n        uint256 len\r\n    ) internal pure returns (bool) {\r\n        return keccak(self, offset, len) == keccak(other, otherOffset, len);\r\n    }\r\n\r\n    /*\r\n     * @dev Returns true if the two byte ranges are equal with offsets.\r\n     * @param self The first byte range to compare.\r\n     * @param offset The offset into the first byte range.\r\n     * @param other The second byte range to compare.\r\n     * @param otherOffset The offset into the second byte range.\r\n     * @return True if the byte ranges are equal, false otherwise.\r\n     */\r\n    function equals(\r\n        bytes memory self,\r\n        uint256 offset,\r\n        bytes memory other,\r\n        uint256 otherOffset\r\n    ) internal pure returns (bool) {\r\n        return\r\n            keccak(self, offset, self.length - offset) ==\r\n            keccak(other, otherOffset, other.length - otherOffset);\r\n    }\r\n\r\n    /*\r\n     * @dev Compares a range of 'self' to all of 'other' and returns True iff\r\n     *      they are equal.\r\n     * @param self The first byte range to compare.\r\n     * @param offset The offset into the first byte range.\r\n     * @param other The second byte range to compare.\r\n     * @return True if the byte ranges are equal, false otherwise.\r\n     */\r\n    function equals(\r\n        bytes memory self,\r\n        uint256 offset,\r\n        bytes memory other\r\n    ) internal pure returns (bool) {\r\n        return\r\n            self.length == offset + other.length &&\r\n            equals(self, offset, other, 0, other.length);\r\n    }\r\n\r\n    /*\r\n     * @dev Returns true if the two byte ranges are equal.\r\n     * @param self The first byte range to compare.\r\n     * @param other The second byte range to compare.\r\n     * @return True if the byte ranges are equal, false otherwise.\r\n     */\r\n    function equals(\r\n        bytes memory self,\r\n        bytes memory other\r\n    ) internal pure returns (bool) {\r\n        return\r\n            self.length == other.length &&\r\n            equals(self, 0, other, 0, self.length);\r\n    }\r\n\r\n    /*\r\n     * @dev Returns the 8-bit number at the specified index of self.\r\n     * @param self The byte string.\r\n     * @param idx The index into the bytes\r\n     * @return The specified 8 bits of the string, interpreted as an integer.\r\n     */\r\n    function readUint8(\r\n        bytes memory self,\r\n        uint256 idx\r\n    ) internal pure returns (uint8 ret) {\r\n        return uint8(self[idx]);\r\n    }\r\n\r\n    /*\r\n     * @dev Returns the 16-bit number at the specified index of self.\r\n     * @param self The byte string.\r\n     * @param idx The index into the bytes\r\n     * @return The specified 16 bits of the string, interpreted as an integer.\r\n     */\r\n    function readUint16(\r\n        bytes memory self,\r\n        uint256 idx\r\n    ) internal pure returns (uint16 ret) {\r\n        require(idx + 2 <= self.length);\r\n        assembly {\r\n            ret := and(mload(add(add(self, 2), idx)), 0xFFFF)\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Returns the 32-bit number at the specified index of self.\r\n     * @param self The byte string.\r\n     * @param idx The index into the bytes\r\n     * @return The specified 32 bits of the string, interpreted as an integer.\r\n     */\r\n    function readUint32(\r\n        bytes memory self,\r\n        uint256 idx\r\n    ) internal pure returns (uint32 ret) {\r\n        require(idx + 4 <= self.length);\r\n        assembly {\r\n            ret := and(mload(add(add(self, 4), idx)), 0xFFFFFFFF)\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Returns the 32 byte value at the specified index of self.\r\n     * @param self The byte string.\r\n     * @param idx The index into the bytes\r\n     * @return The specified 32 bytes of the string.\r\n     */\r\n    function readBytes32(\r\n        bytes memory self,\r\n        uint256 idx\r\n    ) internal pure returns (bytes32 ret) {\r\n        require(idx + 32 <= self.length);\r\n        assembly {\r\n            ret := mload(add(add(self, 32), idx))\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Returns the 32 byte value at the specified index of self.\r\n     * @param self The byte string.\r\n     * @param idx The index into the bytes\r\n     * @return The specified 32 bytes of the string.\r\n     */\r\n    function readBytes20(\r\n        bytes memory self,\r\n        uint256 idx\r\n    ) internal pure returns (bytes20 ret) {\r\n        require(idx + 20 <= self.length);\r\n        assembly {\r\n            ret := and(\r\n                mload(add(add(self, 32), idx)),\r\n                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000\r\n            )\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Returns the n byte value at the specified index of self.\r\n     * @param self The byte string.\r\n     * @param idx The index into the bytes.\r\n     * @param len The number of bytes.\r\n     * @return The specified 32 bytes of the string.\r\n     */\r\n    function readBytesN(\r\n        bytes memory self,\r\n        uint256 idx,\r\n        uint256 len\r\n    ) internal pure returns (bytes32 ret) {\r\n        require(len <= 32);\r\n        require(idx + len <= self.length);\r\n        assembly {\r\n            let mask := not(sub(exp(256, sub(32, len)), 1))\r\n            ret := and(mload(add(add(self, 32), idx)), mask)\r\n        }\r\n    }\r\n\r\n    function memcpy(uint256 dest, uint256 src, uint256 len) private pure {\r\n        // Copy word-length chunks while possible\r\n        for (; len >= 32; len -= 32) {\r\n            assembly {\r\n                mstore(dest, mload(src))\r\n            }\r\n            dest += 32;\r\n            src += 32;\r\n        }\r\n\r\n        // Copy remaining bytes\r\n        unchecked {\r\n            uint256 mask = (256 ** (32 - len)) - 1;\r\n            assembly {\r\n                let srcpart := and(mload(src), not(mask))\r\n                let destpart := and(mload(dest), mask)\r\n                mstore(dest, or(destpart, srcpart))\r\n            }\r\n        }\r\n    }\r\n\r\n    /*\r\n     * @dev Copies a substring into a new byte string.\r\n     * @param self The byte string to copy from.\r\n     * @param offset The offset to start copying at.\r\n     * @param len The number of bytes to copy.\r\n     */\r\n    function substring(\r\n        bytes memory self,\r\n        uint256 offset,\r\n        uint256 len\r\n    ) internal pure returns (bytes memory) {\r\n        require(offset + len <= self.length);\r\n\r\n        bytes memory ret = new bytes(len);\r\n        uint256 dest;\r\n        uint256 src;\r\n\r\n        assembly {\r\n            dest := add(ret, 32)\r\n            src := add(add(self, 32), offset)\r\n        }\r\n        memcpy(dest, src, len);\r\n\r\n        return ret;\r\n    }\r\n\r\n    // Maps characters from 0x30 to 0x7A to their base32 values.\r\n    // 0xFF represents invalid characters in that range.\r\n    bytes constant base32HexTable =\r\n        hex\"00010203040506070809FFFFFFFFFFFFFF0A0B0C0D0E0F101112131415161718191A1B1C1D1E1FFFFFFFFFFFFFFFFFFFFF0A0B0C0D0E0F101112131415161718191A1B1C1D1E1F\";\r\n\r\n    /**\r\n     * @dev Decodes unpadded base32 data of up to one word in length.\r\n     * @param self The data to decode.\r\n     * @param off Offset into the string to start at.\r\n     * @param len Number of characters to decode.\r\n     * @return The decoded data, left aligned.\r\n     */\r\n    function base32HexDecodeWord(\r\n        bytes memory self,\r\n        uint256 off,\r\n        uint256 len\r\n    ) internal pure returns (bytes32) {\r\n        require(len <= 52);\r\n\r\n        uint256 ret = 0;\r\n        uint8 decoded;\r\n        for (uint256 i = 0; i < len; i++) {\r\n            bytes1 char = self[off + i];\r\n            require(char >= 0x30 && char <= 0x7A);\r\n            decoded = uint8(base32HexTable[uint256(uint8(char)) - 0x30]);\r\n            require(decoded <= 0x20);\r\n            if (i == len - 1) {\r\n                break;\r\n            }\r\n            ret = (ret << 5) | decoded;\r\n        }\r\n\r\n        uint256 bitlen = len * 5;\r\n        if (len % 8 == 0) {\r\n            // Multiple of 8 characters, no padding\r\n            ret = (ret << 5) | decoded;\r\n        } else if (len % 8 == 2) {\r\n            // Two extra characters - 1 byte\r\n            ret = (ret << 3) | (decoded >> 2);\r\n            bitlen -= 2;\r\n        } else if (len % 8 == 4) {\r\n            // Four extra characters - 2 bytes\r\n            ret = (ret << 1) | (decoded >> 4);\r\n            bitlen -= 4;\r\n        } else if (len % 8 == 5) {\r\n            // Five extra characters - 3 bytes\r\n            ret = (ret << 4) | (decoded >> 1);\r\n            bitlen -= 1;\r\n        } else if (len % 8 == 7) {\r\n            // Seven extra characters - 4 bytes\r\n            ret = (ret << 2) | (decoded >> 3);\r\n            bitlen -= 3;\r\n        } else {\r\n            revert();\r\n        }\r\n\r\n        return bytes32(ret << (256 - bitlen));\r\n    }\r\n\r\n    /**\r\n     * @dev Finds the first occurrence of the byte `needle` in `self`.\r\n     * @param self The string to search\r\n     * @param off The offset to start searching at\r\n     * @param len The number of bytes to search\r\n     * @param needle The byte to search for\r\n     * @return The offset of `needle` in `self`, or 2**256-1 if it was not found.\r\n     */\r\n    function find(\r\n        bytes memory self,\r\n        uint256 off,\r\n        uint256 len,\r\n        bytes1 needle\r\n    ) internal pure returns (uint256) {\r\n        for (uint256 idx = off; idx < off + len; idx++) {\r\n            if (self[idx] == needle) {\r\n                return idx;\r\n            }\r\n        }\r\n        return type(uint256).max;\r\n    }\r\n}\r\n"
			},
			"packages/contracts/src/dnssec-oracle/Owned.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev Contract mixin for 'owned' contracts.\r\n */\r\ncontract Owned {\r\n    address public owner;\r\n\r\n    modifier owner_only() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function setOwner(address newOwner) public owner_only {\r\n        owner = newOwner;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@ensdomains/buffer/contracts/Buffer.sol": {
				"Buffer": {
					"abi": [],
					"devdoc": {
						"details": "A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@ensdomains/buffer/contracts/Buffer.sol\":445:8880  library Buffer {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":445:8880  library Buffer {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220989920d99c3bad1fd75068a022883eb4e6a76ffbe374c1df5503348b34be9ba264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220989920d99c3bad1fd75068a022883eb4e6a76ffbe374c1df5503348b34be9ba264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SWAP10 KECCAK256 0xD9 SWAP13 EXTCODESIZE 0xAD 0x1F 0xD7 POP PUSH9 0xA022883EB4E6A76FFB 0xE3 PUSH21 0xC1DF5503348B34BE9BA264736F6C63430008110033 ",
							"sourceMap": "445:8435:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;445:8435:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220989920d99c3bad1fd75068a022883eb4e6a76ffbe374c1df5503348b34be9ba264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 SWAP10 KECCAK256 0xD9 SWAP13 EXTCODESIZE 0xAD 0x1F 0xD7 POP PUSH9 0xA022883EB4E6A76FFB 0xE3 PUSH21 0xC1DF5503348B34BE9BA264736F6C63430008110033 ",
							"sourceMap": "445:8435:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"append(struct Buffer.buffer memory,bytes memory)": "infinite",
								"append(struct Buffer.buffer memory,bytes memory,uint256)": "infinite",
								"append(struct Buffer.buffer memory,bytes32,uint256)": "infinite",
								"appendBytes20(struct Buffer.buffer memory,bytes20)": "infinite",
								"appendBytes32(struct Buffer.buffer memory,bytes32)": "infinite",
								"appendInt(struct Buffer.buffer memory,uint256,uint256)": "infinite",
								"appendUint8(struct Buffer.buffer memory,uint8)": "infinite",
								"fromBytes(bytes memory)": "infinite",
								"init(struct Buffer.buffer memory,uint256)": "infinite",
								"resize(struct Buffer.buffer memory,uint256)": "infinite",
								"truncate(struct Buffer.buffer memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 445,
									"end": 8880,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220989920d99c3bad1fd75068a022883eb4e6a76ffbe374c1df5503348b34be9ba264736f6c63430008110033",
									".code": [
										{
											"begin": 445,
											"end": 8880,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 445,
											"end": 8880,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/buffer/contracts/Buffer.sol",
								"packages/contracts/src/dnssec-oracle/BytesUtils.sol",
								"packages/contracts/src/dnssec-oracle/DNSSEC.sol",
								"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
								"packages/contracts/src/dnssec-oracle/Owned.sol",
								"packages/contracts/src/dnssec-oracle/RRUtils.sol",
								"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
								"packages/contracts/src/dnssec-oracle/digests/Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ensdomains/buffer/contracts/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/buffer/contracts/Buffer.sol\":{\"keccak256\":\"0xd6dd3b0b327288f8e1b711a609f4040fea602e2ad4bba9febdf2f33b4e56eb0c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://78a722152d40d778a97595e5224fac1d138f4e659dcb1a926148909ef4c4bdca\",\"dweb:/ipfs/QmRxScF53x5ywsChLNpMUCdg2TSoCWTfo8G65Mo3sGY55b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/BytesUtils.sol": {
				"BytesUtils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "offset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "OffsetOutOfBoundsError",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":66:13358  library BytesUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":66:13358  library BytesUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d1c7881b00e8e0f0622f62945ef3b98b7b10b561c2346a03b7947ac9b62169b564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1c7881b00e8e0f0622f62945ef3b98b7b10b561c2346a03b7947ac9b62169b564736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xC7 DUP9 SHL STOP 0xE8 0xE0 CREATE PUSH3 0x2F6294 0x5E RETURN 0xB9 DUP12 PUSH28 0x10B561C2346A03B7947AC9B62169B564736F6C634300081100330000 ",
							"sourceMap": "66:13292:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;66:13292:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d1c7881b00e8e0f0622f62945ef3b98b7b10b561c2346a03b7947ac9b62169b564736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 0xC7 DUP9 SHL STOP 0xE8 0xE0 CREATE PUSH3 0x2F6294 0x5E RETURN 0xB9 DUP12 PUSH28 0x10B561C2346A03B7947AC9B62169B564736F6C634300081100330000 ",
							"sourceMap": "66:13292:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"base32HexDecodeWord(bytes memory,uint256,uint256)": "infinite",
								"compare(bytes memory,bytes memory)": "infinite",
								"compare(bytes memory,uint256,uint256,bytes memory,uint256,uint256)": "infinite",
								"equals(bytes memory,bytes memory)": "infinite",
								"equals(bytes memory,uint256,bytes memory)": "infinite",
								"equals(bytes memory,uint256,bytes memory,uint256)": "infinite",
								"equals(bytes memory,uint256,bytes memory,uint256,uint256)": "infinite",
								"find(bytes memory,uint256,uint256,bytes1)": "infinite",
								"keccak(bytes memory,uint256,uint256)": "infinite",
								"memcpy(uint256,uint256,uint256)": "infinite",
								"readBytes20(bytes memory,uint256)": "infinite",
								"readBytes32(bytes memory,uint256)": "infinite",
								"readBytesN(bytes memory,uint256,uint256)": "infinite",
								"readUint16(bytes memory,uint256)": "infinite",
								"readUint32(bytes memory,uint256)": "infinite",
								"readUint8(bytes memory,uint256)": "infinite",
								"substring(bytes memory,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 66,
									"end": 13358,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1c7881b00e8e0f0622f62945ef3b98b7b10b561c2346a03b7947ac9b62169b564736f6c63430008110033",
									".code": [
										{
											"begin": 66,
											"end": 13358,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 66,
											"end": 13358,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/buffer/contracts/Buffer.sol",
								"packages/contracts/src/dnssec-oracle/BytesUtils.sol",
								"packages/contracts/src/dnssec-oracle/DNSSEC.sol",
								"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
								"packages/contracts/src/dnssec-oracle/Owned.sol",
								"packages/contracts/src/dnssec-oracle/RRUtils.sol",
								"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
								"packages/contracts/src/dnssec-oracle/digests/Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"OffsetOutOfBoundsError\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":\"BytesUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":{\"keccak256\":\"0x7362a411f1cf9462eabb40847e7dfe6ffb2a9039ec996f6f9e7335f2c1e69290\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d371e4a35657aadec9c397b7cea8a5b86df3b5103d8e477bb9b4f3af4764d140\",\"dweb:/ipfs/QmYVw3XwgsRQhb6nr6szegPPnnXwp2Zm8wESHzXA2Ka5yy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/DNSSEC.sol": {
				"DNSSEC": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "AlgorithmUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "DigestUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "anchors",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "rrset",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "sig",
											"type": "bytes"
										}
									],
									"internalType": "struct DNSSEC.RRSetWithSignature[]",
									"name": "input",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "now",
									"type": "uint256"
								}
							],
							"name": "verifyRRSet",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "rrs",
									"type": "bytes"
								},
								{
									"internalType": "uint32",
									"name": "inception",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "rrset",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "sig",
											"type": "bytes"
										}
									],
									"internalType": "struct DNSSEC.RRSetWithSignature[]",
									"name": "input",
									"type": "tuple[]"
								}
							],
							"name": "verifyRRSet",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "rrs",
									"type": "bytes"
								},
								{
									"internalType": "uint32",
									"name": "inception",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"anchors()": "98d35f20",
							"verifyRRSet((bytes,bytes)[])": "bdf95fef",
							"verifyRRSet((bytes,bytes)[],uint256)": "440f3d42"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AlgorithmUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"DigestUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"anchors\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"rrset\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct DNSSEC.RRSetWithSignature[]\",\"name\":\"input\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"now\",\"type\":\"uint256\"}],\"name\":\"verifyRRSet\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rrs\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"inception\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"rrset\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct DNSSEC.RRSetWithSignature[]\",\"name\":\"input\",\"type\":\"tuple[]\"}],\"name\":\"verifyRRSet\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rrs\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"inception\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/DNSSEC.sol\":\"DNSSEC\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/dnssec-oracle/DNSSEC.sol\":{\"keccak256\":\"0x2fc67aef2359ab521c6c84d706df5d246d49bb1f6a605fb605272a7e976a61a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740e97cfdd0541635b2d6d30756aaa41f7b632db649f517e757432188ebeff02\",\"dweb:/ipfs/QmexKwKERStSpTnpR2aAkvfrgFaJsfdfw8MRXWgtmPqfan\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1243,
								"contract": "packages/contracts/src/dnssec-oracle/DNSSEC.sol:DNSSEC",
								"label": "anchors",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes_storage"
							}
						],
						"types": {
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol": {
				"DNSSECImpl": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_anchors",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "class",
									"type": "uint16"
								}
							],
							"name": "InvalidClass",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "name",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "labelsExpected",
									"type": "uint256"
								}
							],
							"name": "InvalidLabelCount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "proofType",
									"type": "uint16"
								}
							],
							"name": "InvalidProofType",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRRSet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "rrsetName",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signerName",
									"type": "bytes"
								}
							],
							"name": "InvalidSignerName",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signerName",
									"type": "bytes"
								}
							],
							"name": "NoMatchingProof",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "signerName",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "proofName",
									"type": "bytes"
								}
							],
							"name": "ProofNameMismatch",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "expiration",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "now",
									"type": "uint32"
								}
							],
							"name": "SignatureExpired",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "inception",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "now",
									"type": "uint32"
								}
							],
							"name": "SignatureNotValidYet",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "rrsetType",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "sigType",
									"type": "uint16"
								}
							],
							"name": "SignatureTypeMismatch",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "AlgorithmUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "DigestUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "algorithms",
							"outputs": [
								{
									"internalType": "contract Algorithm",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "anchors",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "digests",
							"outputs": [
								{
									"internalType": "contract Digest",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"internalType": "contract Algorithm",
									"name": "algo",
									"type": "address"
								}
							],
							"name": "setAlgorithm",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "id",
									"type": "uint8"
								},
								{
									"internalType": "contract Digest",
									"name": "digest",
									"type": "address"
								}
							],
							"name": "setDigest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "rrset",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "sig",
											"type": "bytes"
										}
									],
									"internalType": "struct DNSSEC.RRSetWithSignature[]",
									"name": "input",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "now",
									"type": "uint256"
								}
							],
							"name": "verifyRRSet",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "rrs",
									"type": "bytes"
								},
								{
									"internalType": "uint32",
									"name": "inception",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "rrset",
											"type": "bytes"
										},
										{
											"internalType": "bytes",
											"name": "sig",
											"type": "bytes"
										}
									],
									"internalType": "struct DNSSEC.RRSetWithSignature[]",
									"name": "input",
									"type": "tuple[]"
								}
							],
							"name": "verifyRRSet",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "rrs",
									"type": "bytes"
								},
								{
									"internalType": "uint32",
									"name": "inception",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor.",
								"params": {
									"_anchors": "The binary format RR entries for the root DS records."
								}
							},
							"setAlgorithm(uint8,address)": {
								"details": "Sets the contract address for a signature verification algorithm.      Callable only by the owner.",
								"params": {
									"algo": "The address of the algorithm contract.",
									"id": "The algorithm ID"
								}
							},
							"setDigest(uint8,address)": {
								"details": "Sets the contract address for a digest verification algorithm.      Callable only by the owner.",
								"params": {
									"digest": "The address of the digest contract.",
									"id": "The digest ID"
								}
							},
							"verifyRRSet((bytes,bytes)[])": {
								"details": "Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.",
								"params": {
									"input": "A list of signed RRSets."
								},
								"returns": {
									"inception": "The inception time of the signed record set.",
									"rrs": "The RRData from the last RRSet in the chain."
								}
							},
							"verifyRRSet((bytes,bytes)[],uint256)": {
								"details": "Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.",
								"params": {
									"input": "A list of signed RRSets.",
									"now": "The Unix timestamp to validate the records at."
								},
								"returns": {
									"inception": "The inception time of the signed record set.",
									"rrs": "The RRData from the last RRSet in the chain."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":928:15880  contract DNSSECImpl is DNSSEC, Owned {... */\n  mstore(0x40, 0x80)\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2015:2208  constructor(bytes memory _anchors) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:300  owner */\n  0x01\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:313  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":303:313  msg.sender */\n  caller\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:313  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:300  owner */\n  0x00\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2182:2200  anchors = _anchors */\n  tag_8\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2192:2200  _anchors */\n  dup3\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:300  owner */\n  dup3\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2182:2200  anchors = _anchors */\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2015:2208  constructor(bytes memory _anchors) {... */\n  pop\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":928:15880  contract DNSSECImpl is DNSSEC, Owned {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_11:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1187   */\ntag_3:\n    /* \"#utility.yul\":225:231   */\n  0x00\n    /* \"#utility.yul\":256:258   */\n  0x20\n    /* \"#utility.yul\":299:301   */\n  dup1\n    /* \"#utility.yul\":287:296   */\n  dup4\n    /* \"#utility.yul\":278:285   */\n  dup6\n    /* \"#utility.yul\":274:297   */\n  sub\n    /* \"#utility.yul\":270:302   */\n  slt\n    /* \"#utility.yul\":267:319   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":315:316   */\n  0x00\n    /* \"#utility.yul\":312:313   */\n  dup1\n    /* \"#utility.yul\":305:317   */\n  revert\n    /* \"#utility.yul\":267:319   */\ntag_19:\n    /* \"#utility.yul\":342:358   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":407:421   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":404:438   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":434:435   */\n  0x00\n    /* \"#utility.yul\":431:432   */\n  dup1\n    /* \"#utility.yul\":424:436   */\n  revert\n    /* \"#utility.yul\":404:438   */\ntag_20:\n    /* \"#utility.yul\":472:478   */\n  dup2\n    /* \"#utility.yul\":461:470   */\n  dup6\n    /* \"#utility.yul\":457:479   */\n  add\n    /* \"#utility.yul\":447:479   */\n  swap2\n  pop\n    /* \"#utility.yul\":517:524   */\n  dup6\n    /* \"#utility.yul\":510:514   */\n  0x1f\n    /* \"#utility.yul\":506:508   */\n  dup4\n    /* \"#utility.yul\":502:515   */\n  add\n    /* \"#utility.yul\":498:525   */\n  slt\n    /* \"#utility.yul\":488:543   */\n  tag_21\n  jumpi\n    /* \"#utility.yul\":539:540   */\n  0x00\n    /* \"#utility.yul\":536:537   */\n  dup1\n    /* \"#utility.yul\":529:541   */\n  revert\n    /* \"#utility.yul\":488:543   */\ntag_21:\n    /* \"#utility.yul\":568:570   */\n  dup2\n    /* \"#utility.yul\":562:571   */\n  mload\n    /* \"#utility.yul\":590:592   */\n  dup2\n    /* \"#utility.yul\":586:588   */\n  dup2\n    /* \"#utility.yul\":583:593   */\n  gt\n    /* \"#utility.yul\":580:616   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":596:614   */\n  tag_23\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":671:673   */\n  0x40\n    /* \"#utility.yul\":665:674   */\n  mload\n    /* \"#utility.yul\":639:641   */\n  0x1f\n    /* \"#utility.yul\":725:738   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":721:743   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":745:747   */\n  0x3f\n    /* \"#utility.yul\":717:748   */\n  add\n    /* \"#utility.yul\":713:753   */\n  and\n    /* \"#utility.yul\":701:754   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":769:787   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":789:811   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":766:812   */\n  or\n    /* \"#utility.yul\":763:835   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":815:833   */\n  tag_25\n  tag_11\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":855:865   */\n  dup2\n    /* \"#utility.yul\":851:853   */\n  0x40\n    /* \"#utility.yul\":844:866   */\n  mstore\n    /* \"#utility.yul\":890:892   */\n  dup3\n    /* \"#utility.yul\":882:888   */\n  dup2\n    /* \"#utility.yul\":875:893   */\n  mstore\n    /* \"#utility.yul\":930:937   */\n  dup9\n    /* \"#utility.yul\":925:927   */\n  dup7\n    /* \"#utility.yul\":920:922   */\n  dup5\n    /* \"#utility.yul\":916:918   */\n  dup8\n    /* \"#utility.yul\":912:923   */\n  add\n    /* \"#utility.yul\":908:928   */\n  add\n    /* \"#utility.yul\":905:938   */\n  gt\n    /* \"#utility.yul\":902:955   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":951:952   */\n  0x00\n    /* \"#utility.yul\":948:949   */\n  dup1\n    /* \"#utility.yul\":941:953   */\n  revert\n    /* \"#utility.yul\":902:955   */\ntag_26:\n    /* \"#utility.yul\":973:974   */\n  0x00\n    /* \"#utility.yul\":964:974   */\n  swap4\n  pop\n    /* \"#utility.yul\":983:1112   */\ntag_27:\n    /* \"#utility.yul\":997:999   */\n  dup3\n    /* \"#utility.yul\":994:995   */\n  dup5\n    /* \"#utility.yul\":991:1000   */\n  lt\n    /* \"#utility.yul\":983:1112   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1085:1095   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1081:1100   */\n  dup7\n  add\n    /* \"#utility.yul\":1075:1101   */\n  mload\n    /* \"#utility.yul\":1054:1068   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1050:1073   */\n  dup8\n  add\n    /* \"#utility.yul\":1043:1102   */\n  mstore\n    /* \"#utility.yul\":1008:1018   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":983:1112   */\n  jump(tag_27)\ntag_29:\n    /* \"#utility.yul\":1154:1155   */\n  0x00\n    /* \"#utility.yul\":1149:1151   */\n  dup7\n    /* \"#utility.yul\":1144:1146   */\n  dup5\n    /* \"#utility.yul\":1136:1142   */\n  dup4\n    /* \"#utility.yul\":1132:1147   */\n  add\n    /* \"#utility.yul\":1128:1152   */\n  add\n    /* \"#utility.yul\":1121:1156   */\n  mstore\n    /* \"#utility.yul\":1175:1181   */\n  dup1\n    /* \"#utility.yul\":1165:1181   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1187   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1192:1572   */\ntag_12:\n    /* \"#utility.yul\":1271:1272   */\n  0x01\n    /* \"#utility.yul\":1267:1279   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1314:1326   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1335:1396   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1389:1393   */\n  0x7f\n    /* \"#utility.yul\":1381:1387   */\n  dup3\n    /* \"#utility.yul\":1377:1394   */\n  and\n    /* \"#utility.yul\":1367:1394   */\n  swap2\n  pop\n    /* \"#utility.yul\":1335:1396   */\ntag_31:\n    /* \"#utility.yul\":1442:1444   */\n  0x20\n    /* \"#utility.yul\":1434:1440   */\n  dup3\n    /* \"#utility.yul\":1431:1445   */\n  lt\n    /* \"#utility.yul\":1411:1429   */\n  dup2\n    /* \"#utility.yul\":1408:1446   */\n  sub\n    /* \"#utility.yul\":1405:1566   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1488:1498   */\n  0x4e487b71\n    /* \"#utility.yul\":1483:1486   */\n  0xe0\n    /* \"#utility.yul\":1479:1499   */\n  shl\n    /* \"#utility.yul\":1476:1477   */\n  0x00\n    /* \"#utility.yul\":1469:1500   */\n  mstore\n    /* \"#utility.yul\":1523:1527   */\n  0x22\n    /* \"#utility.yul\":1520:1521   */\n  0x04\n    /* \"#utility.yul\":1513:1528   */\n  mstore\n    /* \"#utility.yul\":1551:1555   */\n  0x24\n    /* \"#utility.yul\":1548:1549   */\n  0x00\n    /* \"#utility.yul\":1541:1556   */\n  revert\n    /* \"#utility.yul\":1405:1566   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1192:1572   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1702:2246   */\ntag_14:\n    /* \"#utility.yul\":1803:1805   */\n  0x1f\n    /* \"#utility.yul\":1798:1801   */\n  dup3\n    /* \"#utility.yul\":1795:1806   */\n  gt\n    /* \"#utility.yul\":1792:2240   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1839:1840   */\n  0x00\n    /* \"#utility.yul\":1864:1869   */\n  dup2\n    /* \"#utility.yul\":1860:1862   */\n  dup2\n    /* \"#utility.yul\":1853:1870   */\n  mstore\n    /* \"#utility.yul\":1909:1913   */\n  0x20\n    /* \"#utility.yul\":1905:1907   */\n  dup2\n    /* \"#utility.yul\":1895:1914   */\n  keccak256\n    /* \"#utility.yul\":1979:1981   */\n  0x1f\n    /* \"#utility.yul\":1967:1977   */\n  dup6\n    /* \"#utility.yul\":1963:1982   */\n  add\n    /* \"#utility.yul\":1960:1961   */\n  0x05\n    /* \"#utility.yul\":1956:1983   */\n  shr\n    /* \"#utility.yul\":1950:1954   */\n  dup2\n    /* \"#utility.yul\":1946:1984   */\n  add\n    /* \"#utility.yul\":2015:2019   */\n  0x20\n    /* \"#utility.yul\":2003:2013   */\n  dup7\n    /* \"#utility.yul\":2000:2020   */\n  lt\n    /* \"#utility.yul\":1997:2044   */\n  iszero\n  tag_36\n  jumpi\n  pop\n    /* \"#utility.yul\":2038:2042   */\n  dup1\n    /* \"#utility.yul\":1997:2044   */\ntag_36:\n    /* \"#utility.yul\":2093:2095   */\n  0x1f\n    /* \"#utility.yul\":2088:2091   */\n  dup6\n    /* \"#utility.yul\":2084:2096   */\n  add\n    /* \"#utility.yul\":2081:2082   */\n  0x05\n    /* \"#utility.yul\":2077:2097   */\n  shr\n    /* \"#utility.yul\":2071:2075   */\n  dup3\n    /* \"#utility.yul\":2067:2098   */\n  add\n    /* \"#utility.yul\":2057:2098   */\n  swap2\n  pop\n    /* \"#utility.yul\":2148:2230   */\ntag_37:\n    /* \"#utility.yul\":2166:2168   */\n  dup2\n    /* \"#utility.yul\":2159:2164   */\n  dup2\n    /* \"#utility.yul\":2156:2169   */\n  lt\n    /* \"#utility.yul\":2148:2230   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2211:2228   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2192:2193   */\n  0x01\n    /* \"#utility.yul\":2181:2194   */\n  add\n    /* \"#utility.yul\":2148:2230   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":2152:2155   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1792:2240   */\ntag_35:\n    /* \"#utility.yul\":1702:2246   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2422:3770   */\ntag_9:\n    /* \"#utility.yul\":2540:2550   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2562:2592   */\n  dup2\n  gt\n    /* \"#utility.yul\":2559:2615   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2595:2613   */\n  tag_43\n  tag_11\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":2624:2720   */\n  tag_44\n    /* \"#utility.yul\":2713:2719   */\n  dup2\n    /* \"#utility.yul\":2673:2711   */\n  tag_45\n    /* \"#utility.yul\":2705:2709   */\n  dup5\n    /* \"#utility.yul\":2699:2710   */\n  sload\n    /* \"#utility.yul\":2673:2711   */\n  tag_12\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2667:2671   */\n  dup5\n    /* \"#utility.yul\":2624:2720   */\n  tag_14\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2775:2779   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2839:2841   */\n  0x1f\n    /* \"#utility.yul\":2828:2842   */\n  dup4\n  gt\n    /* \"#utility.yul\":2856:2857   */\n  0x01\n    /* \"#utility.yul\":2851:3513   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":3557:3558   */\n  0x00\n    /* \"#utility.yul\":3574:3580   */\n  dup5\n    /* \"#utility.yul\":3571:3660   */\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"#utility.yul\":3626:3645   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3620:3646   */\n  mload\n    /* \"#utility.yul\":3571:3660   */\ntag_48:\n  not(0x00)\n    /* \"#utility.yul\":2379:2380   */\n  0x03\n    /* \"#utility.yul\":2375:2386   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2371:2395   */\n  shr\n    /* \"#utility.yul\":2367:2396   */\n  not\n    /* \"#utility.yul\":2357:2397   */\n  and\n    /* \"#utility.yul\":2403:2404   */\n  0x01\n    /* \"#utility.yul\":2399:2410   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2354:2411   */\n  or\n    /* \"#utility.yul\":3673:3754   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2821:3764   */\n  jump(tag_39)\n    /* \"#utility.yul\":2851:3513   */\ntag_47:\n    /* \"#utility.yul\":1649:1650   */\n  0x00\n    /* \"#utility.yul\":1642:1656   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1686:1690   */\n  0x20\n    /* \"#utility.yul\":1673:1691   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2887:2907   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3004:3240   */\ntag_51:\n    /* \"#utility.yul\":3018:3025   */\n  dup3\n    /* \"#utility.yul\":3015:3016   */\n  dup2\n    /* \"#utility.yul\":3012:3026   */\n  lt\n    /* \"#utility.yul\":3004:3240   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":3107:3126   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3101:3127   */\n  mload\n    /* \"#utility.yul\":3086:3128   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3199:3226   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3167:3168   */\n  0x01\n    /* \"#utility.yul\":3155:3169   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3034:3053   */\n  dup5\n  add\n    /* \"#utility.yul\":3004:3240   */\n  jump(tag_51)\ntag_53:\n    /* \"#utility.yul\":3008:3011   */\n  pop\n    /* \"#utility.yul\":3268:3274   */\n  dup6\n    /* \"#utility.yul\":3259:3266   */\n  dup3\n    /* \"#utility.yul\":3256:3275   */\n  lt\n    /* \"#utility.yul\":3253:3454   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3329:3348   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3323:3349   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3412:3413   */\n  0x03\n    /* \"#utility.yul\":3408:3422   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3424:3427   */\n  0xf8\n    /* \"#utility.yul\":3404:3428   */\n  and\n    /* \"#utility.yul\":3400:3437   */\n  shr\n    /* \"#utility.yul\":3396:3438   */\n  not\n    /* \"#utility.yul\":3381:3439   */\n  and\n    /* \"#utility.yul\":3366:3440   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3253:3454   */\ntag_54:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3500:3501   */\n  0x01\n    /* \"#utility.yul\":3484:3498   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3480:3502   */\n  add\n    /* \"#utility.yul\":3467:3503   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2422:3770   */\n  jump\t// out\ntag_16:\n    /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":928:15880  contract DNSSECImpl is DNSSEC, Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":928:15880  contract DNSSECImpl is DNSSEC, Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x73cc48a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x73cc48a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x98d35f20\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbdf95fef\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc327deef\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x020ed8d3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13af4035\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x28e7677d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x440f3d42\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2448:2605  function setAlgorithm(uint8 id, Algorithm algo) public owner_only {... */\n    tag_3:\n      tag_13\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":329:418  function setOwner(address newOwner) public owner_only {... */\n    tag_4:\n      tag_13\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2838:2989  function setDigest(uint8 id, Digest digest) public owner_only {... */\n    tag_5:\n      tag_13\n      tag_22\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4190:4784  function verifyRRSet(... */\n    tag_6:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1845:1884  mapping(uint8 => Digest) public digests */\n    tag_7:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5756:5788   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5738:5789   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5711:5729   */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1845:1884  mapping(uint8 => Digest) public digests */\n      tag_29\n        /* \"#utility.yul\":5577:5795   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":145:165  address public owner */\n    tag_8:\n      sload(0x01)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSEC.sol\":127:147  bytes public anchors */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3427:3686  function verifyRRSet(... */\n    tag_10:\n      tag_25\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1793:1838  mapping(uint8 => Algorithm) public algorithms */\n    tag_11:\n      tag_31\n      tag_51\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_51:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2448:2605  function setAlgorithm(uint8 id, Algorithm algo) public owner_only {... */\n    tag_16:\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":229:234  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:225  msg.sender */\n      caller\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:234  msg.sender == owner */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":207:235  require(msg.sender == owner) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2525:2539  algorithms[id] */\n      0xff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2525:2535  algorithms */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2525:2539  algorithms[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2525:2546  algorithms[id] = algo */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2562:2597  AlgorithmUpdated(id, address(algo)) */\n      dup3\n      mload\n        /* \"#utility.yul\":7033:7069   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":7085:7103   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":7078:7138   */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2562:2597  AlgorithmUpdated(id, address(algo)) */\n      0xf73c3c226af96b7f1ba666a21b3ceaf2be3ee6a365e3178fd9cd1eaae0075aa8\n      swap2\n        /* \"#utility.yul\":7006:7024   */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2562:2597  AlgorithmUpdated(id, address(algo)) */\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2448:2605  function setAlgorithm(uint8 id, Algorithm algo) public owner_only {... */\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":329:418  function setOwner(address newOwner) public owner_only {... */\n    tag_20:\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":229:234  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:225  msg.sender */\n      caller\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:234  msg.sender == owner */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":207:235  require(msg.sender == owner) */\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":394:399  owner */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":394:410  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":329:418  function setOwner(address newOwner) public owner_only {... */\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2838:2989  function setDigest(uint8 id, Digest digest) public owner_only {... */\n    tag_24:\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":229:234  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:225  msg.sender */\n      caller\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:234  msg.sender == owner */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":207:235  require(msg.sender == owner) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2911:2922  digests[id] */\n      0xff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2911:2918  digests */\n      0x03\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2911:2922  digests[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2911:2931  digests[id] = digest */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2947:2981  DigestUpdated(id, address(digest)) */\n      dup3\n      mload\n        /* \"#utility.yul\":7033:7069   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":7085:7103   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":7078:7138   */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2947:2981  DigestUpdated(id, address(digest)) */\n      0x2fcc274c3b72dd483ab201bfa87295e3817e8b9b10693219873b722ca1af00c7\n      swap2\n        /* \"#utility.yul\":7006:7024   */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":2947:2981  DigestUpdated(id, address(digest)) */\n      tag_58\n        /* \"#utility.yul\":6863:7144   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4190:4784  function verifyRRSet(... */\n    tag_28:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4367:4383  bytes memory rrs */\n      0x60\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4385:4401  uint32 inception */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4419:4437  bytes memory proof */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4440:4447  anchors */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4419:4447  bytes memory proof = anchors */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4463:4472  uint256 i */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4458:4741  for (uint256 i = 0; i < input.length; i++) {... */\n    tag_74:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4482:4487  input */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4482:4494  input.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4478:4479  i */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4478:4494  i < input.length */\n      lt\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4458:4741  for (uint256 i = 0; i < input.length; i++) {... */\n      iszero\n      tag_75\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4516:4546  RRUtils.SignedSet memory rrset */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4549:4654  validateSignedSet(... */\n      tag_77\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4585:4590  input */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4591:4592  i */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4585:4593  input[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_79\n      jumpi\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4612:4617  proof */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4636:4639  now */\n      dup9\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4549:4566  validateSignedSet */\n      tag_81\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4549:4654  validateSignedSet(... */\n      jump\t// in\n    tag_77:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4677:4687  rrset.data */\n      0x0100\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4714:4729  rrset.inception */\n      0xa0\n      swap1\n      swap2\n      add\n      mload\n      swap5\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4677:4687  rrset.data */\n      swap3\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4496:4499  i++ */\n      dup2\n      swap1\n      pop\n      tag_82\n      dup2\n      tag_83\n      jump\t// in\n    tag_82:\n      swap2\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4458:4741  for (uint256 i = 0; i < input.length; i++) {... */\n      jump(tag_74)\n    tag_75:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4759:4764  proof */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":4190:4784  function verifyRRSet(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSEC.sol\":127:147  bytes public anchors */\n    tag_42:\n      0x00\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_69\n      jump\t// in\n    tag_84:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_69\n      jump\t// in\n    tag_85:\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3427:3686  function verifyRRSet(... */\n    tag_48:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3584:3600  bytes memory rrs */\n      0x60\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3602:3618  uint32 inception */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3643:3678  verifyRRSet(input, block.timestamp) */\n      tag_90\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3655:3660  input */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3662:3677  block.timestamp */\n      timestamp\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3643:3654  verifyRRSet */\n      tag_28\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3643:3678  verifyRRSet(input, block.timestamp) */\n      jump\t// in\n    tag_90:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3636:3678  return verifyRRSet(input, block.timestamp) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":3427:3686  function verifyRRSet(... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5305:6732  function validateSignedSet(... */\n    tag_81:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5455:5485  RRUtils.SignedSet memory rrset */\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5506:5517  input.rrset */\n      dup4\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5506:5533  input.rrset.readSignedSet() */\n      tag_94\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5506:5531  input.rrset.readSignedSet */\n      tag_95\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5506:5533  input.rrset.readSignedSet() */\n      jump\t// in\n    tag_94:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5498:5533  rrset = input.rrset.readSignedSet() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5611:5628  bytes memory name */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5631:5668  validateRRs(rrset, rrset.typeCovered) */\n      tag_96\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5643:5648  rrset */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5650:5655  rrset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5650:5667  rrset.typeCovered */\n      0x00\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5631:5642  validateRRs */\n      tag_97\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5631:5668  validateRRs(rrset, rrset.typeCovered) */\n      jump\t// in\n    tag_96:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5705:5717  rrset.labels */\n      0x40\n      dup4\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5611:5668  bytes memory name = validateRRs(rrset, rrset.typeCovered) */\n      swap1\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5683:5717  name.labelCount(0) != rrset.labels */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5683:5701  name.labelCount(0) */\n      tag_98\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5611:5668  bytes memory name = validateRRs(rrset, rrset.typeCovered) */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5699:5700  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5683:5698  name.labelCount */\n      tag_99\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5683:5701  name.labelCount(0) */\n      jump\t// in\n    tag_98:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5683:5717  name.labelCount(0) != rrset.labels */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5679:5790  if (name.labelCount(0) != rrset.labels) {... */\n      tag_100\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5759:5763  name */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5765:5770  rrset */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5765:5777  rrset.labels */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5741:5778  InvalidLabelCount(name, rrset.labels) */\n      mload(0x40)\n      shl(0xe0, 0xe861b2bd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5679:5790  if (name.labelCount(0) != rrset.labels) {... */\n    tag_100:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5800:5810  rrset.name */\n      0x0120\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5800:5817  rrset.name = name */\n      dup2\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6184:6200  rrset.expiration */\n      0x80\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10067:10071  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10116:10137  int32(i1) - int32(i2) */\n      swap1\n      dup5\n      swap1\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10116:10142  int32(i1) - int32(i2) >= 0 */\n      0x03\n      signextend\n      slt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6155:6297  if (!RRUtils.serialNumberGte(rrset.expiration, uint32(now))) {... */\n      tag_105\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6255:6271  rrset.expiration */\n      0x80\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6238:6285  SignatureExpired(rrset.expiration, uint32(now)) */\n      mload(0x40)\n      shl(0xe1, 0x53c27c3f)\n      dup2\n      mstore\n        /* \"#utility.yul\":8420:8430   */\n      0xffffffff\n        /* \"#utility.yul\":8457:8472   */\n      swap2\n      dup3\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6238:6285  SignatureExpired(rrset.expiration, uint32(now)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8439:8473   */\n      mstore\n        /* \"#utility.yul\":8509:8524   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":8489:8507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8482:8525   */\n      mstore\n        /* \"#utility.yul\":8383:8401   */\n      0x44\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6238:6285  SignatureExpired(rrset.expiration, uint32(now)) */\n      tag_101\n        /* \"#utility.yul\":8240:8531   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6155:6297  if (!RRUtils.serialNumberGte(rrset.expiration, uint32(now))) {... */\n    tag_105:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6508:6523  rrset.inception */\n      0xa0\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10067:10071  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10116:10137  int32(i1) - int32(i2) */\n      swap1\n      dup5\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10116:10142  int32(i1) - int32(i2) >= 0 */\n      0x03\n      signextend\n      slt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6466:6610  if (!RRUtils.serialNumberGte(uint32(now), rrset.inception)) {... */\n      tag_109\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6569:6584  rrset.inception */\n      0xa0\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6548:6598  SignatureNotValidYet(rrset.inception, uint32(now)) */\n      mload(0x40)\n      shl(0xe1, 0x5ea081b5)\n      dup2\n      mstore\n        /* \"#utility.yul\":8420:8430   */\n      0xffffffff\n        /* \"#utility.yul\":8457:8472   */\n      swap2\n      dup3\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6548:6598  SignatureNotValidYet(rrset.inception, uint32(now)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8439:8473   */\n      mstore\n        /* \"#utility.yul\":8509:8524   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":8489:8507   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8482:8525   */\n      mstore\n        /* \"#utility.yul\":8383:8401   */\n      0x44\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6548:6598  SignatureNotValidYet(rrset.inception, uint32(now)) */\n      tag_101\n        /* \"#utility.yul\":8240:8531   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6466:6610  if (!RRUtils.serialNumberGte(uint32(now), rrset.inception)) {... */\n    tag_109:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6657:6699  verifySignature(name, rrset, input, proof) */\n      tag_111\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6673:6677  name */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6679:6684  rrset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6686:6691  input */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6693:6698  proof */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6657:6672  verifySignature */\n      tag_112\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6657:6699  verifySignature(name, rrset, input, proof) */\n      jump\t// in\n    tag_111:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6712:6724  return rrset */\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":5305:6732  function validateSignedSet(... */\n    tag_93:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2830:3574  function readSignedSet(... */\n    tag_95:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2911:2932  SignedSet memory self */\n      tag_113\n      tag_92\n      jump\t// in\n    tag_113:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2964:2991  data.readUint16(RRSIG_TYPE) */\n      tag_115\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2964:2968  data */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2244:2245  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2964:2979  data.readUint16 */\n      tag_116\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2964:2991  data.readUint16(RRSIG_TYPE) */\n      jump\t// in\n    tag_115:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2945:2991  self.typeCovered = data.readUint16(RRSIG_TYPE) */\n      0xffff\n      and\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3019:3050  data.readUint8(RRSIG_ALGORITHM) */\n      tag_117\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3019:3023  data */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2287:2288  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3019:3033  data.readUint8 */\n      tag_118\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3019:3050  data.readUint8(RRSIG_ALGORITHM) */\n      jump\t// in\n    tag_117:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3002:3050  self.algorithm = data.readUint8(RRSIG_ALGORITHM) */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3002:3016  self.algorithm */\n      0x20\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3002:3050  self.algorithm = data.readUint8(RRSIG_ALGORITHM) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3075:3103  data.readUint8(RRSIG_LABELS) */\n      tag_119\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3075:3079  data */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2327:2328  3 */\n      0x03\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3075:3089  data.readUint8 */\n      tag_118\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3075:3103  data.readUint8(RRSIG_LABELS) */\n      jump\t// in\n    tag_119:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3061:3103  self.labels = data.readUint8(RRSIG_LABELS) */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3061:3072  self.labels */\n      0x40\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3061:3103  self.labels = data.readUint8(RRSIG_LABELS) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3125:3151  data.readUint32(RRSIG_TTL) */\n      tag_120\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3125:3129  data */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2364:2365  4 */\n      0x04\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3125:3140  data.readUint32 */\n      tag_121\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3125:3151  data.readUint32(RRSIG_TTL) */\n      jump\t// in\n    tag_120:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3114:3151  self.ttl = data.readUint32(RRSIG_TTL) */\n      0xffffffff\n      swap1\n      dup2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3114:3122  self.ttl */\n      0x60\n      dup4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3114:3151  self.ttl = data.readUint32(RRSIG_TTL) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3180:3213  data.readUint32(RRSIG_EXPIRATION) */\n      tag_122\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3180:3184  data */\n      dup4\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2408:2409  8 */\n      0x08\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3180:3195  data.readUint32 */\n      tag_121\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3180:3213  data.readUint32(RRSIG_EXPIRATION) */\n      and\n      jump\t// in\n    tag_122:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3162:3213  self.expiration = data.readUint32(RRSIG_EXPIRATION) */\n      0xffffffff\n      swap1\n      dup2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3162:3177  self.expiration */\n      0x80\n      dup4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3162:3213  self.expiration = data.readUint32(RRSIG_EXPIRATION) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3241:3273  data.readUint32(RRSIG_INCEPTION) */\n      tag_123\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3241:3245  data */\n      dup4\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2451:2453  12 */\n      0x0c\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3241:3256  data.readUint32 */\n      tag_121\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3241:3273  data.readUint32(RRSIG_INCEPTION) */\n      and\n      jump\t// in\n    tag_123:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3224:3273  self.inception = data.readUint32(RRSIG_INCEPTION) */\n      0xffffffff\n      swap1\n      dup2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3224:3238  self.inception */\n      0xa0\n      dup4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3224:3273  self.inception = data.readUint32(RRSIG_INCEPTION) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3298:3328  data.readUint16(RRSIG_KEY_TAG) */\n      tag_124\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3298:3302  data */\n      dup4\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2493:2495  16 */\n      0x10\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3298:3313  data.readUint16 */\n      tag_116\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3298:3328  data.readUint16(RRSIG_KEY_TAG) */\n      and\n      jump\t// in\n    tag_124:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3284:3328  self.keytag = data.readUint16(RRSIG_KEY_TAG) */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3284:3295  self.keytag */\n      0xc0\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3284:3328  self.keytag = data.readUint16(RRSIG_KEY_TAG) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3357:3390  readName(data, RRSIG_SIGNER_NAME) */\n      tag_125\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3366:3370  data */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2539:2541  18 */\n      0x12\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3357:3365  readName */\n      tag_126\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3357:3390  readName(data, RRSIG_SIGNER_NAME) */\n      jump\t// in\n    tag_125:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3339:3354  self.signerName */\n      0xe0\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3339:3390  self.signerName = readName(data, RRSIG_SIGNER_NAME) */\n      dup2\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3462:3484  self.signerName.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3413:3566  data.substring(... */\n      tag_127\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3442:3484  RRSIG_SIGNER_NAME + self.signerName.length */\n      tag_128\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2539:2541  18 */\n      0x12\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3442:3484  RRSIG_SIGNER_NAME + self.signerName.length */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3533:3537  self */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3533:3548  self.signerName */\n      0xe0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3533:3555  self.signerName.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2539:2541  18 */\n      0x12\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3499:3503  data */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3499:3510  data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3499:3530  data.length - RRSIG_SIGNER_NAME */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3499:3555  data.length - RRSIG_SIGNER_NAME - self.signerName.length */\n      tag_132\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_132:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3413:3417  data */\n      dup5\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3413:3566  data.substring(... */\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3413:3427  data.substring */\n      tag_133\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3413:3566  data.substring(... */\n      jump\t// in\n    tag_127:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3401:3410  self.data */\n      0x0100\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3401:3566  self.data = data.substring(... */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3401:3405  self */\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2830:3574  function readSignedSet(... */\n      swap1\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6893:8112  function validateRRs(... */\n    tag_97:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7014:7031  bytes memory name */\n      0x60\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7100:7130  RRUtils.RRIterator memory iter */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7133:7144  rrset.rrs() */\n      tag_138\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7133:7138  rrset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7133:7142  rrset.rrs */\n      tag_139\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7133:7144  rrset.rrs() */\n      jump\t// in\n    tag_138:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7100:7144  RRUtils.RRIterator memory iter = rrset.rrs() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7081:8105  for (... */\n    tag_135:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4730  iter.data */\n      dup1\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4737  iter.data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4717  iter.offset */\n      0x20\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4737  iter.offset >= iter.data.length */\n      lt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7081:8105  for (... */\n      tag_136\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7280:7290  iter.class */\n      0x60\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7280:7305  iter.class != DNSCLASS_IN */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1100:1101  1 */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7280:7305  iter.class != DNSCLASS_IN */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7276:7373  if (iter.class != DNSCLASS_IN) {... */\n      tag_142\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7346:7356  iter.class */\n      0x60\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7333:7357  InvalidClass(iter.class) */\n      mload(0x40)\n      shl(0xe1, 0x4c52f98d)\n      dup2\n      mstore\n        /* \"#utility.yul\":8973:8979   */\n      0xffff\n        /* \"#utility.yul\":8961:8980   */\n      swap1\n      swap2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7333:7357  InvalidClass(iter.class) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8943:8981   */\n      mstore\n        /* \"#utility.yul\":8916:8934   */\n      0x24\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7333:7357  InvalidClass(iter.class) */\n      tag_101\n        /* \"#utility.yul\":8799:8987   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7276:7373  if (iter.class != DNSCLASS_IN) {... */\n    tag_142:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7393:7397  name */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7393:7404  name.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7408:7409  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7393:7409  name.length == 0 */\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7389:7873  if (name.length == 0) {... */\n      tag_145\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7437:7448  iter.name() */\n      tag_146\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7437:7441  iter */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7437:7446  iter.name */\n      tag_147\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7437:7448  iter.name() */\n      jump\t// in\n    tag_146:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7430:7448  name = iter.name() */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7389:7873  if (name.length == 0) {... */\n      jump(tag_154)\n    tag_145:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7685:7696  iter.offset */\n      0x20\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7664:7673  iter.data */\n      dup2\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7664:7697  iter.data.nameLength(iter.offset) */\n      tag_149\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7664:7684  iter.data.nameLength */\n      tag_150\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7664:7697  iter.data.nameLength(iter.offset) */\n      jump\t// in\n    tag_149:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7649:7653  name */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7649:7660  name.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7649:7697  name.length != iter.data.nameLength(iter.offset) */\n      eq\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7649:7774  name.length != iter.data.nameLength(iter.offset) ||... */\n      dup1\n      tag_151\n      jumpi\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7738:7747  iter.data */\n      dup1\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7749:7760  iter.offset */\n      0x20\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7762:7773  name.length */\n      dup4\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7723:7774  name.equals(0, iter.data, iter.offset, name.length) */\n      tag_152\n      swap3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7762:7766  name */\n      dup6\n      swap3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7735:7736  0 */\n      0x00\n      swap3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7723:7734  name.equals */\n      tag_153\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7723:7774  name.equals(0, iter.data, iter.offset, name.length) */\n      jump\t// in\n    tag_152:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7722:7774  !name.equals(0, iter.data, iter.offset, name.length) */\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7649:7774  name.length != iter.data.nameLength(iter.offset) ||... */\n    tag_151:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7623:7858  if (... */\n      iszero\n      tag_154\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7824:7838  InvalidRRSet() */\n      mload(0x40)\n      shl(0xe0, 0xcbceee6f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7623:7858  if (... */\n    tag_154:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7991:8002  typecovered */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7975:8002  iter.dnstype != typecovered */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7975:7979  iter */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7975:7987  iter.dnstype */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7975:8002  iter.dnstype != typecovered */\n      0xffff\n      and\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7971:8094  if (iter.dnstype != typecovered) {... */\n      tag_155\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8052:8064  iter.dnstype */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8030:8078  SignatureTypeMismatch(iter.dnstype, typecovered) */\n      swap1\n      mload\n      shl(0xe1, 0x537fc545)\n      dup2\n      mstore\n        /* \"#utility.yul\":9172:9178   */\n      0xffff\n        /* \"#utility.yul\":9205:9220   */\n      swap2\n      dup3\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8030:8078  SignatureTypeMismatch(iter.dnstype, typecovered) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9187:9221   */\n      mstore\n        /* \"#utility.yul\":9257:9272   */\n      swap1\n      dup5\n      and\n        /* \"#utility.yul\":9237:9255   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9230:9273   */\n      mstore\n        /* \"#utility.yul\":9135:9153   */\n      0x44\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8030:8078  SignatureTypeMismatch(iter.dnstype, typecovered) */\n      tag_101\n        /* \"#utility.yul\":8992:9279   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7971:8094  if (iter.dnstype != typecovered) {... */\n    tag_155:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7186:7197  iter.next() */\n      tag_158\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7186:7190  iter */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7186:7195  iter.next */\n      tag_159\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7186:7197  iter.next() */\n      jump\t// in\n    tag_158:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":7081:8105  for (... */\n      jump(tag_135)\n    tag_136:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":6893:8112  function validateRRs(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1766:2206  function labelCount(... */\n    tag_99:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1869:1876  uint256 */\n      0x00\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1917:2176  while (true) {... */\n    tag_161:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1961:1965  self */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1961:1972  self.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1952:1958  offset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1952:1972  offset < self.length */\n      lt\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1945:1973  assert(offset < self.length) */\n      tag_164\n      jumpi\n      tag_164\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1988:2004  uint256 labelLen */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2007:2029  self.readUint8(offset) */\n      tag_166\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2007:2011  self */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2022:2028  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2007:2021  self.readUint8 */\n      tag_118\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2007:2029  self.readUint8(offset) */\n      jump\t// in\n    tag_166:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1988:2029  uint256 labelLen = self.readUint8(offset) */\n      0xff\n      and\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2054:2066  labelLen + 1 */\n      tag_167\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1988:2029  uint256 labelLen = self.readUint8(offset) */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2065:2066  1 */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2054:2066  labelLen + 1 */\n      tag_129\n      jump\t// in\n    tag_167:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2044:2066  offset += labelLen + 1 */\n      tag_168\n      swap1\n      dup6\n      tag_129\n      jump\t// in\n    tag_168:\n      swap4\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2085:2093  labelLen */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2097:2098  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2085:2098  labelLen == 0 */\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2081:2140  if (labelLen == 0) {... */\n      tag_169\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2119:2124  break */\n      pop\n      jump(tag_162)\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2081:2140  if (labelLen == 0) {... */\n    tag_169:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2154:2164  count += 1 */\n      tag_170\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2163:2164  1 */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2154:2164  count += 1 */\n      dup4\n      tag_129\n      jump\t// in\n    tag_170:\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1930:2176  {... */\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1917:2176  while (true) {... */\n      jump(tag_161)\n    tag_162:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":2193:2198  count */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1766:2206  function labelCount(... */\n    tag_160:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8469:9296  function verifySignature(... */\n    tag_112:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8808:8824  rrset.signerName */\n      0xe0\n      dup4\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8789:8825  name.isSubdomainOf(rrset.signerName) */\n      tag_173\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8789:8793  name */\n      dup6\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8789:8807  name.isSubdomainOf */\n      tag_174\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8789:8825  name.isSubdomainOf(rrset.signerName) */\n      jump\t// in\n    tag_173:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8784:8902  if (!name.isSubdomainOf(rrset.signerName)) {... */\n      tag_175\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8873:8889  rrset.signerName */\n      0xe0\n      dup4\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8849:8890  InvalidSignerName(name, rrset.signerName) */\n      mload(0x40)\n      shl(0xe0, 0xeaafc59b)\n      dup2\n      mstore\n      tag_101\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8867:8871  name */\n      dup7\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8849:8890  InvalidSignerName(name, rrset.signerName) */\n      0x04\n      add\n      tag_177\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8784:8902  if (!name.isSubdomainOf(rrset.signerName)) {... */\n    tag_175:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8914:8947  RRUtils.RRIterator memory proofRR */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8950:8969  proof.iterateRRs(0) */\n      tag_178\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8950:8955  proof */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8914:8947  RRUtils.RRIterator memory proofRR */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8950:8966  proof.iterateRRs */\n      tag_179\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8950:8969  proof.iterateRRs(0) */\n      jump\t// in\n    tag_178:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8914:8969  RRUtils.RRIterator memory proofRR = proof.iterateRRs(0) */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1139:1141  43 */\n      0x2b\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9012:9041  proofRR.dnstype == DNSTYPE_DS */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9012:9019  proofRR */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9012:9027  proofRR.dnstype */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9012:9041  proofRR.dnstype == DNSTYPE_DS */\n      0xffff\n      and\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9008:9289  if (proofRR.dnstype == DNSTYPE_DS) {... */\n      tag_180\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9058:9092  verifyWithDS(rrset, data, proofRR) */\n      tag_181\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9071:9076  rrset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9078:9082  data */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9084:9091  proofRR */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9058:9070  verifyWithDS */\n      tag_182\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9058:9092  verifyWithDS(rrset, data, proofRR) */\n      jump\t// in\n    tag_181:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9008:9289  if (proofRR.dnstype == DNSTYPE_DS) {... */\n      jump(tag_187)\n    tag_180:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1181:1183  48 */\n      0x30\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9114:9147  proofRR.dnstype == DNSTYPE_DNSKEY */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9114:9121  proofRR */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9114:9129  proofRR.dnstype */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9114:9147  proofRR.dnstype == DNSTYPE_DNSKEY */\n      0xffff\n      and\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9110:9289  if (proofRR.dnstype == DNSTYPE_DNSKEY) {... */\n      tag_184\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9164:9204  verifyWithKnownKey(rrset, data, proofRR) */\n      tag_181\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9183:9188  rrset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9190:9194  data */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9196:9203  proofRR */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9164:9182  verifyWithKnownKey */\n      tag_186\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9164:9204  verifyWithKnownKey(rrset, data, proofRR) */\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9110:9289  if (proofRR.dnstype == DNSTYPE_DNSKEY) {... */\n    tag_184:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9261:9276  proofRR.dnstype */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9244:9277  InvalidProofType(proofRR.dnstype) */\n      swap1\n      mload\n      shl(0xe0, 0x61529e87)\n      dup2\n      mstore\n        /* \"#utility.yul\":8973:8979   */\n      0xffff\n        /* \"#utility.yul\":8961:8980   */\n      swap1\n      swap2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9244:9277  InvalidProofType(proofRR.dnstype) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8943:8981   */\n      mstore\n        /* \"#utility.yul\":8916:8934   */\n      0x24\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9244:9277  InvalidProofType(proofRR.dnstype) */\n      tag_101\n        /* \"#utility.yul\":8799:8987   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9110:9289  if (proofRR.dnstype == DNSTYPE_DNSKEY) {... */\n    tag_187:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8654:9296  {... */\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":8469:9296  function verifySignature(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6707:6963  function readUint16(... */\n    tag_116:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6849:6860  self.length */\n      dup2\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6807:6817  uint16 ret */\n      0x00\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6838:6845  idx + 2 */\n      tag_190\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6838:6841  idx */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6844:6845  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6838:6845  idx + 2 */\n      tag_129\n      jump\t// in\n    tag_190:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6838:6860  idx + 2 <= self.length */\n      gt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6830:6861  require(idx + 2 <= self.length) */\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6913:6935  add(add(self, 2), idx) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6927:6928  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6913:6935  add(add(self, 2), idx) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6907:6936  mload(add(add(self, 2), idx)) */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6938:6944  0xFFFF */\n      0xffff\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6903:6945  and(mload(add(add(self, 2), idx)), 0xFFFF) */\n      and\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6707:6963  function readUint16(... */\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6298:6450  function readUint8(... */\n    tag_118:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6397:6406  uint8 ret */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6432:6436  self */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6437:6440  idx */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6432:6441  self[idx] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_194\n      tag_80\n      jump\t// in\n    tag_194:\n      add\n      0x20\n      add\n      mload\n      0xf8\n      shr\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6298:6450  function readUint8(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7220:7480  function readUint32(... */\n    tag_121:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7362:7373  self.length */\n      dup2\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7320:7330  uint32 ret */\n      0x00\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7351:7358  idx + 4 */\n      tag_196\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7351:7354  idx */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7357:7358  4 */\n      0x04\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7351:7358  idx + 4 */\n      tag_129\n      jump\t// in\n    tag_196:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7351:7373  idx + 4 <= self.length */\n      gt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7343:7374  require(idx + 4 <= self.length) */\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7426:7448  add(add(self, 4), idx) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7440:7441  4 */\n      0x04\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7426:7448  add(add(self, 4), idx) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7420:7449  mload(add(add(self, 4), idx)) */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7451:7461  0xFFFFFFFF */\n      0xffffffff\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7416:7462  and(mload(add(add(self, 4), idx)), 0xFFFFFFFF) */\n      and\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":7220:7480  function readUint32(... */\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1252:1473  function readName(... */\n    tag_126:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1353:1369  bytes memory ret */\n      0x60\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1382:1393  uint256 len */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1396:1420  nameLength(self, offset) */\n      tag_199\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1407:1411  self */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1413:1419  offset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1396:1406  nameLength */\n      tag_150\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1396:1420  nameLength(self, offset) */\n      jump\t// in\n    tag_199:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1382:1420  uint256 len = nameLength(self, offset) */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1438:1465  self.substring(offset, len) */\n      tag_200\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1438:1442  self */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1453:1459  offset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1382:1420  uint256 len = nameLength(self, offset) */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1438:1452  self.substring */\n      tag_133\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1438:1465  self.substring(offset, len) */\n      jump\t// in\n    tag_200:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1431:1465  return self.substring(offset, len) */\n      swap5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1252:1473  function readName(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10076:10530  function substring(... */\n    tag_133:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10249:10260  self.length */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10200:10212  bytes memory */\n      0x60\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10233:10245  offset + len */\n      tag_202\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10242:10245  len */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10233:10239  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10233:10245  offset + len */\n      tag_129\n      jump\t// in\n    tag_202:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10233:10260  offset + len <= self.length */\n      gt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10225:10261  require(offset + len <= self.length) */\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10274:10290  bytes memory ret */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10303:10306  len */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10293:10307  new bytes(len) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_205\n      jumpi\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_207:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10274:10307  bytes memory ret = new bytes(len) */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10406:10408  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10397:10409  add(ret, 32) */\n      dup1\n      dup3\n      add\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10430:10456  add(add(self, 32), offset) */\n      dup7\n      dup7\n      add\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10477:10499  memcpy(dest, src, len) */\n      tag_208\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10397:10409  add(ret, 32) */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10430:10456  add(add(self, 32), offset) */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10495:10498  len */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10477:10483  memcpy */\n      tag_209\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10477:10499  memcpy(dest, src, len) */\n      jump\t// in\n    tag_208:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10519:10522  ret */\n      swap1\n      swap6\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":10076:10530  function substring(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3582:3728  function rrs(... */\n    tag_139:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3658:3675  RRIterator memory */\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3695:3720  iterateRRs(rrset.data, 0) */\n      tag_160\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3706:3711  rrset */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3706:3716  rrset.data */\n      0x0100\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3718:3719  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3695:3705  iterateRRs */\n      tag_179\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":3695:3720  iterateRRs(rrset.data, 0) */\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5774:6005  function name(RRIterator memory iter) internal pure returns (bytes memory) {... */\n    tag_147:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5918:5929  iter.offset */\n      0x20\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5959:5968  iter.data */\n      dup2\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5835:5847  bytes memory */\n      0x60\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5880:5997  iter.data.substring(... */\n      tag_160\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5948:5982  nameLength(iter.data, iter.offset) */\n      tag_217\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5918:5929  iter.offset */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5948:5958  nameLength */\n      tag_150\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5948:5982  nameLength(iter.data, iter.offset) */\n      jump\t// in\n    tag_217:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5880:5889  iter.data */\n      dup5\n      mload\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5880:5997  iter.data.substring(... */\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5880:5899  iter.data.substring */\n      tag_133\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5880:5997  iter.data.substring(... */\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":598:1014  function nameLength(... */\n    tag_150:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":701:708  uint256 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":735:741  offset */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":752:977  while (true) {... */\n    tag_219:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":793:797  self */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":793:804  self.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":787:790  idx */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":787:804  idx < self.length */\n      lt\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":780:805  assert(idx < self.length) */\n      tag_222\n      jumpi\n      tag_222\n      tag_165\n      jump\t// in\n    tag_222:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":820:836  uint256 labelLen */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":839:858  self.readUint8(idx) */\n      tag_223\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":839:843  self */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":854:857  idx */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":839:853  self.readUint8 */\n      tag_118\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":839:858  self.readUint8(idx) */\n      jump\t// in\n    tag_223:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":820:858  uint256 labelLen = self.readUint8(idx) */\n      0xff\n      and\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":880:892  labelLen + 1 */\n      tag_224\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":820:858  uint256 labelLen = self.readUint8(idx) */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":891:892  1 */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":880:892  labelLen + 1 */\n      tag_129\n      jump\t// in\n    tag_224:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":873:892  idx += labelLen + 1 */\n      tag_225\n      swap1\n      dup4\n      tag_129\n      jump\t// in\n    tag_225:\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":911:919  labelLen */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":923:924  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":911:924  labelLen == 0 */\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":907:966  if (labelLen == 0) {... */\n      tag_226\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":945:950  break */\n      pop\n      jump(tag_220)\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":907:966  if (labelLen == 0) {... */\n    tag_226:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":765:977  {... */\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":752:977  while (true) {... */\n      jump(tag_219)\n    tag_220:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":994:1006  idx - offset */\n      tag_200\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":1000:1006  offset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":994:997  idx */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":994:1006  idx - offset */\n      tag_131\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":3925:4197  function equals(... */\n    tag_153:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4105:4109  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4158:4189  keccak(other, otherOffset, len) */\n      tag_229\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4165:4170  other */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4172:4183  otherOffset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4185:4188  len */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4158:4164  keccak */\n      tag_230\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4158:4189  keccak(other, otherOffset, len) */\n      jump\t// in\n    tag_229:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4129:4154  keccak(self, offset, len) */\n      tag_231\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4136:4140  self */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4142:4148  offset */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4150:4153  len */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4129:4135  keccak */\n      tag_230\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4129:4154  keccak(self, offset, len) */\n      jump\t// in\n    tag_231:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4129:4189  keccak(self, offset, len) == keccak(other, otherOffset, len) */\n      eq\n      swap7\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":3925:4197  function equals(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4877:5587  function next(RRIterator memory iter) internal pure {... */\n    tag_159:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4954:4969  iter.nextOffset */\n      0xc0\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4940:4951  iter.offset */\n      0x20\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4940:4969  iter.offset = iter.nextOffset */\n      dup2\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4999:5008  iter.data */\n      dup2\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4999:5015  iter.data.length */\n      mload\n      gt\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4980:5050  if (iter.offset >= iter.data.length) {... */\n      tag_233\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4877:5587  function next(RRIterator memory iter) internal pure {... */\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4980:5050  if (iter.offset >= iter.data.length) {... */\n    tag_233:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5088:5099  uint256 off */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5116:5150  nameLength(iter.data, iter.offset) */\n      tag_234\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5127:5131  iter */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5127:5136  iter.data */\n      0x00\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5138:5142  iter */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5138:5149  iter.offset */\n      0x20\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5116:5126  nameLength */\n      tag_150\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5116:5150  nameLength(iter.data, iter.offset) */\n      jump\t// in\n    tag_234:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5102:5106  iter */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5102:5113  iter.offset */\n      0x20\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5102:5150  iter.offset + nameLength(iter.data, iter.offset) */\n      tag_235\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_235:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5216:5225  iter.data */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5088:5150  uint256 off = iter.offset + nameLength(iter.data, iter.offset) */\n      swap1\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5216:5241  iter.data.readUint16(off) */\n      tag_236\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5088:5150  uint256 off = iter.offset + nameLength(iter.data, iter.offset) */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5216:5236  iter.data.readUint16 */\n      tag_116\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5216:5241  iter.data.readUint16(off) */\n      jump\t// in\n    tag_236:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5201:5241  iter.dnstype = iter.data.readUint16(off) */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5201:5213  iter.dnstype */\n      0x40\n      dup4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5201:5241  iter.dnstype = iter.data.readUint16(off) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5252:5260  off += 2 */\n      tag_237\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5259:5260  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5252:5260  off += 2 */\n      dup3\n      tag_129\n      jump\t// in\n    tag_237:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5284:5293  iter.data */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5252:5260  off += 2 */\n      swap1\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5284:5309  iter.data.readUint16(off) */\n      tag_238\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5252:5260  off += 2 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5284:5304  iter.data.readUint16 */\n      tag_116\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5284:5309  iter.data.readUint16(off) */\n      jump\t// in\n    tag_238:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5271:5309  iter.class = iter.data.readUint16(off) */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5271:5281  iter.class */\n      0x60\n      dup4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5271:5309  iter.class = iter.data.readUint16(off) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5320:5328  off += 2 */\n      tag_239\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5327:5328  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5320:5328  off += 2 */\n      dup3\n      tag_129\n      jump\t// in\n    tag_239:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5350:5359  iter.data */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5320:5328  off += 2 */\n      swap1\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5350:5375  iter.data.readUint32(off) */\n      tag_240\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5320:5328  off += 2 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5350:5370  iter.data.readUint32 */\n      tag_121\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5350:5375  iter.data.readUint32(off) */\n      jump\t// in\n    tag_240:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5339:5375  iter.ttl = iter.data.readUint32(off) */\n      0xffffffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5339:5347  iter.ttl */\n      0x80\n      dup4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5339:5375  iter.ttl = iter.data.readUint32(off) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5386:5394  off += 4 */\n      tag_241\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5393:5394  4 */\n      0x04\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5386:5394  off += 4 */\n      dup3\n      tag_129\n      jump\t// in\n    tag_241:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5456:5465  iter.data */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5386:5394  off += 4 */\n      swap1\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5434:5453  uint256 rdataLength */\n      0x00\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5456:5481  iter.data.readUint16(off) */\n      tag_242\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5386:5394  off += 4 */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5456:5476  iter.data.readUint16 */\n      tag_116\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5456:5481  iter.data.readUint16(off) */\n      jump\t// in\n    tag_242:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5434:5481  uint256 rdataLength = iter.data.readUint16(off) */\n      0xffff\n      and\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5492:5500  off += 2 */\n      tag_243\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5499:5500  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5492:5500  off += 2 */\n      dup4\n      tag_129\n      jump\t// in\n    tag_243:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5511:5527  iter.rdataOffset */\n      0xa0\n      dup5\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5511:5533  iter.rdataOffset = off */\n      dup2\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5492:5500  off += 2 */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5562:5579  off + rdataLength */\n      tag_244\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5568:5579  rdataLength */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5492:5500  off += 2 */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5562:5579  off + rdataLength */\n      tag_129\n      jump\t// in\n    tag_244:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5544:5559  iter.nextOffset */\n      0xc0\n      swap1\n      swap4\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":5544:5579  iter.nextOffset = off + rdataLength */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4877:5587  function next(RRIterator memory iter) internal pure {... */\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7953:8365  function isSubdomainOf(... */\n    tag_174:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8063:8067  bool */\n      0x00\n      dup1\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8123:8142  labelCount(self, 0) */\n      tag_246\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8134:8138  self */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8063:8067  bool */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8123:8133  labelCount */\n      tag_99\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8123:8142  labelCount(self, 0) */\n      jump\t// in\n    tag_246:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8106:8142  uint256 counts = labelCount(self, 0) */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8153:8172  uint256 othercounts */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8175:8195  labelCount(other, 0) */\n      tag_247\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8186:8191  other */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8193:8194  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8175:8185  labelCount */\n      tag_99\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8175:8195  labelCount(other, 0) */\n      jump\t// in\n    tag_247:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8153:8195  uint256 othercounts = labelCount(other, 0) */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8208:8312  while (counts > othercounts) {... */\n    tag_248:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8224:8235  othercounts */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8215:8221  counts */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8215:8235  counts > othercounts */\n      gt\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8208:8312  while (counts > othercounts) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8258:8277  progress(self, off) */\n      tag_250\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8267:8271  self */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8273:8276  off */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8258:8266  progress */\n      tag_251\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8258:8277  progress(self, off) */\n      jump\t// in\n    tag_250:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8252:8277  off = progress(self, off) */\n      swap3\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8292:8300  counts-- */\n      dup2\n      tag_252\n      dup2\n      tag_253\n      jump\t// in\n    tag_252:\n      swap3\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8208:8312  while (counts > othercounts) {... */\n      jump(tag_248)\n    tag_249:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8331:8357  self.equals(off, other, 0) */\n      tag_254\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8331:8335  self */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8343:8346  off */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8348:8353  other */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8355:8356  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8331:8342  self.equals */\n      tag_255\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8331:8357  self.equals(off, other, 0) */\n      jump\t// in\n    tag_254:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":8324:8357  return self.equals(off, other, 0) */\n      swap7\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7953:8365  function isSubdomainOf(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4225:4439  function iterateRRs(... */\n    tag_179:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4328:4349  RRIterator memory ret */\n      tag_256\n      tag_211\n      jump\t// in\n    tag_256:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4362:4377  ret.data = self */\n      dup3\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4388:4402  ret.nextOffset */\n      0xc0\n      dup2\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4388:4411  ret.nextOffset = offset */\n      dup3\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4422:4431  next(ret) */\n      tag_160\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4362:4365  ret */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4422:4426  next */\n      tag_159\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4422:4431  next(ret) */\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12525:13753  function verifyWithDS(... */\n    tag_182:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12725:12737  proof.offset */\n      0x20\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12703:12722  uint256 proofOffset */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12800:12811  rrset.rrs() */\n      tag_263\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12800:12805  rrset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12800:12809  rrset.rrs */\n      tag_139\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12800:12811  rrset.rrs() */\n      jump\t// in\n    tag_263:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12767:12811  RRUtils.RRIterator memory iter = rrset.rrs() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12748:13695  for (... */\n    tag_260:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4730  iter.data */\n      dup1\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4737  iter.data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4717  iter.offset */\n      0x20\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4737  iter.offset >= iter.data.length */\n      lt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12748:13695  for (... */\n      tag_261\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12895:12907  iter.dnstype */\n      0x40\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12895:12925  iter.dnstype != DNSTYPE_DNSKEY */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1181:1183  48 */\n      0x30\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12895:12925  iter.dnstype != DNSTYPE_DNSKEY */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12891:12999  if (iter.dnstype != DNSTYPE_DNSKEY) {... */\n      tag_265\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12970:12982  iter.dnstype */\n      0x40\n      dup1\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12953:12983  InvalidProofType(iter.dnstype) */\n      swap1\n      mload\n      shl(0xe0, 0x61529e87)\n      dup2\n      mstore\n        /* \"#utility.yul\":8973:8979   */\n      0xffff\n        /* \"#utility.yul\":8961:8980   */\n      swap1\n      swap2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12953:12983  InvalidProofType(iter.dnstype) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8943:8981   */\n      mstore\n        /* \"#utility.yul\":8916:8934   */\n      0x24\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12953:12983  InvalidProofType(iter.dnstype) */\n      tag_101\n        /* \"#utility.yul\":8799:8987   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12891:12999  if (iter.dnstype != DNSTYPE_DNSKEY) {... */\n    tag_265:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13015:13036  bytes memory keyrdata */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13039:13051  iter.rdata() */\n      tag_267\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13039:13043  iter */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13039:13049  iter.rdata */\n      tag_268\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13039:13051  iter.rdata() */\n      jump\t// in\n    tag_267:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13015:13051  bytes memory keyrdata = iter.rdata() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13066:13094  RRUtils.DNSKEY memory dnskey */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13097:13185  keyrdata.readDNSKEY(... */\n      tag_269\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13135:13136  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13155:13163  keyrdata */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13155:13170  keyrdata.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13097:13105  keyrdata */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13097:13116  keyrdata.readDNSKEY */\n      tag_270\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13097:13185  keyrdata.readDNSKEY(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13066:13185  RRUtils.DNSKEY memory dnskey = keyrdata.readDNSKEY(... */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13204:13257  verifySignatureWithKey(dnskey, keyrdata, rrset, data) */\n      tag_271\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13227:13233  dnskey */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13235:13243  keyrdata */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13245:13250  rrset */\n      dup10\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13252:13256  data */\n      dup10\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13204:13226  verifySignatureWithKey */\n      tag_272\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13204:13257  verifySignatureWithKey(dnskey, keyrdata, rrset, data) */\n      jump\t// in\n    tag_271:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13200:13684  if (verifySignatureWithKey(dnskey, keyrdata, rrset, data)) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13378:13436  verifyKeyWithDS(rrset.signerName, proof, dnskey, keyrdata) */\n      tag_274\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13394:13399  rrset */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13394:13410  rrset.signerName */\n      0xe0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13412:13417  proof */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13419:13425  dnskey */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13427:13435  keyrdata */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13378:13393  verifyKeyWithDS */\n      tag_275\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13378:13436  verifyKeyWithDS(rrset.signerName, proof, dnskey, keyrdata) */\n      jump\t// in\n    tag_274:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13352:13505  if (... */\n      iszero\n      tag_276\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13479:13486  return; */\n      pop\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12525:13753  function verifyWithDS(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13352:13505  if (... */\n    tag_276:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13607:13623  proof.nextOffset */\n      0xc0\n      dup6\n      add\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13607:13637  proof.nextOffset = proofOffset */\n      dup5\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13656:13668  proof.next() */\n      tag_277\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13607:13612  proof */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13656:13666  proof.next */\n      tag_159\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13656:13668  proof.next() */\n      jump\t// in\n    tag_277:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12876:13695  {... */\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12853:12864  iter.next() */\n      tag_278\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12853:12857  iter */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12853:12862  iter.next */\n      tag_159\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12853:12864  iter.next() */\n      jump\t// in\n    tag_278:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12748:13695  for (... */\n      jump(tag_260)\n    tag_261:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13728:13733  rrset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13728:13744  rrset.signerName */\n      0xe0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":13712:13745  NoMatchingProof(rrset.signerName) */\n      mload(0x40)\n      shl(0xe0, 0x06cde0f3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9594:10460  function verifyWithKnownKey(... */\n    tag_186:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4730  iter.data */\n      dup1\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4737  iter.data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4717  iter.offset */\n      0x20\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4737  iter.offset >= iter.data.length */\n      lt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9857:10402  for (; !proof.done(); proof.next()) {... */\n      tag_282\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9908:9930  bytes memory proofName */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9933:9945  proof.name() */\n      tag_285\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9933:9938  proof */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9933:9943  proof.name */\n      tag_147\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9933:9945  proof.name() */\n      jump\t// in\n    tag_285:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9908:9945  bytes memory proofName = proof.name() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9965:9999  proofName.equals(rrset.signerName) */\n      tag_286\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9982:9987  rrset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9982:9998  rrset.signerName */\n      0xe0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9965:9974  proofName */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9965:9981  proofName.equals */\n      tag_287\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9965:9999  proofName.equals(rrset.signerName) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9960:10089  if (!proofName.equals(rrset.signerName)) {... */\n      tag_288\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10045:10050  rrset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10045:10061  rrset.signerName */\n      0xe0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10063:10072  proofName */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10027:10073  ProofNameMismatch(rrset.signerName, proofName) */\n      mload(0x40)\n      shl(0xe1, 0x6b80573f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9960:10089  if (!proofName.equals(rrset.signerName)) {... */\n    tag_288:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10105:10126  bytes memory keyrdata */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10129:10142  proof.rdata() */\n      tag_290\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10129:10134  proof */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10129:10140  proof.rdata */\n      tag_268\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10129:10142  proof.rdata() */\n      jump\t// in\n    tag_290:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10105:10142  bytes memory keyrdata = proof.rdata() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10157:10185  RRUtils.DNSKEY memory dnskey */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10188:10276  keyrdata.readDNSKEY(... */\n      tag_291\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10226:10227  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10246:10254  keyrdata */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10246:10261  keyrdata.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10188:10196  keyrdata */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10188:10207  keyrdata.readDNSKEY */\n      tag_270\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10188:10276  keyrdata.readDNSKEY(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10157:10276  RRUtils.DNSKEY memory dnskey = keyrdata.readDNSKEY(... */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10295:10348  verifySignatureWithKey(dnskey, keyrdata, rrset, data) */\n      tag_292\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10318:10324  dnskey */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10326:10334  keyrdata */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10336:10341  rrset */\n      dup9\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10343:10347  data */\n      dup9\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10295:10317  verifySignatureWithKey */\n      tag_272\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10295:10348  verifySignatureWithKey(dnskey, keyrdata, rrset, data) */\n      jump\t// in\n    tag_292:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10291:10391  if (verifySignatureWithKey(dnskey, keyrdata, rrset, data)) {... */\n      iszero\n      tag_293\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10369:10376  return; */\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9594:10460  function verifyWithKnownKey(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10291:10391  if (verifySignatureWithKey(dnskey, keyrdata, rrset, data)) {... */\n    tag_293:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9893:10402  {... */\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9879:9891  proof.next() */\n      tag_294\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9879:9884  proof */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9879:9889  proof.next */\n      tag_159\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9879:9891  proof.next() */\n      jump\t// in\n    tag_294:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":9857:10402  for (; !proof.done(); proof.next()) {... */\n      jump(tag_186)\n    tag_282:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10435:10440  rrset */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10435:10451  rrset.signerName */\n      0xe0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10419:10452  NoMatchingProof(rrset.signerName) */\n      mload(0x40)\n      shl(0xe0, 0x06cde0f3)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9207:9843  function memcpy(uint256 dest, uint256 src, uint256 len) private pure {... */\n    tag_209:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9352:9354  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9345:9348  len */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9345:9354  len >= 32 */\n      lt\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9338:9509  for (; len >= 32; len -= 32) {... */\n      tag_298\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9423:9433  mload(src) */\n      dup2\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9410:9434  mstore(dest, mload(src)) */\n      dup4\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9463:9473  dest += 32 */\n      tag_300\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9471:9473  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9417:9421  dest */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9463:9473  dest += 32 */\n      tag_129\n      jump\t// in\n    tag_300:\n      swap3\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9488:9497  src += 32 */\n      tag_301\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9495:9497  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9488:9497  src += 32 */\n      dup4\n      tag_129\n      jump\t// in\n    tag_301:\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9356:9365  len -= 32 */\n      tag_302\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9363:9365  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9356:9365  len -= 32 */\n      dup3\n      tag_131\n      jump\t// in\n    tag_302:\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9338:9509  for (; len >= 32; len -= 32) {... */\n      jump(tag_209)\n    tag_298:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9679:9689  mload(src) */\n      swap1\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9739:9750  mload(dest) */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9603:9605  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9603:9611  32 - len */\n      swap3\n      swap1\n      swap3\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9595:9598  256 */\n      0x0100\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9595:9612  256 ** (32 - len) */\n      exp\n      not(0x00)\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9594:9617  (256 ** (32 - len)) - 1 */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9691:9700  not(mask) */\n      dup1\n      not\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9675:9701  and(mload(src), not(mask)) */\n      swap1\n      swap2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9735:9757  and(mload(dest), mask) */\n      swap2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9788:9809  or(destpart, srcpart) */\n      or\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9775:9810  mstore(dest, or(destpart, srcpart)) */\n      swap1\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":9207:9843  function memcpy(uint256 dest, uint256 src, uint256 len) private pure {... */\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":429:712  function keccak(... */\n    tag_230:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":598:609  self.length */\n      dup3\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":550:561  bytes32 ret */\n      0x00\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":582:594  offset + len */\n      tag_304\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":591:594  len */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":582:588  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":582:594  offset + len */\n      tag_129\n      jump\t// in\n    tag_304:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":582:609  offset + len <= self.length */\n      gt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":574:610  require(offset + len <= self.length) */\n      tag_305\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_305:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":662:688  add(add(self, 32), offset) */\n      swap2\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":676:678  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":662:688  add(add(self, 32), offset) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":652:694  keccak256(add(add(self, 32), offset), len) */\n      keccak256\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":429:712  function keccak(... */\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10169:10331  function progress(... */\n    tag_251:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10267:10274  uint256 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10304:10323  body.readUint8(off) */\n      tag_307\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10304:10308  body */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10319:10322  off */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10304:10318  body.readUint8 */\n      tag_118\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10304:10323  body.readUint8(off) */\n      jump\t// in\n    tag_307:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10294:10323  off + 1 + body.readUint8(off) */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10294:10301  off + 1 */\n      tag_308\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10294:10297  off */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10300:10301  1 */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10294:10301  off + 1 */\n      tag_129\n      jump\t// in\n    tag_308:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10294:10323  off + 1 + body.readUint8(off) */\n      tag_162\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4597:4913  function equals(... */\n    tag_255:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4755:4759  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4851:4905  keccak(other, otherOffset, other.length - otherOffset) */\n      tag_311\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4858:4863  other */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4865:4876  otherOffset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4893:4904  otherOffset */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4878:4883  other */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4878:4890  other.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4878:4904  other.length - otherOffset */\n      tag_312\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_312:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4851:4857  keccak */\n      tag_230\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4851:4905  keccak(other, otherOffset, other.length - otherOffset) */\n      jump\t// in\n    tag_311:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4792:4834  keccak(self, offset, self.length - offset) */\n      tag_313\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4799:4803  self */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4805:4811  offset */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4827:4833  offset */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4813:4817  self */\n      dup10\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4813:4824  self.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4813:4833  self.length - offset */\n      tag_312\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4792:4834  keccak(self, offset, self.length - offset) */\n    tag_313:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4792:4905  keccak(self, offset, self.length - offset) ==... */\n      eq\n      swap6\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":4597:4913  function equals(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6189:6442  function rdata(... */\n    tag_268:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6350:6366  iter.rdataOffset */\n      0xa0\n      dup2\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6385:6400  iter.nextOffset */\n      0xc0\n      dup3\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6267:6279  bytes memory */\n      0x60\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6312:6434  iter.data.substring(... */\n      tag_160\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6385:6419  iter.nextOffset - iter.rdataOffset */\n      tag_217\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6350:6366  iter.rdataOffset */\n      dup3\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6385:6419  iter.nextOffset - iter.rdataOffset */\n      tag_131\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6750:7231  function readDNSKEY(... */\n    tag_270:\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x60\n      dup1\n      dup3\n      add\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6922:6960  data.readUint16(offset + DNSKEY_FLAGS) */\n      tag_321\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6938:6959  offset + DNSKEY_FLAGS */\n      tag_322\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6482:6483  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6938:6944  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6938:6959  offset + DNSKEY_FLAGS */\n      tag_129\n      jump\t// in\n    tag_322:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6922:6926  data */\n      dup6\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6922:6937  data.readUint16 */\n      tag_116\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6922:6960  data.readUint16(offset + DNSKEY_FLAGS) */\n      jump\t// in\n    tag_321:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6909:6960  self.flags = data.readUint16(offset + DNSKEY_FLAGS) */\n      0xffff\n      and\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6987:7027  data.readUint8(offset + DNSKEY_PROTOCOL) */\n      tag_323\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7002:7026  offset + DNSKEY_PROTOCOL */\n      tag_324\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6525:6526  2 */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7002:7008  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7002:7026  offset + DNSKEY_PROTOCOL */\n      tag_129\n      jump\t// in\n    tag_324:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6987:6991  data */\n      dup6\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6987:7001  data.readUint8 */\n      tag_118\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6987:7027  data.readUint8(offset + DNSKEY_PROTOCOL) */\n      jump\t// in\n    tag_323:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6971:7027  self.protocol = data.readUint8(offset + DNSKEY_PROTOCOL) */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6971:6984  self.protocol */\n      0x20\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6971:7027  self.protocol = data.readUint8(offset + DNSKEY_PROTOCOL) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7055:7096  data.readUint8(offset + DNSKEY_ALGORITHM) */\n      tag_325\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7070:7095  offset + DNSKEY_ALGORITHM */\n      tag_324\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6569:6570  3 */\n      0x03\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7070:7076  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7070:7095  offset + DNSKEY_ALGORITHM */\n      tag_129\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7055:7096  data.readUint8(offset + DNSKEY_ALGORITHM) */\n    tag_325:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7038:7096  self.algorithm = data.readUint8(offset + DNSKEY_ALGORITHM) */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7038:7052  self.algorithm */\n      0x40\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7038:7096  self.algorithm = data.readUint8(offset + DNSKEY_ALGORITHM) */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7124:7223  data.substring(... */\n      tag_327\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7153:7175  offset + DNSKEY_PUBKEY */\n      tag_328\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6610:6611  4 */\n      0x04\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7153:7159  offset */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7153:7175  offset + DNSKEY_PUBKEY */\n      tag_129\n      jump\t// in\n    tag_328:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7190:7212  length - DNSKEY_PUBKEY */\n      tag_329\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6610:6611  4 */\n      0x04\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7190:7196  length */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7190:7212  length - DNSKEY_PUBKEY */\n      tag_131\n      jump\t// in\n    tag_329:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7124:7128  data */\n      dup7\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7124:7223  data.substring(... */\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7124:7138  data.substring */\n      tag_133\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7124:7223  data.substring(... */\n      jump\t// in\n    tag_327:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7107:7121  self.publicKey */\n      0x60\n      dup3\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7107:7223  self.publicKey = data.substring(... */\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":7107:7111  self */\n      swap4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":6750:7231  function readDNSKEY(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10812:12182  function verifySignatureWithKey(... */\n    tag_272:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11027:11031  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11185:11191  dnskey */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11185:11200  dnskey.protocol */\n      0x20\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11185:11205  dnskey.protocol != 3 */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11204:11205  3 */\n      0x03\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11185:11205  dnskey.protocol != 3 */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11181:11246  if (dnskey.protocol != 3) {... */\n      tag_331\n      jumpi\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11229:11234  false */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11222:11234  return false */\n      jump(tag_200)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11181:11246  if (dnskey.protocol != 3) {... */\n    tag_331:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11486:11491  rrset */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11486:11501  rrset.algorithm */\n      0x20\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11466:11501  dnskey.algorithm != rrset.algorithm */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11466:11472  dnskey */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11466:11482  dnskey.algorithm */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11466:11501  dnskey.algorithm != rrset.algorithm */\n      0xff\n      and\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11462:11542  if (dnskey.algorithm != rrset.algorithm) {... */\n      tag_332\n      jumpi\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11525:11530  false */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11518:11530  return false */\n      jump(tag_200)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11462:11542  if (dnskey.algorithm != rrset.algorithm) {... */\n    tag_332:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11552:11573  uint16 computedkeytag */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11576:11600  keyrdata.computeKeytag() */\n      tag_333\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11576:11584  keyrdata */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11576:11598  keyrdata.computeKeytag */\n      tag_334\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11576:11600  keyrdata.computeKeytag() */\n      jump\t// in\n    tag_333:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11552:11600  uint16 computedkeytag = keyrdata.computeKeytag() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11633:11638  rrset */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11633:11645  rrset.keytag */\n      0xc0\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11615:11645  computedkeytag != rrset.keytag */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11615:11629  computedkeytag */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11615:11645  computedkeytag != rrset.keytag */\n      0xffff\n      and\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11611:11686  if (computedkeytag != rrset.keytag) {... */\n      tag_335\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11669:11674  false */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11662:11674  return false */\n      swap2\n      pop\n      pop\n      jump(tag_200)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11611:11686  if (computedkeytag != rrset.keytag) {... */\n    tag_335:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11879:11891  dnskey.flags */\n      dup6\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":1231:1236  0x100 */\n      0x0100\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11879:11913  dnskey.flags & DNSKEY_FLAG_ZONEKEY */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11879:11891  dnskey.flags */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11879:11918  dnskey.flags & DNSKEY_FLAG_ZONEKEY == 0 */\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11875:11959  if (dnskey.flags & DNSKEY_FLAG_ZONEKEY == 0) {... */\n      tag_336\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11942:11947  false */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11935:11947  return false */\n      swap2\n      pop\n      pop\n      jump(tag_200)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11875:11959  if (dnskey.flags & DNSKEY_FLAG_ZONEKEY == 0) {... */\n    tag_336:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12004:12020  dnskey.algorithm */\n      0x40\n      dup1\n      dup8\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11993:12021  algorithms[dnskey.algorithm] */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11971:11990  Algorithm algorithm */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11993:12021  algorithms[dnskey.algorithm] */\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11993:12003  algorithms */\n      0x02\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":11993:12021  algorithms[dnskey.algorithm] */\n      0x20\n      mstore\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12032:12109  if (address(algorithm) == address(0)) {... */\n      tag_337\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12092:12097  false */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12085:12097  return false */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_200)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12032:12109  if (address(algorithm) == address(0)) {... */\n    tag_337:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12153:12163  data.rrset */\n      dup4\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12165:12173  data.sig */\n      0x20\n      dup6\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12126:12174  algorithm.verify(keyrdata, data.rrset, data.sig) */\n      mload(0x40)\n      shl(0xe0, 0xde8f50a1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12126:12142  algorithm.verify */\n      dup5\n      and\n      swap3\n      0xde8f50a1\n      swap3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12126:12174  algorithm.verify(keyrdata, data.rrset, data.sig) */\n      tag_338\n      swap3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12143:12151  keyrdata */\n      dup12\n      swap3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12153:12163  data.rrset */\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12165:12173  data.sig */\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12126:12174  algorithm.verify(keyrdata, data.rrset, data.sig) */\n      0x04\n      add\n      tag_339\n      jump\t// in\n    tag_338:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_341\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_341:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_342\n      swap2\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":12119:12174  return algorithm.verify(keyrdata, data.rrset, data.sig) */\n      swap8\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":10812:12182  function verifySignatureWithKey(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14126:15268  function verifyKeyWithDS(... */\n    tag_275:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14325:14329  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14342:14355  uint16 keytag */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14358:14382  keyrdata.computeKeytag() */\n      tag_345\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14358:14366  keyrdata */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14358:14380  keyrdata.computeKeytag */\n      tag_334\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14358:14382  keyrdata.computeKeytag() */\n      jump\t// in\n    tag_345:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14342:14382  uint16 keytag = keyrdata.computeKeytag() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14393:15238  for (; !dsrrs.done(); dsrrs.next()) {... */\n    tag_346:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4730  iter.data */\n      dup5\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4721:4737  iter.data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4717  iter.offset */\n      0x20\n      dup7\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":4706:4737  iter.offset >= iter.data.length */\n      lt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14393:15238  for (; !dsrrs.done(); dsrrs.next()) {... */\n      tag_347\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14444:14466  bytes memory proofName */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14469:14481  dsrrs.name() */\n      tag_350\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14469:14474  dsrrs */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14469:14479  dsrrs.name */\n      tag_147\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14469:14481  dsrrs.name() */\n      jump\t// in\n    tag_350:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14444:14481  bytes memory proofName = dsrrs.name() */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14501:14526  proofName.equals(keyname) */\n      tag_351\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14444:14481  bytes memory proofName = dsrrs.name() */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14518:14525  keyname */\n      dup9\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14501:14517  proofName.equals */\n      tag_287\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14501:14526  proofName.equals(keyname) */\n      jump\t// in\n    tag_351:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14496:14607  if (!proofName.equals(keyname)) {... */\n      tag_352\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14572:14579  keyname */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14581:14590  proofName */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14554:14591  ProofNameMismatch(keyname, proofName) */\n      mload(0x40)\n      shl(0xe1, 0x6b80573f)\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14496:14607  if (!proofName.equals(keyname)) {... */\n    tag_352:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14682:14699  dsrrs.rdataOffset */\n      0xa0\n      dup7\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14718:14734  dsrrs.nextOffset */\n      0xc0\n      dup8\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14623:14643  RRUtils.DS memory ds */\n      0x00\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14646:14769  dsrrs.data.readDS(... */\n      tag_354\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14718:14754  dsrrs.nextOffset - dsrrs.rdataOffset */\n      tag_355\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14682:14699  dsrrs.rdataOffset */\n      dup3\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14718:14754  dsrrs.nextOffset - dsrrs.rdataOffset */\n      tag_131\n      jump\t// in\n    tag_355:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14646:14656  dsrrs.data */\n      dup10\n      mload\n      swap2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14646:14769  dsrrs.data.readDS(... */\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14646:14663  dsrrs.data.readDS */\n      tag_270\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14646:14769  dsrrs.data.readDS(... */\n      jump\t// in\n    tag_354:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14623:14769  RRUtils.DS memory ds = dsrrs.data.readDS(... */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14801:14807  keytag */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14788:14807  ds.keytag != keytag */\n      0xffff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14788:14790  ds */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14788:14797  ds.keytag */\n      0x00\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14788:14807  ds.keytag != keytag */\n      0xffff\n      and\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14784:14852  if (ds.keytag != keytag) {... */\n      tag_357\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14828:14836  continue */\n      pop\n      pop\n      jump(tag_348)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14784:14852  if (ds.keytag != keytag) {... */\n    tag_357:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14886:14892  dnskey */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14886:14902  dnskey.algorithm */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14870:14902  ds.algorithm != dnskey.algorithm */\n      0xff\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14870:14872  ds */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14870:14882  ds.algorithm */\n      0x20\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14870:14902  ds.algorithm != dnskey.algorithm */\n      0xff\n      and\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14866:14947  if (ds.algorithm != dnskey.algorithm) {... */\n      tag_358\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14923:14931  continue */\n      pop\n      pop\n      jump(tag_348)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14866:14947  if (ds.algorithm != dnskey.algorithm) {... */\n    tag_358:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15002:15044  buf.init(keyname.length + keyrdata.length) */\n      tag_361\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15028:15036  keyrdata */\n      dup7\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15028:15043  keyrdata.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15011:15018  keyname */\n      dup11\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15011:15025  keyname.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15011:15043  keyname.length + keyrdata.length */\n      tag_362\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_362:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15002:15005  buf */\n      dup3\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15002:15010  buf.init */\n      tag_363\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15002:15044  buf.init(keyname.length + keyrdata.length) */\n      jump\t// in\n    tag_361:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15059:15078  buf.append(keyname) */\n      tag_364\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15059:15062  buf */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15070:15077  keyname */\n      dup11\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15059:15069  buf.append */\n      tag_365\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15059:15078  buf.append(keyname) */\n      jump\t// in\n    tag_364:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15093:15113  buf.append(keyrdata) */\n      tag_366\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15093:15096  buf */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15104:15112  keyrdata */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15093:15103  buf.append */\n      tag_365\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15093:15113  buf.append(keyrdata) */\n      jump\t// in\n    tag_366:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15132:15179  verifyDSHash(ds.digestType, buf.buf, ds.digest) */\n      tag_367\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15145:15147  ds */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15145:15158  ds.digestType */\n      0x40\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15160:15163  buf */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15160:15167  buf.buf */\n      0x00\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15169:15171  ds */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15169:15178  ds.digest */\n      0x60\n      add\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15132:15144  verifyDSHash */\n      tag_368\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15132:15179  verifyDSHash(ds.digestType, buf.buf, ds.digest) */\n      jump\t// in\n    tag_367:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15128:15227  if (verifyDSHash(ds.digestType, buf.buf, ds.digest)) {... */\n      iszero\n      tag_369\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15207:15211  true */\n      0x01\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15200:15211  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_200)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15128:15227  if (verifyDSHash(ds.digestType, buf.buf, ds.digest)) {... */\n    tag_369:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14429:15238  {... */\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14393:15238  for (; !dsrrs.done(); dsrrs.next()) {... */\n    tag_348:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14415:14427  dsrrs.next() */\n      tag_370\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14415:14420  dsrrs */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14415:14425  dsrrs.next */\n      tag_159\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14415:14427  dsrrs.next() */\n      jump\t// in\n    tag_370:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14393:15238  for (; !dsrrs.done(); dsrrs.next()) {... */\n      jump(tag_346)\n    tag_347:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15255:15260  false */\n      0x00\n      swap6\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":14126:15268  function verifyKeyWithDS(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5813:6043  function equals(... */\n    tag_287:\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5916:5920  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5968:5973  other */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5968:5980  other.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5953:5957  self */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5953:5964  self.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5953:5980  self.length == other.length */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5953:6035  self.length == other.length &&... */\n      dup1\n      iszero\n      tag_162\n      jumpi\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5997:6035  equals(self, 0, other, 0, self.length) */\n      tag_162\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6004:6008  self */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6010:6011  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6013:6018  other */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6020:6021  0 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6023:6027  self */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":6023:6034  self.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5997:6003  equals */\n      tag_153\n        /* \"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":5997:6035  equals(self, 0, other, 0, self.length) */\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10503:14574  function computeKeytag(bytes memory data) internal pure returns (uint16) {... */\n    tag_334:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10568:10574  uint16 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12387:12391  8192 */\n      0x2000\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12372:12376  data */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12372:12383  data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12372:12391  data.length <= 8192 */\n      gt\n      iszero\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12364:12419  require(data.length <= 8192, \"Long keys not permitted\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10965:10967   */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12364:12419  require(data.length <= 8192, \"Long keys not permitted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10947:10968   */\n      mstore\n        /* \"#utility.yul\":11004:11006   */\n      0x17\n        /* \"#utility.yul\":10984:11002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10977:11007   */\n      mstore\n        /* \"#utility.yul\":11043:11068   */\n      0x4c6f6e67206b657973206e6f74207065726d6974746564000000000000000000\n        /* \"#utility.yul\":11023:11041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11016:11069   */\n      mstore\n        /* \"#utility.yul\":11086:11104   */\n      0x64\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12364:12419  require(data.length <= 8192, \"Long keys not permitted\") */\n      tag_101\n        /* \"#utility.yul\":10763:11110   */\n      jump\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12364:12419  require(data.length <= 8192, \"Long keys not permitted\") */\n    tag_375:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12434:12445  uint256 ac1 */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12460:12471  uint256 ac2 */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12491:12500  uint256 i */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12486:13171  for (uint256 i = 0; i < data.length + 31; i += 32) {... */\n    tag_378:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12510:12514  data */\n      dup5\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12510:12521  data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12524:12526  31 */\n      0x1f\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12510:12526  data.length + 31 */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12506:12507  i */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12506:12526  i < data.length + 31 */\n      lt\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12486:13171  for (uint256 i = 0; i < data.length + 31; i += 32) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12556:12568  uint256 word */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12652:12653  i */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12647:12649  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12641:12645  data */\n      dup8\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12637:12650  add(data, 32) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12633:12654  add(add(data, 32), i) */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12627:12655  mload(add(add(data, 32), i)) */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12619:12655  word := mload(add(add(data, 32), i)) */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12705:12709  data */\n      dup6\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12705:12716  data.length */\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12696:12697  i */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12700:12702  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12696:12702  i + 32 */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12696:12716  i + 32 > data.length */\n      gt\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12692:12861  if (i + 32 > data.length) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12765:12776  data.length */\n      dup6\n      mload\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12765:12780  data.length - i */\n      dup3\n      swap1\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12784:12785  8 */\n      0x08\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12764:12785  (data.length - i) * 8 */\n      mul\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12758:12761  256 */\n      0x0100\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12758:12785  256 - (data.length - i) * 8 */\n      sub\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12816:12830  word >> unused */\n      swap1\n      dup2\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12815:12841  (word >> unused) << unused */\n      swap1\n      shl\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12692:12861  if (i + 32 > data.length) {... */\n    tag_381:\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12907:13033  (word &... */\n      0xff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13032:13033  8 */\n      0x08\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12907:13033  (word &... */\n      dup3\n      swap1\n      shr\n      dup2\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12879:13033  ac1 +=... */\n      swap5\n      swap1\n      swap5\n      add\n      swap4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13060:13154  word &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13052:13155  ac2 += (word &... */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12533:12535  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12528:12535  i += 32 */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":12486:13171  for (uint256 i = 0; i < data.length + 31; i += 32) {... */\n      jump(tag_378)\n    tag_379:\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13444:13446  16 */\n      0x10\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13325:13328  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13352:13418  0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000 */\n      0xffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13325:13418  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13324:13446  (ac1 &... */\n      swap1\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13209:13212  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13236:13302  0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF */\n      0xffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13209:13302  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13208:13447  (ac1 &... */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13185:13447  ac1 =... */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13721:13723  16 */\n      0x10\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13602:13605  ac2 */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13629:13695  0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000 */\n      0xffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13602:13695  ac2 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13601:13723  (ac2 &... */\n      swap1\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13486:13489  ac2 */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13513:13579  0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF */\n      0xffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13486:13579  ac2 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13485:13724  (ac2 &... */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13462:13724  ac2 =... */\n      swap1\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13758:13761  ac2 */\n      dup1\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13753:13754  8 */\n      0x08\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13746:13749  ac1 */\n      dup4\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13746:13754  ac1 << 8 */\n      swap1\n      shl\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13745:13761  (ac1 << 8) + ac2 */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13739:13761  ac1 = (ac1 << 8) + ac2 */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14035:14037  32 */\n      0x20\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13916:13919  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13943:14009  0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000 */\n      0xffffffff00000000ffffffff00000000ffffffff00000000ffffffff00000000\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13916:14009  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13915:14037  (ac1 &... */\n      swap1\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13800:13803  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13827:13893  0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF */\n      0xffffffff00000000ffffffff00000000ffffffff00000000ffffffff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13800:13893  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13799:14038  (ac1 &... */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":13776:14038  ac1 =... */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14312:14314  64 */\n      0x40\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14193:14196  ac1 */\n      dup3\n      not(0xffffffffffffffff0000000000000000ffffffffffffffff)\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14193:14286  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14192:14314  (ac1 &... */\n      swap1\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14077:14080  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14104:14170  0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF */\n      0xffffffffffffffff0000000000000000ffffffffffffffff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14077:14170  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14076:14315  (ac1 &... */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14053:14315  ac1 =... */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14476:14479  128 */\n      0x80\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14469:14472  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14469:14479  ac1 >> 128 */\n      swap1\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14354:14357  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14381:14447  0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF */\n      0xffffffffffffffffffffffffffffffff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14354:14447  ac1 &... */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14353:14480  (ac1 &... */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14330:14480  ac1 =... */\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14510:14512  16 */\n      0x10\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14503:14506  ac1 */\n      dup3\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14503:14512  ac1 >> 16 */\n      swap1\n      shr\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14516:14522  0xFFFF */\n      0xffff\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14502:14522  (ac1 >> 16) & 0xFFFF */\n      and\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14495:14522  ac1 += (ac1 >> 16) & 0xFFFF */\n      dup3\n      add\n      swap2\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14551:14554  ac1 */\n      dup2\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":14537:14555  return uint16(ac1) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":10503:14574  function computeKeytag(bytes memory data) internal pure returns (uint16) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1020:1575  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {... */\n    tag_363:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1119:1132  capacity % 32 */\n      tag_396\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1130:1132  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1119:1127  capacity */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1119:1132  capacity % 32 */\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1119:1137  capacity % 32 != 0 */\n      iszero\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1115:1196  if (capacity % 32 != 0) {... */\n      tag_398\n      jumpi\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1171:1184  capacity % 32 */\n      tag_399\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1182:1184  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1171:1179  capacity */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1171:1184  capacity % 32 */\n      tag_397\n      jump\t// in\n    tag_399:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1165:1185  32 - (capacity % 32) */\n      tag_400\n      swap1\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1165:1167  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1165:1185  32 - (capacity % 32) */\n      tag_131\n      jump\t// in\n    tag_400:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1153:1185  capacity += 32 - (capacity % 32) */\n      tag_401\n      swap1\n      dup4\n      tag_129\n      jump\t// in\n    tag_401:\n      swap2\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1115:1196  if (capacity % 32 != 0) {... */\n    tag_398:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1251:1263  buf.capacity */\n      0x20\n      dup1\n      dup5\n      add\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1251:1274  buf.capacity = capacity */\n      dup4\n      swap1\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1324:1328  0x40 */\n      0x40\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1318:1329  mload(0x40) */\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1342:1358  mstore(buf, ptr) */\n      dup1\n      dup6\n      mstore\n      0x00\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1371:1385  mstore(ptr, 0) */\n      dup2\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1318:1329  mload(0x40) */\n      swap1\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1417:1435  add(ptr, capacity) */\n      dup2\n      dup5\n      add\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1409:1436  add(32, add(ptr, capacity)) */\n      add\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1452:1464  lt(fpm, ptr) */\n      dup2\n      dup2\n      lt\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1449:1509  if lt(fpm, ptr) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1493:1494  0 */\n      0x00\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1490:1491  0 */\n      dup1\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1483:1495  revert(0, 0) */\n      revert\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1449:1509  if lt(fpm, ptr) {... */\n    tag_402:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1529:1533  0x40 */\n      0x40\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1522:1539  mstore(0x40, fpm) */\n      mstore\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1565:1568  buf */\n      swap2\n      swap3\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":1020:1575  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4539:4685  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {... */\n    tag_365:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4648:4678  append(buf, data, data.length) */\n      tag_162\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4655:4658  buf */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4660:4664  data */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4666:4670  data */\n      dup5\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4666:4677  data.length */\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4648:4654  append */\n      tag_406\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4648:4678  append(buf, data, data.length) */\n      jump\t// in\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15571:15877  function verifyDSHash(... */\n    tag_368:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15737:15756  digests[digesttype] */\n      0xff\n      dup4\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15708:15712  bool */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15737:15756  digests[digesttype] */\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15737:15744  digests */\n      0x03\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15737:15756  digests[digesttype] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15725:15812  if (address(digests[digesttype]) == address(0)) {... */\n      tag_408\n      jumpi\n      pop\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15795:15800  false */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15788:15800  return false */\n      jump(tag_93)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15725:15812  if (address(digests[digesttype]) == address(0)) {... */\n    tag_408:\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15848  digests[digesttype] */\n      0xff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15836  digests */\n      0x03\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15848  digests[digesttype] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n      sload\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15869  digests[digesttype].verify(data, digest) */\n      swap1\n      mload\n      shl(0xe1, 0x7bf41d77)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15848  digests[digesttype] */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15855  digests[digesttype].verify */\n      0xf7e83aee\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15869  digests[digesttype].verify(data, digest) */\n      tag_409\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15856:15860  data */\n      dup7\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15862:15868  digest */\n      dup7\n      swap1\n        /* \"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":15829:15869  digests[digesttype].verify(data, digest) */\n      0x04\n      add\n      tag_177\n      jump\t// in\n    tag_409:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_411\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_411:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_343\n      jump\t// in\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2844:4271  function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {... */\n    tag_406:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x60\n      dup2\n      mstore\n      0x00\n      0x20\n      dup3\n      add\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2970:2974  data */\n      dup3\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2970:2981  data.length */\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2963:2966  len */\n      dup3\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2963:2981  len <= data.length */\n      gt\n      iszero\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2955:2982  require(len <= data.length) */\n      tag_415\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_415:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3004:3011  buf.buf */\n      dup4\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3004:3018  buf.buf.length */\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2993:3001  uint off */\n      0x00\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3047:3056  off + len */\n      tag_416\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3053:3056  len */\n      dup5\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3004:3018  buf.buf.length */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3047:3056  off + len */\n      tag_129\n      jump\t// in\n    tag_416:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3028:3056  uint newCapacity = off + len */\n      swap1\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3084:3087  buf */\n      dup6\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3084:3096  buf.capacity */\n      0x20\n      add\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3070:3081  newCapacity */\n      dup2\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3070:3096  newCapacity > buf.capacity */\n      gt\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3066:3151  if (newCapacity > buf.capacity) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3112:3140  resize(buf, newCapacity * 2) */\n      tag_418\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3119:3122  buf */\n      dup7\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3124:3139  newCapacity * 2 */\n      tag_419\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3124:3135  newCapacity */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3138:3139  2 */\n      0x02\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3124:3139  newCapacity * 2 */\n      tag_420\n      jump\t// in\n    tag_419:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3112:3118  resize */\n      tag_421\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3112:3140  resize(buf, newCapacity * 2) */\n      jump\t// in\n    tag_418:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3284:3294  mload(buf) */\n      dup6\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3367:3380  mload(bufptr) */\n      dup1\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3480:3505  add(add(bufptr, 32), off) */\n      dup4\n      dup3\n      add\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3496:3498  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3480:3505  add(add(bufptr, 32), off) */\n      add\n      swap2\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3161:3170  uint dest */\n      0x00\n      swap2\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3579:3602  gt(newCapacity, buflen) */\n      dup1\n      dup6\n      gt\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3576:3662  if gt(newCapacity, buflen) {... */\n      iszero\n      tag_422\n      jumpi\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3636:3647  newCapacity */\n      dup5\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3628:3634  bufptr */\n      dup3\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3621:3648  mstore(bufptr, newCapacity) */\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3576:3662  if gt(newCapacity, buflen) {... */\n    tag_422:\n      pop\n      pop\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3692:3694  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3682:3695  add(data, 32) */\n      dup7\n      add\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3765:3930  for (; len >= 32; len -= 32) {... */\n    tag_423:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3779:3781  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3772:3775  len */\n      dup7\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3772:3781  len >= 32 */\n      lt\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3765:3930  for (; len >= 32; len -= 32) {... */\n      tag_424\n      jumpi\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3848:3858  mload(src) */\n      dup1\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3835:3859  mstore(dest, mload(src)) */\n      dup3\n      mstore\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3886:3896  dest += 32 */\n      tag_426\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3894:3896  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3842:3846  dest */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3886:3896  dest += 32 */\n      tag_129\n      jump\t// in\n    tag_426:\n      swap2\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3910:3919  src += 32 */\n      tag_427\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3917:3919  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3910:3919  src += 32 */\n      dup3\n      tag_129\n      jump\t// in\n    tag_427:\n      swap1\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3783:3792  len -= 32 */\n      tag_428\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3790:3792  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3783:3792  len -= 32 */\n      dup8\n      tag_131\n      jump\t// in\n    tag_428:\n      swap6\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":3765:3930  for (; len >= 32; len -= 32) {... */\n      jump(tag_423)\n    tag_424:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4091:4101  mload(src) */\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4150:4161  mload(dest) */\n      dup2\n      mload\n      not(0x00)\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4017:4019  32 */\n      0x20\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4017:4025  32 - len */\n      dup9\n      swap1\n      sub\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4009:4012  256 */\n      0x0100\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4009:4026  256 ** (32 - len) */\n      exp\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4008:4031  (256 ** (32 - len)) - 1 */\n      add\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4146:4168  and(mload(dest), mask) */\n      swap1\n      dup2\n      and\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4103:4112  not(mask) */\n      swap1\n      not\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4087:4113  and(mload(src), not(mask)) */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4198:4219  or(destpart, srcpart) */\n      or\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4185:4220  mstore(dest, or(destpart, srcpart)) */\n      swap1\n      mstore\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":4261:4264  buf */\n      dup5\n      swap2\n      pop\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2844:4271  function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2004:2171  function resize(buffer memory buf, uint capacity) private pure {... */\n    tag_421:\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2099:2106  buf.buf */\n      dup2\n      mload\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2116:2135  init(buf, capacity) */\n      tag_430\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2099:2102  buf */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2126:2134  capacity */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2116:2120  init */\n      tag_363\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2116:2135  init(buf, capacity) */\n      jump\t// in\n    tag_430:\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2145:2164  append(buf, oldbuf) */\n      tag_431\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2152:2155  buf */\n      dup4\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2157:2163  oldbuf */\n      dup3\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2145:2151  append */\n      tag_365\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2145:2164  append(buf, oldbuf) */\n      jump\t// in\n    tag_431:\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2067:2171  {... */\n      pop\n        /* \"@ensdomains/buffer/contracts/Buffer.sol\":2004:2171  function resize(buffer memory buf, uint capacity) private pure {... */\n      pop\n      pop\n      jump\t// out\n    tag_92:\n      0x40\n      dup1\n      mload\n      0x0140\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup1\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      0xa0\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      0xc0\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0xe0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0100\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x0120\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n    tag_211:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:170   */\n    tag_432:\n        /* \"#utility.yul\":80:100   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":140:144   */\n      0xff\n        /* \"#utility.yul\":129:145   */\n      dup2\n      and\n        /* \"#utility.yul\":119:146   */\n      dup2\n      eq\n        /* \"#utility.yul\":109:164   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":160:161   */\n      0x00\n        /* \"#utility.yul\":157:158   */\n      dup1\n        /* \"#utility.yul\":150:162   */\n      revert\n        /* \"#utility.yul\":109:164   */\n    tag_442:\n        /* \"#utility.yul\":14:170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":175:317   */\n    tag_433:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":261:292   */\n      dup2\n      and\n        /* \"#utility.yul\":251:293   */\n      dup2\n      eq\n        /* \"#utility.yul\":241:311   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":307:308   */\n      0x00\n        /* \"#utility.yul\":304:305   */\n      dup1\n        /* \"#utility.yul\":297:309   */\n      revert\n        /* \"#utility.yul\":241:311   */\n    tag_444:\n        /* \"#utility.yul\":175:317   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":322:668   */\n    tag_15:\n        /* \"#utility.yul\":406:412   */\n      0x00\n        /* \"#utility.yul\":414:420   */\n      dup1\n        /* \"#utility.yul\":467:469   */\n      0x40\n        /* \"#utility.yul\":455:464   */\n      dup4\n        /* \"#utility.yul\":446:453   */\n      dup6\n        /* \"#utility.yul\":442:465   */\n      sub\n        /* \"#utility.yul\":438:470   */\n      slt\n        /* \"#utility.yul\":435:487   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":480:481   */\n      dup1\n        /* \"#utility.yul\":473:485   */\n      revert\n        /* \"#utility.yul\":435:487   */\n    tag_446:\n        /* \"#utility.yul\":506:533   */\n      tag_447\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":506:533   */\n      tag_432\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":496:533   */\n      swap2\n      pop\n        /* \"#utility.yul\":583:585   */\n      0x20\n        /* \"#utility.yul\":572:581   */\n      dup4\n        /* \"#utility.yul\":568:586   */\n      add\n        /* \"#utility.yul\":555:587   */\n      calldataload\n        /* \"#utility.yul\":596:638   */\n      tag_448\n        /* \"#utility.yul\":632:637   */\n      dup2\n        /* \"#utility.yul\":596:638   */\n      tag_433\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":657:662   */\n      dup1\n        /* \"#utility.yul\":647:662   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":322:668   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":673:931   */\n    tag_19:\n        /* \"#utility.yul\":732:738   */\n      0x00\n        /* \"#utility.yul\":785:787   */\n      0x20\n        /* \"#utility.yul\":773:782   */\n      dup3\n        /* \"#utility.yul\":764:771   */\n      dup5\n        /* \"#utility.yul\":760:783   */\n      sub\n        /* \"#utility.yul\":756:788   */\n      slt\n        /* \"#utility.yul\":753:805   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":801:802   */\n      0x00\n        /* \"#utility.yul\":798:799   */\n      dup1\n        /* \"#utility.yul\":791:803   */\n      revert\n        /* \"#utility.yul\":753:805   */\n    tag_450:\n        /* \"#utility.yul\":840:849   */\n      dup2\n        /* \"#utility.yul\":827:850   */\n      calldataload\n        /* \"#utility.yul\":859:901   */\n      tag_162\n        /* \"#utility.yul\":895:900   */\n      dup2\n        /* \"#utility.yul\":859:901   */\n      tag_433\n      jump\t// in\n        /* \"#utility.yul\":1284:1411   */\n    tag_206:\n        /* \"#utility.yul\":1345:1355   */\n      0x4e487b71\n        /* \"#utility.yul\":1340:1343   */\n      0xe0\n        /* \"#utility.yul\":1336:1356   */\n      shl\n        /* \"#utility.yul\":1333:1334   */\n      0x00\n        /* \"#utility.yul\":1326:1357   */\n      mstore\n        /* \"#utility.yul\":1376:1380   */\n      0x41\n        /* \"#utility.yul\":1373:1374   */\n      0x04\n        /* \"#utility.yul\":1366:1381   */\n      mstore\n        /* \"#utility.yul\":1400:1404   */\n      0x24\n        /* \"#utility.yul\":1397:1398   */\n      0x00\n        /* \"#utility.yul\":1390:1405   */\n      revert\n        /* \"#utility.yul\":1416:1673   */\n    tag_434:\n        /* \"#utility.yul\":1488:1492   */\n      0x40\n        /* \"#utility.yul\":1482:1493   */\n      dup1\n      mload\n      swap1\n        /* \"#utility.yul\":1520:1537   */\n      dup2\n      add\n        /* \"#utility.yul\":1567:1585   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1552:1586   */\n      dup2\n      gt\n        /* \"#utility.yul\":1588:1610   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1549:1611   */\n      or\n        /* \"#utility.yul\":1546:1634   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":1614:1632   */\n      tag_459\n      tag_206\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1650:1654   */\n      0x40\n        /* \"#utility.yul\":1643:1667   */\n      mstore\n        /* \"#utility.yul\":1416:1673   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1678:1953   */\n    tag_435:\n        /* \"#utility.yul\":1749:1751   */\n      0x40\n        /* \"#utility.yul\":1743:1752   */\n      mload\n        /* \"#utility.yul\":1814:1816   */\n      0x1f\n        /* \"#utility.yul\":1795:1808   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1791:1818   */\n      and\n        /* \"#utility.yul\":1779:1819   */\n      dup2\n      add\n        /* \"#utility.yul\":1849:1867   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1834:1868   */\n      dup2\n      gt\n        /* \"#utility.yul\":1870:1892   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1831:1893   */\n      or\n        /* \"#utility.yul\":1828:1916   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":1896:1914   */\n      tag_462\n      tag_206\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1932:1934   */\n      0x40\n        /* \"#utility.yul\":1925:1947   */\n      mstore\n        /* \"#utility.yul\":1678:1953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1958:2488   */\n    tag_436:\n        /* \"#utility.yul\":2000:2005   */\n      0x00\n        /* \"#utility.yul\":2053:2056   */\n      dup3\n        /* \"#utility.yul\":2046:2050   */\n      0x1f\n        /* \"#utility.yul\":2038:2044   */\n      dup4\n        /* \"#utility.yul\":2034:2051   */\n      add\n        /* \"#utility.yul\":2030:2057   */\n      slt\n        /* \"#utility.yul\":2020:2075   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2071:2072   */\n      0x00\n        /* \"#utility.yul\":2068:2069   */\n      dup1\n        /* \"#utility.yul\":2061:2073   */\n      revert\n        /* \"#utility.yul\":2020:2075   */\n    tag_464:\n        /* \"#utility.yul\":2107:2113   */\n      dup2\n        /* \"#utility.yul\":2094:2114   */\n      calldataload\n        /* \"#utility.yul\":2133:2151   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2129:2131   */\n      dup2\n        /* \"#utility.yul\":2126:2152   */\n      gt\n        /* \"#utility.yul\":2123:2175   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":2155:2173   */\n      tag_466\n      tag_206\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2199:2254   */\n      tag_467\n        /* \"#utility.yul\":2242:2244   */\n      0x1f\n        /* \"#utility.yul\":2223:2236   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2219:2246   */\n      and\n        /* \"#utility.yul\":2248:2252   */\n      0x20\n        /* \"#utility.yul\":2215:2253   */\n      add\n        /* \"#utility.yul\":2199:2254   */\n      tag_435\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":2279:2281   */\n      dup2\n        /* \"#utility.yul\":2270:2277   */\n      dup2\n        /* \"#utility.yul\":2263:2282   */\n      mstore\n        /* \"#utility.yul\":2325:2328   */\n      dup5\n        /* \"#utility.yul\":2318:2322   */\n      0x20\n        /* \"#utility.yul\":2313:2315   */\n      dup4\n        /* \"#utility.yul\":2305:2311   */\n      dup7\n        /* \"#utility.yul\":2301:2316   */\n      add\n        /* \"#utility.yul\":2297:2323   */\n      add\n        /* \"#utility.yul\":2294:2329   */\n      gt\n        /* \"#utility.yul\":2291:2346   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2342:2343   */\n      0x00\n        /* \"#utility.yul\":2339:2340   */\n      dup1\n        /* \"#utility.yul\":2332:2344   */\n      revert\n        /* \"#utility.yul\":2291:2346   */\n    tag_468:\n        /* \"#utility.yul\":2407:2409   */\n      dup2\n        /* \"#utility.yul\":2400:2404   */\n      0x20\n        /* \"#utility.yul\":2392:2398   */\n      dup6\n        /* \"#utility.yul\":2388:2405   */\n      add\n        /* \"#utility.yul\":2381:2385   */\n      0x20\n        /* \"#utility.yul\":2372:2379   */\n      dup4\n        /* \"#utility.yul\":2368:2386   */\n      add\n        /* \"#utility.yul\":2355:2410   */\n      calldatacopy\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2430:2446   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2448:2452   */\n      0x20\n        /* \"#utility.yul\":2426:2453   */\n      add\n        /* \"#utility.yul\":2419:2457   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2434:2441   */\n      swap4\n        /* \"#utility.yul\":1958:2488   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2493:4175   */\n    tag_437:\n        /* \"#utility.yul\":2565:2570   */\n      0x00\n        /* \"#utility.yul\":2618:2621   */\n      dup3\n        /* \"#utility.yul\":2611:2615   */\n      0x1f\n        /* \"#utility.yul\":2603:2609   */\n      dup4\n        /* \"#utility.yul\":2599:2616   */\n      add\n        /* \"#utility.yul\":2595:2622   */\n      slt\n        /* \"#utility.yul\":2585:2640   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":2636:2637   */\n      0x00\n        /* \"#utility.yul\":2633:2634   */\n      dup1\n        /* \"#utility.yul\":2626:2638   */\n      revert\n        /* \"#utility.yul\":2585:2640   */\n    tag_470:\n        /* \"#utility.yul\":2672:2678   */\n      dup2\n        /* \"#utility.yul\":2659:2679   */\n      calldataload\n        /* \"#utility.yul\":2698:2702   */\n      0x20\n        /* \"#utility.yul\":2721:2739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2758:2760   */\n      dup1\n        /* \"#utility.yul\":2754:2756   */\n      dup4\n        /* \"#utility.yul\":2751:2761   */\n      gt\n        /* \"#utility.yul\":2748:2784   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":2764:2782   */\n      tag_472\n      tag_206\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2810:2812   */\n      dup3\n        /* \"#utility.yul\":2807:2808   */\n      0x05\n        /* \"#utility.yul\":2803:2813   */\n      shl\n        /* \"#utility.yul\":2833:2861   */\n      tag_473\n        /* \"#utility.yul\":2857:2859   */\n      dup4\n        /* \"#utility.yul\":2853:2855   */\n      dup3\n        /* \"#utility.yul\":2849:2860   */\n      add\n        /* \"#utility.yul\":2833:2861   */\n      tag_435\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":2895:2910   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":2965:2980   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":2961:2985   */\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":2926:2938   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2997:3012   */\n      dup9\n      dup7\n      gt\n        /* \"#utility.yul\":2994:3029   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":3025:3026   */\n      0x00\n        /* \"#utility.yul\":3022:3023   */\n      dup1\n        /* \"#utility.yul\":3015:3027   */\n      revert\n        /* \"#utility.yul\":2994:3029   */\n    tag_474:\n        /* \"#utility.yul\":3061:3063   */\n      dup5\n        /* \"#utility.yul\":3053:3059   */\n      dup9\n        /* \"#utility.yul\":3049:3064   */\n      add\n        /* \"#utility.yul\":3038:3064   */\n      swap3\n      pop\n        /* \"#utility.yul\":3073:4146   */\n    tag_475:\n        /* \"#utility.yul\":3089:3095   */\n      dup6\n        /* \"#utility.yul\":3084:3087   */\n      dup4\n        /* \"#utility.yul\":3081:3096   */\n      lt\n        /* \"#utility.yul\":3073:4146   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":3175:3178   */\n      dup3\n        /* \"#utility.yul\":3162:3179   */\n      calldataload\n        /* \"#utility.yul\":3211:3213   */\n      dup5\n        /* \"#utility.yul\":3198:3209   */\n      dup2\n        /* \"#utility.yul\":3195:3214   */\n      gt\n        /* \"#utility.yul\":3192:3301   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":3255:3256   */\n      0x00\n        /* \"#utility.yul\":3284:3286   */\n      dup1\n        /* \"#utility.yul\":3280:3282   */\n      dup2\n        /* \"#utility.yul\":3273:3287   */\n      revert\n        /* \"#utility.yul\":3192:3301   */\n    tag_478:\n        /* \"#utility.yul\":3324:3348   */\n      dup9\n      add\n        /* \"#utility.yul\":3371:3375   */\n      0x40\n        /* \"#utility.yul\":3399:3411   */\n      dup2\n      dup12\n      sub\n      not(0x1f)\n        /* \"#utility.yul\":3395:3421   */\n      add\n        /* \"#utility.yul\":3391:3426   */\n      dup2\n      sgt\n        /* \"#utility.yul\":3388:3513   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":3467:3468   */\n      0x00\n        /* \"#utility.yul\":3496:3498   */\n      dup1\n        /* \"#utility.yul\":3492:3494   */\n      dup2\n        /* \"#utility.yul\":3485:3499   */\n      revert\n        /* \"#utility.yul\":3388:3513   */\n    tag_479:\n        /* \"#utility.yul\":3539:3561   */\n      tag_480\n      tag_434\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3611:3613   */\n      dup8\n        /* \"#utility.yul\":3607:3609   */\n      dup4\n        /* \"#utility.yul\":3603:3614   */\n      add\n        /* \"#utility.yul\":3590:3615   */\n      calldataload\n        /* \"#utility.yul\":3644:3646   */\n      dup8\n        /* \"#utility.yul\":3634:3642   */\n      dup2\n        /* \"#utility.yul\":3631:3647   */\n      gt\n        /* \"#utility.yul\":3628:3734   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":3688:3689   */\n      0x00\n        /* \"#utility.yul\":3717:3719   */\n      dup1\n        /* \"#utility.yul\":3713:3715   */\n      dup2\n        /* \"#utility.yul\":3706:3720   */\n      revert\n        /* \"#utility.yul\":3628:3734   */\n    tag_481:\n        /* \"#utility.yul\":3761:3810   */\n      tag_482\n        /* \"#utility.yul\":3806:3809   */\n      dup14\n        /* \"#utility.yul\":3801:3803   */\n      dup11\n        /* \"#utility.yul\":3790:3798   */\n      dup4\n        /* \"#utility.yul\":3786:3788   */\n      dup8\n        /* \"#utility.yul\":3782:3799   */\n      add\n        /* \"#utility.yul\":3778:3804   */\n      add\n        /* \"#utility.yul\":3761:3810   */\n      tag_436\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3747:3811   */\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":3853:3864   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3840:3865   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3881:3897   */\n      dup7\n      dup3\n      gt\n        /* \"#utility.yul\":3878:3987   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":3939:3940   */\n      0x00\n        /* \"#utility.yul\":3969:3972   */\n      dup1\n        /* \"#utility.yul\":3964:3967   */\n      dup2\n        /* \"#utility.yul\":3957:3973   */\n      revert\n        /* \"#utility.yul\":3878:3987   */\n    tag_483:\n        /* \"#utility.yul\":4023:4072   */\n      tag_484\n        /* \"#utility.yul\":4068:4071   */\n      dup13\n        /* \"#utility.yul\":4063:4065   */\n      dup10\n        /* \"#utility.yul\":4052:4060   */\n      dup5\n        /* \"#utility.yul\":4048:4050   */\n      dup7\n        /* \"#utility.yul\":4044:4061   */\n      add\n        /* \"#utility.yul\":4040:4066   */\n      add\n        /* \"#utility.yul\":4023:4072   */\n      tag_436\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4007:4021   */\n      dup2\n      dup10\n      add\n        /* \"#utility.yul\":4000:4073   */\n      mstore\n        /* \"#utility.yul\":4086:4104   */\n      dup5\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":3106:3118   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4124:4136   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":3073:4146   */\n      jump(tag_475)\n    tag_477:\n        /* \"#utility.yul\":4164:4169   */\n      swap9\n        /* \"#utility.yul\":2493:4175   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4650   */\n    tag_27:\n        /* \"#utility.yul\":4309:4315   */\n      0x00\n        /* \"#utility.yul\":4317:4323   */\n      dup1\n        /* \"#utility.yul\":4370:4372   */\n      0x40\n        /* \"#utility.yul\":4358:4367   */\n      dup4\n        /* \"#utility.yul\":4349:4356   */\n      dup6\n        /* \"#utility.yul\":4345:4368   */\n      sub\n        /* \"#utility.yul\":4341:4373   */\n      slt\n        /* \"#utility.yul\":4338:4390   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":4386:4387   */\n      0x00\n        /* \"#utility.yul\":4383:4384   */\n      dup1\n        /* \"#utility.yul\":4376:4388   */\n      revert\n        /* \"#utility.yul\":4338:4390   */\n    tag_486:\n        /* \"#utility.yul\":4426:4435   */\n      dup3\n        /* \"#utility.yul\":4413:4436   */\n      calldataload\n        /* \"#utility.yul\":4459:4477   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4451:4457   */\n      dup2\n        /* \"#utility.yul\":4448:4478   */\n      gt\n        /* \"#utility.yul\":4445:4495   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":4491:4492   */\n      0x00\n        /* \"#utility.yul\":4488:4489   */\n      dup1\n        /* \"#utility.yul\":4481:4493   */\n      revert\n        /* \"#utility.yul\":4445:4495   */\n    tag_487:\n        /* \"#utility.yul\":4514:4593   */\n      tag_488\n        /* \"#utility.yul\":4585:4592   */\n      dup6\n        /* \"#utility.yul\":4576:4582   */\n      dup3\n        /* \"#utility.yul\":4565:4574   */\n      dup7\n        /* \"#utility.yul\":4561:4583   */\n      add\n        /* \"#utility.yul\":4514:4593   */\n      tag_437\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4504:4593   */\n      swap6\n        /* \"#utility.yul\":4640:4642   */\n      0x20\n        /* \"#utility.yul\":4625:4643   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":4612:4644   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4180:4650   */\n      jump\t// out\n        /* \"#utility.yul\":4655:5077   */\n    tag_438:\n        /* \"#utility.yul\":4696:4699   */\n      0x00\n        /* \"#utility.yul\":4734:4739   */\n      dup2\n        /* \"#utility.yul\":4728:4740   */\n      mload\n        /* \"#utility.yul\":4761:4767   */\n      dup1\n        /* \"#utility.yul\":4756:4759   */\n      dup5\n        /* \"#utility.yul\":4749:4768   */\n      mstore\n        /* \"#utility.yul\":4786:4787   */\n      0x00\n        /* \"#utility.yul\":4796:4958   */\n    tag_490:\n        /* \"#utility.yul\":4810:4816   */\n      dup2\n        /* \"#utility.yul\":4807:4808   */\n      dup2\n        /* \"#utility.yul\":4804:4817   */\n      lt\n        /* \"#utility.yul\":4796:4958   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":4872:4876   */\n      0x20\n        /* \"#utility.yul\":4928:4941   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":4924:4946   */\n      dup2\n      add\n        /* \"#utility.yul\":4918:4947   */\n      mload\n        /* \"#utility.yul\":4900:4911   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":4896:4916   */\n      dup3\n      add\n        /* \"#utility.yul\":4889:4948   */\n      mstore\n        /* \"#utility.yul\":4825:4837   */\n      add\n        /* \"#utility.yul\":4796:4958   */\n      jump(tag_490)\n    tag_492:\n        /* \"#utility.yul\":4800:4803   */\n      pop\n        /* \"#utility.yul\":5003:5004   */\n      0x00\n        /* \"#utility.yul\":4996:5000   */\n      0x20\n        /* \"#utility.yul\":4987:4993   */\n      dup3\n        /* \"#utility.yul\":4982:4985   */\n      dup7\n        /* \"#utility.yul\":4978:4994   */\n      add\n        /* \"#utility.yul\":4974:5001   */\n      add\n        /* \"#utility.yul\":4967:5005   */\n      mstore\n        /* \"#utility.yul\":5066:5070   */\n      0x20\n        /* \"#utility.yul\":5059:5061   */\n      0x1f\n        /* \"#utility.yul\":5055:5062   */\n      not\n        /* \"#utility.yul\":5050:5052   */\n      0x1f\n        /* \"#utility.yul\":5042:5048   */\n      dup4\n        /* \"#utility.yul\":5038:5053   */\n      add\n        /* \"#utility.yul\":5034:5063   */\n      and\n        /* \"#utility.yul\":5029:5032   */\n      dup6\n        /* \"#utility.yul\":5025:5064   */\n      add\n        /* \"#utility.yul\":5021:5071   */\n      add\n        /* \"#utility.yul\":5014:5071   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4655:5077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5082:5385   */\n    tag_30:\n        /* \"#utility.yul\":5255:5257   */\n      0x40\n        /* \"#utility.yul\":5244:5253   */\n      dup2\n        /* \"#utility.yul\":5237:5258   */\n      mstore\n        /* \"#utility.yul\":5218:5222   */\n      0x00\n        /* \"#utility.yul\":5275:5319   */\n      tag_494\n        /* \"#utility.yul\":5315:5317   */\n      0x40\n        /* \"#utility.yul\":5304:5313   */\n      dup4\n        /* \"#utility.yul\":5300:5318   */\n      add\n        /* \"#utility.yul\":5292:5298   */\n      dup6\n        /* \"#utility.yul\":5275:5319   */\n      tag_438\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5267:5319   */\n      swap1\n      pop\n        /* \"#utility.yul\":5367:5377   */\n      0xffffffff\n        /* \"#utility.yul\":5359:5365   */\n      dup4\n        /* \"#utility.yul\":5355:5378   */\n      and\n        /* \"#utility.yul\":5350:5352   */\n      0x20\n        /* \"#utility.yul\":5339:5348   */\n      dup4\n        /* \"#utility.yul\":5335:5353   */\n      add\n        /* \"#utility.yul\":5328:5379   */\n      mstore\n        /* \"#utility.yul\":5082:5385   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5390:5572   */\n    tag_33:\n        /* \"#utility.yul\":5447:5453   */\n      0x00\n        /* \"#utility.yul\":5500:5502   */\n      0x20\n        /* \"#utility.yul\":5488:5497   */\n      dup3\n        /* \"#utility.yul\":5479:5486   */\n      dup5\n        /* \"#utility.yul\":5475:5498   */\n      sub\n        /* \"#utility.yul\":5471:5503   */\n      slt\n        /* \"#utility.yul\":5468:5520   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":5516:5517   */\n      0x00\n        /* \"#utility.yul\":5513:5514   */\n      dup1\n        /* \"#utility.yul\":5506:5518   */\n      revert\n        /* \"#utility.yul\":5468:5520   */\n    tag_496:\n        /* \"#utility.yul\":5539:5566   */\n      tag_162\n        /* \"#utility.yul\":5556:5565   */\n      dup3\n        /* \"#utility.yul\":5539:5566   */\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":6008:6225   */\n    tag_44:\n        /* \"#utility.yul\":6155:6157   */\n      0x20\n        /* \"#utility.yul\":6144:6153   */\n      dup2\n        /* \"#utility.yul\":6137:6158   */\n      mstore\n        /* \"#utility.yul\":6118:6122   */\n      0x00\n        /* \"#utility.yul\":6175:6219   */\n      tag_162\n        /* \"#utility.yul\":6215:6217   */\n      0x20\n        /* \"#utility.yul\":6204:6213   */\n      dup4\n        /* \"#utility.yul\":6200:6218   */\n      add\n        /* \"#utility.yul\":6192:6198   */\n      dup5\n        /* \"#utility.yul\":6175:6219   */\n      tag_438\n      jump\t// in\n        /* \"#utility.yul\":6230:6632   */\n    tag_47:\n        /* \"#utility.yul\":6350:6356   */\n      0x00\n        /* \"#utility.yul\":6403:6405   */\n      0x20\n        /* \"#utility.yul\":6391:6400   */\n      dup3\n        /* \"#utility.yul\":6382:6389   */\n      dup5\n        /* \"#utility.yul\":6378:6401   */\n      sub\n        /* \"#utility.yul\":6374:6406   */\n      slt\n        /* \"#utility.yul\":6371:6423   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":6419:6420   */\n      0x00\n        /* \"#utility.yul\":6416:6417   */\n      dup1\n        /* \"#utility.yul\":6409:6421   */\n      revert\n        /* \"#utility.yul\":6371:6423   */\n    tag_503:\n        /* \"#utility.yul\":6459:6468   */\n      dup2\n        /* \"#utility.yul\":6446:6469   */\n      calldataload\n        /* \"#utility.yul\":6492:6510   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6484:6490   */\n      dup2\n        /* \"#utility.yul\":6481:6511   */\n      gt\n        /* \"#utility.yul\":6478:6528   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":6524:6525   */\n      0x00\n        /* \"#utility.yul\":6521:6522   */\n      dup1\n        /* \"#utility.yul\":6514:6526   */\n      revert\n        /* \"#utility.yul\":6478:6528   */\n    tag_504:\n        /* \"#utility.yul\":6547:6626   */\n      tag_200\n        /* \"#utility.yul\":6618:6625   */\n      dup5\n        /* \"#utility.yul\":6609:6615   */\n      dup3\n        /* \"#utility.yul\":6598:6607   */\n      dup6\n        /* \"#utility.yul\":6594:6616   */\n      add\n        /* \"#utility.yul\":6547:6626   */\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":7149:7529   */\n    tag_69:\n        /* \"#utility.yul\":7228:7229   */\n      0x01\n        /* \"#utility.yul\":7224:7236   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7271:7283   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7292:7353   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":7346:7350   */\n      0x7f\n        /* \"#utility.yul\":7338:7344   */\n      dup3\n        /* \"#utility.yul\":7334:7351   */\n      and\n        /* \"#utility.yul\":7324:7351   */\n      swap2\n      pop\n        /* \"#utility.yul\":7292:7353   */\n    tag_509:\n        /* \"#utility.yul\":7399:7401   */\n      0x20\n        /* \"#utility.yul\":7391:7397   */\n      dup3\n        /* \"#utility.yul\":7388:7402   */\n      lt\n        /* \"#utility.yul\":7368:7386   */\n      dup2\n        /* \"#utility.yul\":7365:7403   */\n      sub\n        /* \"#utility.yul\":7362:7523   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":7445:7455   */\n      0x4e487b71\n        /* \"#utility.yul\":7440:7443   */\n      0xe0\n        /* \"#utility.yul\":7436:7456   */\n      shl\n        /* \"#utility.yul\":7433:7434   */\n      0x00\n        /* \"#utility.yul\":7426:7457   */\n      mstore\n        /* \"#utility.yul\":7480:7484   */\n      0x22\n        /* \"#utility.yul\":7477:7478   */\n      0x04\n        /* \"#utility.yul\":7470:7485   */\n      mstore\n        /* \"#utility.yul\":7508:7512   */\n      0x24\n        /* \"#utility.yul\":7505:7506   */\n      0x00\n        /* \"#utility.yul\":7498:7513   */\n      revert\n        /* \"#utility.yul\":7362:7523   */\n    tag_510:\n      pop\n        /* \"#utility.yul\":7149:7529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7534:7661   */\n    tag_80:\n        /* \"#utility.yul\":7595:7605   */\n      0x4e487b71\n        /* \"#utility.yul\":7590:7593   */\n      0xe0\n        /* \"#utility.yul\":7586:7606   */\n      shl\n        /* \"#utility.yul\":7583:7584   */\n      0x00\n        /* \"#utility.yul\":7576:7607   */\n      mstore\n        /* \"#utility.yul\":7626:7630   */\n      0x32\n        /* \"#utility.yul\":7623:7624   */\n      0x04\n        /* \"#utility.yul\":7616:7631   */\n      mstore\n        /* \"#utility.yul\":7650:7654   */\n      0x24\n        /* \"#utility.yul\":7647:7648   */\n      0x00\n        /* \"#utility.yul\":7640:7655   */\n      revert\n        /* \"#utility.yul\":7666:7793   */\n    tag_439:\n        /* \"#utility.yul\":7727:7737   */\n      0x4e487b71\n        /* \"#utility.yul\":7722:7725   */\n      0xe0\n        /* \"#utility.yul\":7718:7738   */\n      shl\n        /* \"#utility.yul\":7715:7716   */\n      0x00\n        /* \"#utility.yul\":7708:7739   */\n      mstore\n        /* \"#utility.yul\":7758:7762   */\n      0x11\n        /* \"#utility.yul\":7755:7756   */\n      0x04\n        /* \"#utility.yul\":7748:7763   */\n      mstore\n        /* \"#utility.yul\":7782:7786   */\n      0x24\n        /* \"#utility.yul\":7779:7780   */\n      0x00\n        /* \"#utility.yul\":7772:7787   */\n      revert\n        /* \"#utility.yul\":7798:7933   */\n    tag_83:\n        /* \"#utility.yul\":7837:7840   */\n      0x00\n        /* \"#utility.yul\":7858:7875   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7855:7898   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":7878:7896   */\n      tag_515\n      tag_439\n      jump\t// in\n    tag_515:\n      pop\n        /* \"#utility.yul\":7925:7926   */\n      0x01\n        /* \"#utility.yul\":7914:7927   */\n      add\n      swap1\n        /* \"#utility.yul\":7798:7933   */\n      jump\t// out\n        /* \"#utility.yul\":7938:8235   */\n    tag_102:\n        /* \"#utility.yul\":8111:8113   */\n      0x40\n        /* \"#utility.yul\":8100:8109   */\n      dup2\n        /* \"#utility.yul\":8093:8114   */\n      mstore\n        /* \"#utility.yul\":8074:8078   */\n      0x00\n        /* \"#utility.yul\":8131:8175   */\n      tag_517\n        /* \"#utility.yul\":8171:8173   */\n      0x40\n        /* \"#utility.yul\":8160:8169   */\n      dup4\n        /* \"#utility.yul\":8156:8174   */\n      add\n        /* \"#utility.yul\":8148:8154   */\n      dup6\n        /* \"#utility.yul\":8131:8175   */\n      tag_438\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8123:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":8223:8227   */\n      0xff\n        /* \"#utility.yul\":8215:8221   */\n      dup4\n        /* \"#utility.yul\":8211:8228   */\n      and\n        /* \"#utility.yul\":8206:8208   */\n      0x20\n        /* \"#utility.yul\":8195:8204   */\n      dup4\n        /* \"#utility.yul\":8191:8209   */\n      add\n        /* \"#utility.yul\":8184:8229   */\n      mstore\n        /* \"#utility.yul\":7938:8235   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8536:8661   */\n    tag_129:\n        /* \"#utility.yul\":8601:8610   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8622:8632   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8619:8655   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8635:8653   */\n      tag_160\n      tag_439\n      jump\t// in\n        /* \"#utility.yul\":8666:8794   */\n    tag_131:\n        /* \"#utility.yul\":8733:8742   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8754:8765   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8751:8788   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":8768:8786   */\n      tag_160\n      tag_439\n      jump\t// in\n        /* \"#utility.yul\":9284:9411   */\n    tag_165:\n        /* \"#utility.yul\":9345:9355   */\n      0x4e487b71\n        /* \"#utility.yul\":9340:9343   */\n      0xe0\n        /* \"#utility.yul\":9336:9356   */\n      shl\n        /* \"#utility.yul\":9333:9334   */\n      0x00\n        /* \"#utility.yul\":9326:9357   */\n      mstore\n        /* \"#utility.yul\":9376:9380   */\n      0x01\n        /* \"#utility.yul\":9373:9374   */\n      0x04\n        /* \"#utility.yul\":9366:9381   */\n      mstore\n        /* \"#utility.yul\":9400:9404   */\n      0x24\n        /* \"#utility.yul\":9397:9398   */\n      0x00\n        /* \"#utility.yul\":9390:9405   */\n      revert\n        /* \"#utility.yul\":9416:9793   */\n    tag_177:\n        /* \"#utility.yul\":9609:9611   */\n      0x40\n        /* \"#utility.yul\":9598:9607   */\n      dup2\n        /* \"#utility.yul\":9591:9612   */\n      mstore\n        /* \"#utility.yul\":9572:9576   */\n      0x00\n        /* \"#utility.yul\":9635:9679   */\n      tag_529\n        /* \"#utility.yul\":9675:9677   */\n      0x40\n        /* \"#utility.yul\":9664:9673   */\n      dup4\n        /* \"#utility.yul\":9660:9678   */\n      add\n        /* \"#utility.yul\":9652:9658   */\n      dup6\n        /* \"#utility.yul\":9635:9679   */\n      tag_438\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":9727:9736   */\n      dup3\n        /* \"#utility.yul\":9719:9725   */\n      dup2\n        /* \"#utility.yul\":9715:9737   */\n      sub\n        /* \"#utility.yul\":9710:9712   */\n      0x20\n        /* \"#utility.yul\":9699:9708   */\n      dup5\n        /* \"#utility.yul\":9695:9713   */\n      add\n        /* \"#utility.yul\":9688:9738   */\n      mstore\n        /* \"#utility.yul\":9755:9787   */\n      tag_530\n        /* \"#utility.yul\":9780:9786   */\n      dup2\n        /* \"#utility.yul\":9772:9778   */\n      dup6\n        /* \"#utility.yul\":9755:9787   */\n      tag_438\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":9747:9787   */\n      swap6\n        /* \"#utility.yul\":9416:9793   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9798:9934   */\n    tag_253:\n        /* \"#utility.yul\":9837:9840   */\n      0x00\n        /* \"#utility.yul\":9865:9870   */\n      dup2\n        /* \"#utility.yul\":9855:9894   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":9874:9892   */\n      tag_533\n      tag_439\n      jump\t// in\n    tag_533:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":9910:9928   */\n      add\n      swap1\n        /* \"#utility.yul\":9798:9934   */\n      jump\t// out\n        /* \"#utility.yul\":9939:10476   */\n    tag_339:\n        /* \"#utility.yul\":10178:10180   */\n      0x60\n        /* \"#utility.yul\":10167:10176   */\n      dup2\n        /* \"#utility.yul\":10160:10181   */\n      mstore\n        /* \"#utility.yul\":10141:10145   */\n      0x00\n        /* \"#utility.yul\":10204:10248   */\n      tag_535\n        /* \"#utility.yul\":10244:10246   */\n      0x60\n        /* \"#utility.yul\":10233:10242   */\n      dup4\n        /* \"#utility.yul\":10229:10247   */\n      add\n        /* \"#utility.yul\":10221:10227   */\n      dup7\n        /* \"#utility.yul\":10204:10248   */\n      tag_438\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":10296:10305   */\n      dup3\n        /* \"#utility.yul\":10288:10294   */\n      dup2\n        /* \"#utility.yul\":10284:10306   */\n      sub\n        /* \"#utility.yul\":10279:10281   */\n      0x20\n        /* \"#utility.yul\":10268:10277   */\n      dup5\n        /* \"#utility.yul\":10264:10282   */\n      add\n        /* \"#utility.yul\":10257:10307   */\n      mstore\n        /* \"#utility.yul\":10330:10362   */\n      tag_536\n        /* \"#utility.yul\":10355:10361   */\n      dup2\n        /* \"#utility.yul\":10347:10353   */\n      dup7\n        /* \"#utility.yul\":10330:10362   */\n      tag_438\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10316:10362   */\n      swap1\n      pop\n        /* \"#utility.yul\":10410:10419   */\n      dup3\n        /* \"#utility.yul\":10402:10408   */\n      dup2\n        /* \"#utility.yul\":10398:10420   */\n      sub\n        /* \"#utility.yul\":10393:10395   */\n      0x40\n        /* \"#utility.yul\":10382:10391   */\n      dup5\n        /* \"#utility.yul\":10378:10396   */\n      add\n        /* \"#utility.yul\":10371:10421   */\n      mstore\n        /* \"#utility.yul\":10438:10470   */\n      tag_254\n        /* \"#utility.yul\":10463:10469   */\n      dup2\n        /* \"#utility.yul\":10455:10461   */\n      dup6\n        /* \"#utility.yul\":10438:10470   */\n      tag_438\n      jump\t// in\n        /* \"#utility.yul\":10481:10758   */\n    tag_343:\n        /* \"#utility.yul\":10548:10554   */\n      0x00\n        /* \"#utility.yul\":10601:10603   */\n      0x20\n        /* \"#utility.yul\":10589:10598   */\n      dup3\n        /* \"#utility.yul\":10580:10587   */\n      dup5\n        /* \"#utility.yul\":10576:10599   */\n      sub\n        /* \"#utility.yul\":10572:10604   */\n      slt\n        /* \"#utility.yul\":10569:10621   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":10617:10618   */\n      0x00\n        /* \"#utility.yul\":10614:10615   */\n      dup1\n        /* \"#utility.yul\":10607:10619   */\n      revert\n        /* \"#utility.yul\":10569:10621   */\n    tag_539:\n        /* \"#utility.yul\":10649:10658   */\n      dup2\n        /* \"#utility.yul\":10643:10659   */\n      mload\n        /* \"#utility.yul\":10702:10707   */\n      dup1\n        /* \"#utility.yul\":10695:10708   */\n      iszero\n        /* \"#utility.yul\":10688:10709   */\n      iszero\n        /* \"#utility.yul\":10681:10686   */\n      dup2\n        /* \"#utility.yul\":10678:10710   */\n      eq\n        /* \"#utility.yul\":10668:10728   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":10724:10725   */\n      0x00\n        /* \"#utility.yul\":10721:10722   */\n      dup1\n        /* \"#utility.yul\":10714:10726   */\n      revert\n        /* \"#utility.yul\":11115:11324   */\n    tag_397:\n        /* \"#utility.yul\":11147:11148   */\n      0x00\n        /* \"#utility.yul\":11173:11174   */\n      dup3\n        /* \"#utility.yul\":11163:11295   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":11217:11227   */\n      0x4e487b71\n        /* \"#utility.yul\":11212:11215   */\n      0xe0\n        /* \"#utility.yul\":11208:11228   */\n      shl\n        /* \"#utility.yul\":11205:11206   */\n      0x00\n        /* \"#utility.yul\":11198:11229   */\n      mstore\n        /* \"#utility.yul\":11252:11256   */\n      0x12\n        /* \"#utility.yul\":11249:11250   */\n      0x04\n        /* \"#utility.yul\":11242:11257   */\n      mstore\n        /* \"#utility.yul\":11280:11284   */\n      0x24\n        /* \"#utility.yul\":11277:11278   */\n      0x00\n        /* \"#utility.yul\":11270:11285   */\n      revert\n        /* \"#utility.yul\":11163:11295   */\n    tag_543:\n      pop\n        /* \"#utility.yul\":11309:11318   */\n      mod\n      swap1\n        /* \"#utility.yul\":11115:11324   */\n      jump\t// out\n        /* \"#utility.yul\":11329:11497   */\n    tag_420:\n        /* \"#utility.yul\":11402:11411   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":11433:11442   */\n      dup2\n      iszero\n        /* \"#utility.yul\":11450:11465   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":11444:11466   */\n      dup5\n      eq\n        /* \"#utility.yul\":11430:11467   */\n      or\n        /* \"#utility.yul\":11420:11491   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":11471:11489   */\n      tag_160\n      tag_439\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220d9f840df995898bea655c762bec971127e4007415650db190c0beed62620368764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1391": {
									"entryPoint": null,
									"id": 1391,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2240": {
									"entryPoint": null,
									"id": 2240,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes_memory_ptr_fromMemory": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_bytes_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_bytes_storage": {
									"entryPoint": 387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3772:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "236:951:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "246:12:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "256:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "250:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "303:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "305:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "305:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "305:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "278:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "287:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:23:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "299:2:8"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:32:8"
															},
															"nodeType": "YulIf",
															"src": "267:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "328:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "348:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "342:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "332:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "367:28:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "385:2:8",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "389:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "381:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "381:10:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "393:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "377:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:18:8"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "371:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "422:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "431:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "434:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "424:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "424:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "424:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "410:6:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "418:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:14:8"
															},
															"nodeType": "YulIf",
															"src": "404:34:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "447:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "461:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "472:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:22:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "451:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "527:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "536:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "539:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "529:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "529:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "529:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "506:2:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "510:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "502:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "502:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "517:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "498:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "498:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:35:8"
															},
															"nodeType": "YulIf",
															"src": "488:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "552:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "568:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "562:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:9:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "556:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "594:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "596:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "596:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "596:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "586:2:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "590:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "583:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:10:8"
															},
															"nodeType": "YulIf",
															"src": "580:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "625:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "639:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "635:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:7:8"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "629:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "651:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "671:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "665:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "655:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "683:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "705:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "729:2:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "733:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "725:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "725:13:8"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "740:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "721:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "721:22:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "745:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "717:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "717:31:8"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "750:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "713:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "713:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "701:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "687:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "815:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "772:10:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "784:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "769:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "792:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "804:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "789:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "766:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:46:8"
															},
															"nodeType": "YulIf",
															"src": "763:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "851:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "855:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "844:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "890:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "875:18:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "875:18:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "939:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "948:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "951:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "941:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "941:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "941:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "916:2:8"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "920:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:11:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "925:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "908:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:20:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "930:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "905:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:33:8"
															},
															"nodeType": "YulIf",
															"src": "902:53:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "964:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "973:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "968:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1029:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1058:6:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1066:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1054:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1054:14:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1070:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1050:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1050:23:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1089:2:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1093:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1085:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1085:10:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1097:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1081:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1081:19:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1075:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1075:26:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1043:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1043:59:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1043:59:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "994:1:8"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "997:2:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "991:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "991:9:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1001:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1003:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1012:1:8"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1015:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1008:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1008:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1003:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "987:3:8",
																"statements": []
															},
															"src": "983:129:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:8"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1144:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1132:15:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1149:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:24:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1154:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1121:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1165:16:8",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1175:6:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1165:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "202:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "213:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "225:6:8",
														"type": ""
													}
												],
												"src": "146:1041:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1247:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1257:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1271:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1274:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1267:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1267:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1288:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1318:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1314:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1314:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1292:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1365:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1367:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1381:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1389:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1377:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1377:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1367:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1345:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1338:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1338:26:8"
															},
															"nodeType": "YulIf",
															"src": "1335:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1455:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1483:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1488:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1479:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1479:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1469:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1469:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1523:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1513:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1513:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1513:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1551:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1541:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1541:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1541:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1411:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1434:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1442:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1431:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1431:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1408:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:38:8"
															},
															"nodeType": "YulIf",
															"src": "1405:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1227:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1236:6:8",
														"type": ""
													}
												],
												"src": "1192:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1632:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1649:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1652:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1642:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1642:14:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1642:14:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1665:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1673:9:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1665:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1615:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1623:4:8",
														"type": ""
													}
												],
												"src": "1577:120:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:464:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1815:425:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1829:11:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1839:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1833:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1860:2:8"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1864:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1853:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1853:17:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1853:17:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1883:31:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1905:2:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1895:9:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1895:19:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1887:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1927:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1950:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1960:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1967:10:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1979:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1963:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1963:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1956:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1956:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1946:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1946:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1931:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2021:23:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2023:19:8",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2038:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2023:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2003:10:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2015:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2000:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2000:20:8"
																		},
																		"nodeType": "YulIf",
																		"src": "1997:47:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2057:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2071:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2081:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2088:3:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2093:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2084:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2084:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2077:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2077:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2067:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:31:8"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2061:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2111:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2124:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2115:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2209:21:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2218:5:8"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2225:2:8"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2211:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2211:17:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2211:17:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2159:5:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2166:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2156:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2156:13:8"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2170:26:8",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2172:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2185:5:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2192:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2181:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2181:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2172:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2152:3:8",
																			"statements": []
																		},
																		"src": "2148:82:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1798:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1795:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:11:8"
															},
															"nodeType": "YulIf",
															"src": "1792:448:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1754:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1761:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1766:10:8",
														"type": ""
													}
												],
												"src": "1702:544:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2346:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2361:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2379:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2382:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2375:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2375:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2392:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2388:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2388:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2371:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2371:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2367:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2367:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2403:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2406:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2399:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2399:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2354:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2354:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2346:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2313:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2319:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2327:4:8",
														"type": ""
													}
												],
												"src": "2251:166:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2516:1254:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2526:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2540:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2530:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2593:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2595:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2595:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2565:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2581:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2585:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2577:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2577:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2589:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:30:8"
															},
															"nodeType": "YulIf",
															"src": "2559:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2667:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2705:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2699:5:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2699:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2673:25:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2673:38:8"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2713:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_bytes_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2624:42:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:96:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2624:96:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2729:18:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2746:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2733:9:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2756:23:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2775:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2760:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2788:24:8",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2801:11:8"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2788:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2858:655:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2872:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2891:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2903:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2899:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2899:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2887:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2887:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2876:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2920:48:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2963:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_bytes_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2934:28:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2934:34:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2924:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2981:10:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2985:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3068:172:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3093:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3111:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3116:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3107:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3107:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3101:5:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3101:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3086:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3086:42:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3086:42:8"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3145:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3159:6:8"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3167:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3155:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3155:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3145:6:8"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3186:40:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3203:9:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3214:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3199:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3199:27:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3186:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3015:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3018:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3012:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3012:14:8"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3027:28:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3029:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3038:1:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3041:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3034:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3034:19:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3029:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3008:3:8",
																					"statements": []
																				},
																				"src": "3004:236:8"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3288:166:8",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3306:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3333:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3338:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3329:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3329:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3323:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3323:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3310:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3373:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3385:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3412:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3415:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3408:3:8"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3408:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3424:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3404:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3404:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3434:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3430:3:8"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3430:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3400:3:8"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3400:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3396:3:8"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3396:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3381:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3381:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3366:6:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3366:74:8"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3366:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3259:7:8"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3268:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3256:2:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3256:19:8"
																				},
																				"nodeType": "YulIf",
																				"src": "3253:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3474:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3488:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3491:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3484:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3484:14:8"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3500:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3480:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3480:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3467:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3467:36:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3467:36:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2851:662:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2856:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3530:234:8",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3544:14:8",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3557:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3548:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3593:67:8",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3611:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3630:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3635:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3626:3:8"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3626:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3620:5:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3620:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3611:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3574:6:8"
																				},
																				"nodeType": "YulIf",
																				"src": "3571:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3680:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3739:5:8"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3746:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3686:52:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3686:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3673:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3673:81:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3673:81:8"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3522:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2831:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2839:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2828:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:14:8"
															},
															"nodeType": "YulSwitch",
															"src": "2821:943:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2501:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2507:3:8",
														"type": ""
													}
												],
												"src": "2422:1348:8"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001e9f38038062001e9f833981016040819052620000349162000072565b600180546001600160a01b031916331790556000620000548282620001d6565b5050620002a2565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008657600080fd5b82516001600160401b03808211156200009e57600080fd5b818501915085601f830112620000b357600080fd5b815181811115620000c857620000c86200005c565b604051601f8201601f19908116603f01168101908382118183101715620000f357620000f36200005c565b8160405282815288868487010111156200010c57600080fd5b600093505b8284101562000130578484018601518185018701529285019262000111565b600086848301015280965050505050505092915050565b600181811c908216806200015c57607f821691505b6020821081036200017d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d157600081815260208120601f850160051c81016020861015620001ac5750805b601f850160051c820191505b81811015620001cd57828155600101620001b8565b5050505b505050565b81516001600160401b03811115620001f257620001f26200005c565b6200020a8162000203845462000147565b8462000183565b602080601f831160018114620002425760008415620002295750858301515b600019600386901b1c1916600185901b178555620001cd565b600085815260208120601f198616915b82811015620002735788860151825594840194600190910190840162000252565b5085821015620002925787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611bed80620002b26000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806373cc48a61161006657806373cc48a6146100fd5780638da5cb5b1461013e57806398d35f2014610151578063bdf95fef14610166578063c327deef1461017957600080fd5b8063020ed8d31461009857806313af4035146100ad57806328e7677d146100c0578063440f3d42146100d3575b600080fd5b6100ab6100a63660046116ba565b6101a2565b005b6100ab6100bb3660046116f1565b610224565b6100ab6100ce3660046116ba565b61025d565b6100e66100e13660046118e8565b6102d7565b6040516100f4929190611973565b60405180910390f35b61012661010b36600461199b565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100f4565b600154610126906001600160a01b031681565b6101596103c9565b6040516100f491906119b6565b6100e66101743660046119c9565b610457565b61012661018736600461199b565b6002602052600090815260409020546001600160a01b031681565b6001546001600160a01b031633146101b957600080fd5b60ff821660008181526002602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527ff73c3c226af96b7f1ba666a21b3ceaf2be3ee6a365e3178fd9cd1eaae0075aa891015b60405180910390a15050565b6001546001600160a01b0316331461023b57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461027457600080fd5b60ff821660008181526003602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f2fcc274c3b72dd483ab201bfa87295e3817e8b9b10693219873b722ca1af00c79101610218565b6060600080600080546102e9906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610315906119fe565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905060005b85518110156103bf57600061039b87838151811061038c5761038c611a38565b6020026020010151848861046e565b61010081015160a090910151945092508190506103b781611a64565b91505061036c565b5091509250929050565b600080546103d6906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610402906119fe565b801561044f5780601f106104245761010080835404028352916020019161044f565b820191906000526020600020905b81548152906001019060200180831161043257829003601f168201915b505050505081565b6060600061046583426102d7565b91509150915091565b6104766115eb565b83516104819061057a565b90506000610493828360000151610674565b604083015190915060ff166104a9826000610786565b146104d85780826040015160405163e861b2bd60e01b81526004016104cf929190611a7d565b60405180910390fd5b6101208201819052608082015160009084900360030b12156105235760808201516040516353c27c3f60e11b815263ffffffff918216600482015290841660248201526044016104cf565b60a0820151600090840360030b12156105655760a0820151604051635ea081b560e11b815263ffffffff918216600482015290841660248201526044016104cf565b610571818387876107ec565b505b9392505050565b6105826115eb565b61058d82600061089d565b61ffff16815261059e8260026108c5565b60ff1660208201526105b18260036108c5565b60ff1660408201526105c48260046108e9565b63ffffffff90811660608301526105e09083906008906108e916565b63ffffffff90811660808301526105fc908390600c906108e916565b63ffffffff90811660a083015261061890839060109061089d16565b61ffff1660c082015261062c826012610913565b60e082018190525161066990610643906012611aa2565b8260e0015151601285516106579190611ab5565b6106619190611ab5565b849190610936565b610100820152919050565b60606000610681846109b8565b90505b8051516020820151101561077f57606081015161ffff166001146106c7576060810151604051634c52f98d60e11b815261ffff90911660048201526024016104cf565b81516000036106e0576106d9816109d0565b9150610731565b602081015181516106f0916109f1565b82511415806107135750805160208201518351610711928592600092610a4b565b155b156107315760405163cbceee6f60e01b815260040160405180910390fd5b8261ffff16816040015161ffff161461077157604080820151905163537fc54560e11b815261ffff918216600482015290841660248201526044016104cf565b61077a81610a6e565b610684565b5092915050565b6000805b8351831061079a5761079a611ac8565b60006107a685856108c5565b60ff1690506107b6816001611aa2565b6107c09085611aa2565b9350806000036107d057506107e3565b6107db600183611aa2565b91505061078a565b90505b92915050565b60e08301516107fc908590610b56565b6108205760e083015160405163eaafc59b60e01b81526104cf918691600401611ade565b600061082c8282610bb3565b9050602b61ffff16816040015161ffff16036108525761084d848483610bce565b610896565b603061ffff16816040015161ffff16036108715761084d848483610cbb565b60408082015190516361529e8760e01b815261ffff90911660048201526024016104cf565b5050505050565b81516000906108ad836002611aa2565b11156108b857600080fd5b50016002015161ffff1690565b60008282815181106108d9576108d9611a38565b016020015160f81c905092915050565b81516000906108f9836004611aa2565b111561090457600080fd5b50016004015163ffffffff1690565b6060600061092184846109f1565b905061092e848483610936565b949350505050565b82516060906109458385611aa2565b111561095057600080fd5b60008267ffffffffffffffff81111561096b5761096b61170e565b6040519080825280601f01601f191660200182016040528015610995576020820181803683370190505b509050602080820190868601016109ad828287610d83565b509095945050505050565b6109c0611641565b6107e68261010001516000610bb3565b602081015181516060916107e6916109e890826109f1565b84519190610936565b6000815b83518110610a0557610a05611ac8565b6000610a1185836108c5565b60ff169050610a21816001611aa2565b610a2b9083611aa2565b915080600003610a3b5750610a41565b506109f5565b61092e8382611ab5565b6000610a58848484610dd9565b610a63878785610dd9565b149695505050505050565b60c08101516020820181905281515111610a855750565b6000610a99826000015183602001516109f1565b8260200151610aa89190611aa2565b8251909150610ab7908261089d565b61ffff166040830152610acb600282611aa2565b8251909150610ada908261089d565b61ffff166060830152610aee600282611aa2565b8251909150610afd90826108e9565b63ffffffff166080830152610b13600482611aa2565b8251909150600090610b25908361089d565b61ffff169050610b36600283611aa2565b60a084018190529150610b498183611aa2565b60c0909301929092525050565b60008080610b648582610786565b90506000610b73856000610786565b90505b80821115610b9c57610b888684610dfd565b925081610b9481611b0c565b925050610b76565b610ba98684876000610e21565b9695505050505050565b610bbb611641565b82815260c081018290526107e681610a6e565b60208101516000610bde856109b8565b90505b80515160208201511015610c9b57604081015161ffff16603014610c245760408082015190516361529e8760e01b815261ffff90911660048201526024016104cf565b6000610c2f82610e56565b90506000610c4a6000835184610e729092919063ffffffff16565b9050610c5881838989610f10565b15610c8b57610c6d8760e00151868385611036565b15610c7b5750505050505050565b60c08501849052610c8b85610a6e565b5050610c9681610a6e565b610be1565b508360e001516040516306cde0f360e01b81526004016104cf91906119b6565b80515160208201511015610d64576000610cd4826109d0565b9050610ced8460e001518261117390919063ffffffff16565b610d12578360e0015181604051636b80573f60e11b81526004016104cf929190611ade565b6000610d1d83610e56565b90506000610d386000835184610e729092919063ffffffff16565b9050610d4681838888610f10565b15610d5357505050505050565b505050610d5f81610a6e565b610cbb565b8260e001516040516306cde0f360e01b81526004016104cf91906119b6565b60208110610dbb5781518352610d9a602084611aa2565b9250610da7602083611aa2565b9150610db4602082611ab5565b9050610d83565b905182516020929092036101000a6000190180199091169116179052565b8251600090610de88385611aa2565b1115610df357600080fd5b5091016020012090565b6000610e0983836108c5565b60ff16610e17836001611aa2565b6107e39190611aa2565b6000610e3a8383848651610e359190611ab5565b610dd9565b610e4c8686878951610e359190611ab5565b1495945050505050565b60a081015160c08201516060916107e6916109e8908290611ab5565b6040805160808101825260008082526020820181905291810191909152606080820152610eaa610ea3600085611aa2565b859061089d565b61ffff168152610ec5610ebe600285611aa2565b85906108c5565b60ff166020820152610edb610ebe600385611aa2565b60ff166040820152610f04610ef1600485611aa2565b610efc600485611ab5565b869190610936565b60608201529392505050565b6000846020015160ff16600314610f295750600061092e565b826020015160ff16856040015160ff1614610f465750600061092e565b6000610f5185611191565b90508360c0015161ffff168161ffff1614610f7057600091505061092e565b855161010016600003610f8757600091505061092e565b60408087015160ff166000908152600260205220546001600160a01b031680610fb55760009250505061092e565b8351602085015160405163de8f50a160e01b81526001600160a01b0384169263de8f50a192610fea928b929190600401611b23565b602060405180830381865afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190611b5c565b979650505050505050565b60008061104283611191565b90505b8451516020860151101561116757600061105e866109d0565b905061106a8188611173565b61108b578681604051636b80573f60e11b81526004016104cf929190611ade565b60a086015160c08701516000916110b0916110a7908290611ab5565b89519190610e72565b90508261ffff16816000015161ffff16146110cc575050611159565b856040015160ff16816020015160ff16146110e8575050611159565b60408051808201909152606081526000602082015261111586518a5161110e9190611aa2565b82906113b4565b50611120818a61142b565b5061112b818761142b565b5061114382604001518260000151846060015161144c565b1561115557600194505050505061092e565b5050505b61116285610a6e565b611045565b50600095945050505050565b6000815183511480156107e357506107e38360008460008751610a4b565b6000612000825111156111e65760405162461bcd60e51b815260206004820152601760248201527f4c6f6e67206b657973206e6f74207065726d697474656400000000000000000060448201526064016104cf565b60008060005b8451601f0181101561125b57600081602087010151905085518260200111156112215785518290036008026101000390811c901b5b7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff600882901c811694909401931691909101906020016111ec565b506010827fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c827dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff160191506010817fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c817dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff1601905080600883901b0191506020827fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c827bffffffff00000000ffffffff00000000ffffffff00000000ffffffff1601915060408277ffffffffffffffff0000000000000000ffffffffffffffff1916901c8277ffffffffffffffff0000000000000000ffffffffffffffff16019150608082901c826fffffffffffffffffffffffffffffffff16019150601082901c61ffff16820191508192505050919050565b6040805180820190915260608152600060208201526113d4602083611b7e565b156113fc576113e4602083611b7e565b6113ef906020611ab5565b6113f99083611aa2565b91505b60208084018390526040518085526000815290818401018181101561142057600080fd5b604052509192915050565b6040805180820190915260608152600060208201526107e3838384516114f8565b60ff83166000908152600360205260408120546001600160a01b031661147457506000610573565b60ff841660009081526003602052604090819020549051637bf41d7760e11b81526001600160a01b039091169063f7e83aee906114b79086908690600401611ade565b602060405180830381865afa1580156114d4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e9190611b5c565b604080518082019091526060815260006020820152825182111561151b57600080fd5b835151600061152a8483611aa2565b9050856020015181111561154c5761154c86611547836002611ba0565b6115ce565b855180518382016020019160009180851115611566578482525b505050602086015b602086106115a65780518252611585602083611aa2565b9150611592602082611aa2565b905061159f602087611ab5565b955061156e565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b81516115da83836113b4565b506115e5838261142b565b50505050565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082019290925260e08101829052610100810182905261012081019190915290565b6040518060e001604052806060815260200160008152602001600061ffff168152602001600061ffff168152602001600063ffffffff16815260200160008152602001600081525090565b803560ff8116811461169d57600080fd5b919050565b6001600160a01b03811681146116b757600080fd5b50565b600080604083850312156116cd57600080fd5b6116d68361168c565b915060208301356116e6816116a2565b809150509250929050565b60006020828403121561170357600080fd5b81356107e3816116a2565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156117475761174761170e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156117765761177661170e565b604052919050565b600082601f83011261178f57600080fd5b813567ffffffffffffffff8111156117a9576117a961170e565b6117bc601f8201601f191660200161174d565b8181528460208386010111156117d157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126117ff57600080fd5b8135602067ffffffffffffffff8083111561181c5761181c61170e565b8260051b61182b83820161174d565b938452858101830193838101908886111561184557600080fd5b84880192505b858310156118dc578235848111156118635760008081fd5b88016040818b03601f190181131561187b5760008081fd5b611883611724565b87830135878111156118955760008081fd5b6118a38d8a8387010161177e565b8252509082013590868211156118b95760008081fd5b6118c78c898486010161177e565b8189015284525050918401919084019061184b565b98975050505050505050565b600080604083850312156118fb57600080fd5b823567ffffffffffffffff81111561191257600080fd5b61191e858286016117ee565b95602094909401359450505050565b6000815180845260005b8181101561195357602081850181015186830182015201611937565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000611986604083018561192d565b905063ffffffff831660208301529392505050565b6000602082840312156119ad57600080fd5b6107e38261168c565b6020815260006107e3602083018461192d565b6000602082840312156119db57600080fd5b813567ffffffffffffffff8111156119f257600080fd5b61092e848285016117ee565b600181811c90821680611a1257607f821691505b602082108103611a3257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a7657611a76611a4e565b5060010190565b604081526000611a90604083018561192d565b905060ff831660208301529392505050565b808201808211156107e6576107e6611a4e565b818103818111156107e6576107e6611a4e565b634e487b7160e01b600052600160045260246000fd5b604081526000611af1604083018561192d565b8281036020840152611b03818561192d565b95945050505050565b600081611b1b57611b1b611a4e565b506000190190565b606081526000611b36606083018661192d565b8281036020840152611b48818661192d565b90508281036040840152610ba9818561192d565b600060208284031215611b6e57600080fd5b815180151581146107e357600080fd5b600082611b9b57634e487b7160e01b600052601260045260246000fd5b500690565b80820281158282048414176107e6576107e6611a4e56fea2646970667358221220d9f840df995898bea655c762bec971127e4007415650db190c0beed62620368764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E9F CODESIZE SUB DUP1 PUSH3 0x1E9F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x72 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x0 PUSH3 0x54 DUP3 DUP3 PUSH3 0x1D6 JUMP JUMPDEST POP POP PUSH3 0x2A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xC8 JUMPI PUSH3 0xC8 PUSH3 0x5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xF3 JUMPI PUSH3 0xF3 PUSH3 0x5C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x130 JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x111 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x15C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x17D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1AC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1CD JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B8 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F2 PUSH3 0x5C JUMP JUMPDEST PUSH3 0x20A DUP2 PUSH3 0x203 DUP5 SLOAD PUSH3 0x147 JUMP JUMPDEST DUP5 PUSH3 0x183 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x242 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x229 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x273 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x252 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x292 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1BED DUP1 PUSH3 0x2B2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73CC48A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x73CC48A6 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x98D35F20 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xBDF95FEF EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xC327DEEF EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20ED8D3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x28E7677D EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x440F3D42 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH2 0xAB PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x126 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xF73C3C226AF96B7F1BA666A21B3CEAF2BE3EE6A365E3178FD9CD1EAAE0075AA8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2FCC274C3B72DD483AB201BFA87295E3817E8B9B10693219873B722CA1AF00C7 SWAP2 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2E9 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x362 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x337 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x362 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x345 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 PUSH2 0x39B DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x38C JUMPI PUSH2 0x38C PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP9 PUSH2 0x46E JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD SWAP5 POP SWAP3 POP DUP2 SWAP1 POP PUSH2 0x3B7 DUP2 PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x36C JUMP JUMPDEST POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x3D6 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x402 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x424 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x432 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x465 DUP4 TIMESTAMP PUSH2 0x2D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x15EB JUMP JUMPDEST DUP4 MLOAD PUSH2 0x481 SWAP1 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x493 DUP3 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x4A9 DUP3 PUSH1 0x0 PUSH2 0x786 JUMP JUMPDEST EQ PUSH2 0x4D8 JUMPI DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xE861B2BD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP5 SWAP1 SUB PUSH1 0x3 SIGNEXTEND SLT ISZERO PUSH2 0x523 JUMPI PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x53C27C3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP5 SUB PUSH1 0x3 SIGNEXTEND SLT ISZERO PUSH2 0x565 JUMPI PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x5EA081B5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x571 DUP2 DUP4 DUP8 DUP8 PUSH2 0x7EC JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x582 PUSH2 0x15EB JUMP JUMPDEST PUSH2 0x58D DUP3 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND DUP2 MSTORE PUSH2 0x59E DUP3 PUSH1 0x2 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5B1 DUP3 PUSH1 0x3 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x5C4 DUP3 PUSH1 0x4 PUSH2 0x8E9 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5E0 SWAP1 DUP4 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x8E9 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5FC SWAP1 DUP4 SWAP1 PUSH1 0xC SWAP1 PUSH2 0x8E9 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x618 SWAP1 DUP4 SWAP1 PUSH1 0x10 SWAP1 PUSH2 0x89D AND JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x62C DUP3 PUSH1 0x12 PUSH2 0x913 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE MLOAD PUSH2 0x669 SWAP1 PUSH2 0x643 SWAP1 PUSH1 0x12 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD MLOAD MLOAD PUSH1 0x12 DUP6 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x681 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 MLOAD MLOAD PUSH1 0x20 DUP3 ADD MLOAD LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x1 EQ PUSH2 0x6C7 JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x4C52F98D PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CF JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x6E0 JUMPI PUSH2 0x6D9 DUP2 PUSH2 0x9D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x731 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x6F0 SWAP2 PUSH2 0x9F1 JUMP JUMPDEST DUP3 MLOAD EQ ISZERO DUP1 PUSH2 0x713 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD DUP4 MLOAD PUSH2 0x711 SWAP3 DUP6 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xA4B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCBCEEE6F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND EQ PUSH2 0x771 JUMPI PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x537FC545 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x77A DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP4 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 DUP6 DUP6 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x7B6 DUP2 PUSH1 0x1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x7C0 SWAP1 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7D0 JUMPI POP PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x7DB PUSH1 0x1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x78A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x7FC SWAP1 DUP6 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x820 JUMPI PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xEAAFC59B PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x4CF SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C DUP3 DUP3 PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2B PUSH2 0xFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND SUB PUSH2 0x852 JUMPI PUSH2 0x84D DUP5 DUP5 DUP4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND SUB PUSH2 0x871 JUMPI PUSH2 0x84D DUP5 DUP5 DUP4 PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x61529E87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x8AD DUP4 PUSH1 0x2 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADD PUSH1 0x2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8D9 JUMPI PUSH2 0x8D9 PUSH2 0x1A38 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x8F9 DUP4 PUSH1 0x4 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADD PUSH1 0x4 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x921 DUP5 DUP5 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x92E DUP5 DUP5 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x945 DUP4 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96B PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x995 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP7 DUP7 ADD ADD PUSH2 0x9AD DUP3 DUP3 DUP8 PUSH2 0xD83 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x7E6 DUP3 PUSH2 0x100 ADD MLOAD PUSH1 0x0 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x60 SWAP2 PUSH2 0x7E6 SWAP2 PUSH2 0x9E8 SWAP1 DUP3 PUSH2 0x9F1 JUMP JUMPDEST DUP5 MLOAD SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA05 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA11 DUP6 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xA21 DUP2 PUSH1 0x1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xA2B SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x0 SUB PUSH2 0xA3B JUMPI POP PUSH2 0xA41 JUMP JUMPDEST POP PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x92E DUP4 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP5 DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0xA63 DUP8 DUP8 DUP6 PUSH2 0xDD9 JUMP JUMPDEST EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD MLOAD GT PUSH2 0xA85 JUMPI POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x9F1 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH2 0xAB7 SWAP1 DUP3 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xACB PUSH1 0x2 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH2 0xADA SWAP1 DUP3 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xAEE PUSH1 0x2 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH2 0xAFD SWAP1 DUP3 PUSH2 0x8E9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xB13 PUSH1 0x4 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xB25 SWAP1 DUP4 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 POP PUSH2 0xB36 PUSH1 0x2 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH2 0xB49 DUP2 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xB64 DUP6 DUP3 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB73 DUP6 PUSH1 0x0 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB88 DUP7 DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0xB94 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 POP POP PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xBA9 DUP7 DUP5 DUP8 PUSH1 0x0 PUSH2 0xE21 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBBB PUSH2 0x1641 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7E6 DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 PUSH2 0xBDE DUP6 PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 MLOAD MLOAD PUSH1 0x20 DUP3 ADD MLOAD LT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x30 EQ PUSH2 0xC24 JUMPI PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x61529E87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4A PUSH1 0x0 DUP4 MLOAD DUP5 PUSH2 0xE72 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC58 DUP2 DUP4 DUP10 DUP10 PUSH2 0xF10 JUMP JUMPDEST ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC6D DUP8 PUSH1 0xE0 ADD MLOAD DUP7 DUP4 DUP6 PUSH2 0x1036 JUMP JUMPDEST ISZERO PUSH2 0xC7B JUMPI POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD DUP5 SWAP1 MSTORE PUSH2 0xC8B DUP6 PUSH2 0xA6E JUMP JUMPDEST POP POP PUSH2 0xC96 DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST POP DUP4 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6CDE0F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST DUP1 MLOAD MLOAD PUSH1 0x20 DUP3 ADD MLOAD LT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 PUSH2 0xCD4 DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCED DUP5 PUSH1 0xE0 ADD MLOAD DUP3 PUSH2 0x1173 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD12 JUMPI DUP4 PUSH1 0xE0 ADD MLOAD DUP2 PUSH1 0x40 MLOAD PUSH4 0x6B80573F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD38 PUSH1 0x0 DUP4 MLOAD DUP5 PUSH2 0xE72 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD46 DUP2 DUP4 DUP9 DUP9 PUSH2 0xF10 JUMP JUMPDEST ISZERO PUSH2 0xD53 JUMPI POP POP POP POP POP POP JUMP JUMPDEST POP POP POP PUSH2 0xD5F DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xCBB JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6CDE0F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xDBB JUMPI DUP2 MLOAD DUP4 MSTORE PUSH2 0xD9A PUSH1 0x20 DUP5 PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP PUSH2 0xDA7 PUSH1 0x20 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB4 PUSH1 0x20 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP PUSH2 0xD83 JUMP JUMPDEST SWAP1 MLOAD DUP3 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP2 AND OR SWAP1 MSTORE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xDE8 DUP4 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 ADD PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 DUP4 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xE17 DUP4 PUSH1 0x1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3A DUP4 DUP4 DUP5 DUP7 MLOAD PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0xE4C DUP7 DUP7 DUP8 DUP10 MLOAD PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x60 SWAP2 PUSH2 0x7E6 SWAP2 PUSH2 0x9E8 SWAP1 DUP3 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH2 0xEAA PUSH2 0xEA3 PUSH1 0x0 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND DUP2 MSTORE PUSH2 0xEC5 PUSH2 0xEBE PUSH1 0x2 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEDB PUSH2 0xEBE PUSH1 0x3 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xF04 PUSH2 0xEF1 PUSH1 0x4 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xEFC PUSH1 0x4 DUP6 PUSH2 0x1AB5 JUMP JUMPDEST DUP7 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0xF29 JUMPI POP PUSH1 0x0 PUSH2 0x92E JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND EQ PUSH2 0xF46 JUMPI POP PUSH1 0x0 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF51 DUP6 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND EQ PUSH2 0xF70 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x92E JUMP JUMPDEST DUP6 MLOAD PUSH2 0x100 AND PUSH1 0x0 SUB PUSH2 0xF87 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0xFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xFB5 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x92E JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xDE8F50A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 PUSH4 0xDE8F50A1 SWAP3 PUSH2 0xFEA SWAP3 DUP12 SWAP3 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102B SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1042 DUP4 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 MLOAD MLOAD PUSH1 0x20 DUP7 ADD MLOAD LT ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 PUSH2 0x105E DUP7 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x106A DUP2 DUP9 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x108B JUMPI DUP7 DUP2 PUSH1 0x40 MLOAD PUSH4 0x6B80573F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x10B0 SWAP2 PUSH2 0x10A7 SWAP1 DUP3 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST DUP10 MLOAD SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND EQ PUSH2 0x10CC JUMPI POP POP PUSH2 0x1159 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND EQ PUSH2 0x10E8 JUMPI POP POP PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1115 DUP7 MLOAD DUP11 MLOAD PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST POP PUSH2 0x1120 DUP2 DUP11 PUSH2 0x142B JUMP JUMPDEST POP PUSH2 0x112B DUP2 DUP8 PUSH2 0x142B JUMP JUMPDEST POP PUSH2 0x1143 DUP3 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x144C JUMP JUMPDEST ISZERO PUSH2 0x1155 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x92E JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0x1162 DUP6 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x7E3 JUMPI POP PUSH2 0x7E3 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP8 MLOAD PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP3 MLOAD GT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F6E67206B657973206E6F74207065726D6974746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD PUSH1 0x1F ADD DUP2 LT ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP2 PUSH1 0x20 DUP8 ADD ADD MLOAD SWAP1 POP DUP6 MLOAD DUP3 PUSH1 0x20 ADD GT ISZERO PUSH2 0x1221 JUMPI DUP6 MLOAD DUP3 SWAP1 SUB PUSH1 0x8 MUL PUSH2 0x100 SUB SWAP1 DUP2 SHR SWAP1 SHL JUMPDEST PUSH31 0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF PUSH1 0x8 DUP3 SWAP1 SHR DUP2 AND SWAP5 SWAP1 SWAP5 ADD SWAP4 AND SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x11EC JUMP JUMPDEST POP PUSH1 0x10 DUP3 PUSH32 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000 AND SWAP1 SHR DUP3 PUSH30 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF AND ADD SWAP2 POP PUSH1 0x10 DUP2 PUSH32 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000 AND SWAP1 SHR DUP2 PUSH30 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF AND ADD SWAP1 POP DUP1 PUSH1 0x8 DUP4 SWAP1 SHL ADD SWAP2 POP PUSH1 0x20 DUP3 PUSH32 0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000 AND SWAP1 SHR DUP3 PUSH28 0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF AND ADD SWAP2 POP PUSH1 0x40 DUP3 PUSH24 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF NOT AND SWAP1 SHR DUP3 PUSH24 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND ADD SWAP2 POP PUSH1 0x80 DUP3 SWAP1 SHR DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADD SWAP2 POP PUSH1 0x10 DUP3 SWAP1 SHR PUSH2 0xFFFF AND DUP3 ADD SWAP2 POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x13D4 PUSH1 0x20 DUP4 PUSH2 0x1B7E JUMP JUMPDEST ISZERO PUSH2 0x13FC JUMPI PUSH2 0x13E4 PUSH1 0x20 DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x13EF SWAP1 PUSH1 0x20 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x13F9 SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 DUP5 ADD ADD DUP2 DUP2 LT ISZERO PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7E3 DUP4 DUP4 DUP5 MLOAD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1474 JUMPI POP PUSH1 0x0 PUSH2 0x573 JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x7BF41D77 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF7E83AEE SWAP1 PUSH2 0x14B7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD MLOAD PUSH1 0x0 PUSH2 0x152A DUP5 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 ADD MLOAD DUP2 GT ISZERO PUSH2 0x154C JUMPI PUSH2 0x154C DUP7 PUSH2 0x1547 DUP4 PUSH1 0x2 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x15CE JUMP JUMPDEST DUP6 MLOAD DUP1 MLOAD DUP4 DUP3 ADD PUSH1 0x20 ADD SWAP2 PUSH1 0x0 SWAP2 DUP1 DUP6 GT ISZERO PUSH2 0x1566 JUMPI DUP5 DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP7 ADD JUMPDEST PUSH1 0x20 DUP7 LT PUSH2 0x15A6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1585 PUSH1 0x20 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1592 PUSH1 0x20 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x159F PUSH1 0x20 DUP8 PUSH2 0x1AB5 JUMP JUMPDEST SWAP6 POP PUSH2 0x156E JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP9 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP5 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x15DA DUP4 DUP4 PUSH2 0x13B4 JUMP JUMPDEST POP PUSH2 0x15E5 DUP4 DUP3 PUSH2 0x142B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x169D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D6 DUP4 PUSH2 0x168C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16E6 DUP2 PUSH2 0x16A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E3 DUP2 PUSH2 0x16A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1747 JUMPI PUSH2 0x1747 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1776 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x178F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A9 JUMPI PUSH2 0x17A9 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x17BC PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x174D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x17D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x170E JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH2 0x182B DUP4 DUP3 ADD PUSH2 0x174D JUMP JUMPDEST SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP1 DUP9 DUP7 GT ISZERO PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP9 ADD SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x18DC JUMPI DUP3 CALLDATALOAD DUP5 DUP2 GT ISZERO PUSH2 0x1863 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP9 ADD PUSH1 0x40 DUP2 DUP12 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x187B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1883 PUSH2 0x1724 JUMP JUMPDEST DUP8 DUP4 ADD CALLDATALOAD DUP8 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x18A3 DUP14 DUP11 DUP4 DUP8 ADD ADD PUSH2 0x177E JUMP JUMPDEST DUP3 MSTORE POP SWAP1 DUP3 ADD CALLDATALOAD SWAP1 DUP7 DUP3 GT ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x18C7 DUP13 DUP10 DUP5 DUP7 ADD ADD PUSH2 0x177E JUMP JUMPDEST DUP2 DUP10 ADD MSTORE DUP5 MSTORE POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x184B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191E DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1953 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1986 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E3 DUP3 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E DUP5 DUP3 DUP6 ADD PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A76 JUMPI PUSH2 0x1A76 PUSH2 0x1A4E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A90 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E6 PUSH2 0x1A4E JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E6 PUSH2 0x1A4E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1AF1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x192D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B03 DUP2 DUP6 PUSH2 0x192D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B1B JUMPI PUSH2 0x1B1B PUSH2 0x1A4E JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B36 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x192D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B48 DUP2 DUP7 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xBA9 DUP2 DUP6 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7E6 JUMPI PUSH2 0x7E6 PUSH2 0x1A4E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xF8 BLOCKHASH 0xDF SWAP10 PC SWAP9 0xBE 0xA6 SSTORE 0xC7 PUSH3 0xBEC971 SLT PUSH31 0x4007415650DB190C0BEED62620368764736F6C634300081100330000000000 ",
							"sourceMap": "928:14952:3:-:0;;;2015:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;295:5:4;:18;;-1:-1:-1;;;;;;295:18:4;303:10;295:18;;;:5;2182:18:3;2192:8;295:5:4;2182:18:3;:::i;:::-;;2015:193;928:14952;;14:127:8;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1041;225:6;256:2;299;287:9;278:7;274:23;270:32;267:52;;;315:1;312;305:12;267:52;342:16;;-1:-1:-1;;;;;407:14:8;;;404:34;;;434:1;431;424:12;404:34;472:6;461:9;457:22;447:32;;517:7;510:4;506:2;502:13;498:27;488:55;;539:1;536;529:12;488:55;568:2;562:9;590:2;586;583:10;580:36;;;596:18;;:::i;:::-;671:2;665:9;639:2;725:13;;-1:-1:-1;;721:22:8;;;745:2;717:31;713:40;701:53;;;769:18;;;789:22;;;766:46;763:72;;;815:18;;:::i;:::-;855:10;851:2;844:22;890:2;882:6;875:18;930:7;925:2;920;916;912:11;908:20;905:33;902:53;;;951:1;948;941:12;902:53;973:1;964:10;;983:129;997:2;994:1;991:9;983:129;;;1085:10;;;1081:19;;1075:26;1054:14;;;1050:23;;1043:59;1008:10;;;;983:129;;;1154:1;1149:2;1144;1136:6;1132:15;1128:24;1121:35;1175:6;1165:16;;;;;;;;146:1041;;;;:::o;1192:380::-;1271:1;1267:12;;;;1314;;;1335:61;;1389:4;1381:6;1377:17;1367:27;;1335:61;1442:2;1434:6;1431:14;1411:18;1408:38;1405:161;;1488:10;1483:3;1479:20;1476:1;1469:31;1523:4;1520:1;1513:15;1551:4;1548:1;1541:15;1405:161;;1192:380;;;:::o;1702:544::-;1803:2;1798:3;1795:11;1792:448;;;1839:1;1864:5;1860:2;1853:17;1909:4;1905:2;1895:19;1979:2;1967:10;1963:19;1960:1;1956:27;1950:4;1946:38;2015:4;2003:10;2000:20;1997:47;;;-1:-1:-1;2038:4:8;1997:47;2093:2;2088:3;2084:12;2081:1;2077:20;2071:4;2067:31;2057:41;;2148:82;2166:2;2159:5;2156:13;2148:82;;;2211:17;;;2192:1;2181:13;2148:82;;;2152:3;;;1792:448;1702:544;;;:::o;2422:1348::-;2540:10;;-1:-1:-1;;;;;2562:30:8;;2559:56;;;2595:18;;:::i;:::-;2624:96;2713:6;2673:38;2705:4;2699:11;2673:38;:::i;:::-;2667:4;2624:96;:::i;:::-;2775:4;;2839:2;2828:14;;2856:1;2851:662;;;;3557:1;3574:6;3571:89;;;-1:-1:-1;3626:19:8;;;3620:26;3571:89;-1:-1:-1;;2379:1:8;2375:11;;;2371:24;2367:29;2357:40;2403:1;2399:11;;;2354:57;3673:81;;2821:943;;2851:662;1649:1;1642:14;;;1686:4;1673:18;;-1:-1:-1;;2887:20:8;;;3004:236;3018:7;3015:1;3012:14;3004:236;;;3107:19;;;3101:26;3086:42;;3199:27;;;;3167:1;3155:14;;;;3034:19;;3004:236;;;3008:3;3268:6;3259:7;3256:19;3253:201;;;3329:19;;;3323:26;-1:-1:-1;;3412:1:8;3408:14;;;3424:3;3404:24;3400:37;3396:42;3381:58;3366:74;;3253:201;-1:-1:-1;;;;;3500:1:8;3484:14;;;3480:22;3467:36;;-1:-1:-1;2422:1348:8:o;:::-;928:14952:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@algorithms_1375": {
									"entryPoint": null,
									"id": 1375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@anchors_1243": {
									"entryPoint": 969,
									"id": 1243,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@append_200": {
									"entryPoint": 5368,
									"id": 200,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@append_220": {
									"entryPoint": 5163,
									"id": 220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@computeKeytag_3350": {
									"entryPoint": 4497,
									"id": 3350,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@digests_1380": {
									"entryPoint": null,
									"id": 1380,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@done_2607": {
									"entryPoint": null,
									"id": 2607,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@equals_670": {
									"entryPoint": 2635,
									"id": 670,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@equals_702": {
									"entryPoint": 3617,
									"id": 702,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@equals_756": {
									"entryPoint": 4467,
									"id": 756,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@init_45": {
									"entryPoint": 5044,
									"id": 45,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isSubdomainOf_2968": {
									"entryPoint": 2902,
									"id": 2968,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@iterateRRs_2590": {
									"entryPoint": 2995,
									"id": 2590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@keccak_450": {
									"entryPoint": 3545,
									"id": 450,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@labelCount_2384": {
									"entryPoint": 1926,
									"id": 2384,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@memcpy_923": {
									"entryPoint": 3459,
									"id": 923,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@nameLength_2310": {
									"entryPoint": 2545,
									"id": 2310,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_2734": {
									"entryPoint": 2512,
									"id": 2734,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@next_2711": {
									"entryPoint": 2670,
									"id": 2711,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_2220": {
									"entryPoint": null,
									"id": 2220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@progress_3166": {
									"entryPoint": 3581,
									"id": 3166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rdata_2756": {
									"entryPoint": 3670,
									"id": 2756,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readDNSKEY_2837": {
									"entryPoint": 3698,
									"id": 2837,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readDS_2918": {
									"entryPoint": null,
									"id": 2918,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readName_2334": {
									"entryPoint": 2323,
									"id": 2334,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readSignedSet_2531": {
									"entryPoint": 1402,
									"id": 2531,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readUint16_793": {
									"entryPoint": 2205,
									"id": 793,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readUint32_813": {
									"entryPoint": 2281,
									"id": 813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readUint8_773": {
									"entryPoint": 2245,
									"id": 773,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@resize_98": {
									"entryPoint": 5582,
									"id": 98,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@rrs_2547": {
									"entryPoint": 2488,
									"id": 2547,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@serialNumberGte_3147": {
									"entryPoint": null,
									"id": 3147,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@setAlgorithm_1417": {
									"entryPoint": 418,
									"id": 1417,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setDigest_1443": {
									"entryPoint": 605,
									"id": 1443,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setOwner_2252": {
									"entryPoint": 548,
									"id": 2252,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@substring_966": {
									"entryPoint": 2358,
									"id": 966,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@validateRRs_1718": {
									"entryPoint": 1652,
									"id": 1718,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@validateSignedSet_1625": {
									"entryPoint": 1134,
									"id": 1625,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verifyDSHash_2214": {
									"entryPoint": 5196,
									"id": 2214,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@verifyKeyWithDS_2178": {
									"entryPoint": 4150,
									"id": 2178,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@verifyRRSet_1463": {
									"entryPoint": 1111,
									"id": 1463,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@verifyRRSet_1523": {
									"entryPoint": 727,
									"id": 1523,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@verifySignatureWithKey_1952": {
									"entryPoint": 3856,
									"id": 1952,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@verifySignature_1787": {
									"entryPoint": 2028,
									"id": 1787,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@verifyWithDS_2053": {
									"entryPoint": 3022,
									"id": 2053,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyWithKnownKey_1863": {
									"entryPoint": 3259,
									"id": 1863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_array_struct_RRSetWithSignature_dyn": {
									"entryPoint": 6126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptrt_uint256": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8t_contract$_Algorithm_$3367": {
									"entryPoint": 5818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8t_contract$_Digest_$3381": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint8": {
									"entryPoint": 5772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6878,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_uint32__to_t_bytes_memory_ptr_t_uint32__fromStack_reversed": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Algorithm_$3367__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Digest_$3381__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e23270aecf7702fd4b1bd212912c277507361dc8248ebed5ad0286c9b051069__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_1338": {
									"entryPoint": 5924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x01": {
									"entryPoint": 6856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_contract_Algorithm": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11499:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "61:109:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "71:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "93:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "80:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "80:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "71:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "148:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "157:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "160:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "150:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "150:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "150:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "122:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "133:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "140:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "129:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "129:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "119:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "119:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "112:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "112:35:8"
															},
															"nodeType": "YulIf",
															"src": "109:55:8"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "51:5:8",
														"type": ""
													}
												],
												"src": "14:156:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "231:86:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "295:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "304:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "307:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "297:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "297:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "297:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "254:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "265:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "280:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "285:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "276:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "276:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "289:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "272:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "272:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "261:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "261:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "251:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "251:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "244:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "244:50:8"
															},
															"nodeType": "YulIf",
															"src": "241:70:8"
														}
													]
												},
												"name": "validator_revert_contract_Algorithm",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "220:5:8",
														"type": ""
													}
												],
												"src": "175:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "425:243:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "471:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "480:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "483:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "473:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "473:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "446:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "455:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "442:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "467:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "438:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:32:8"
															},
															"nodeType": "YulIf",
															"src": "435:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "496:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "523:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "506:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:27:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "542:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "572:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "583:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "568:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "555:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "546:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "632:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Algorithm",
																	"nodeType": "YulIdentifier",
																	"src": "596:35:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "596:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "647:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "657:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "647:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_contract$_Algorithm_$3367",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "383:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "394:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "406:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "414:6:8",
														"type": ""
													}
												],
												"src": "322:346:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "743:188:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "789:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "798:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "801:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "791:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "791:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "791:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "764:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "773:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "760:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "760:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "785:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:32:8"
															},
															"nodeType": "YulIf",
															"src": "753:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "814:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "840:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "827:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "818:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "895:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Algorithm",
																	"nodeType": "YulIdentifier",
																	"src": "859:35:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "859:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "859:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "910:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "920:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "910:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "709:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "720:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "732:6:8",
														"type": ""
													}
												],
												"src": "673:258:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1036:243:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1082:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1091:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1094:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1084:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1084:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1084:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1057:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1066:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1053:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1078:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1049:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:32:8"
															},
															"nodeType": "YulIf",
															"src": "1046:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1107:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1134:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1117:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:27:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1153:45:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1183:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1194:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1166:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:32:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1157:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1243:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_contract_Algorithm",
																	"nodeType": "YulIdentifier",
																	"src": "1207:35:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:42:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1207:42:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1258:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1268:5:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_contract$_Digest_$3381",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "994:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1005:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1017:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"src": "936:343:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1340:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1336:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1336:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1326:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1376:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1397:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1400:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1390:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1390:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1284:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:211:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1472:21:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1488:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1482:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1482:11:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1524:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1532:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:17:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1506:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1612:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1614:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1614:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1614:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1555:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1567:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1552:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1552:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1591:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1603:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1588:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1588:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1549:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1549:62:8"
															},
															"nodeType": "YulIf",
															"src": "1546:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:4:8",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1656:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1643:24:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1643:24:8"
														}
													]
												},
												"name": "allocate_memory_1338",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1451:6:8",
														"type": ""
													}
												],
												"src": "1416:257:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1723:230:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1733:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1743:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1761:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1799:4:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1805:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1795:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1795:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1814:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1810:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1810:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1779:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1779:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1765:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1894:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1896:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1896:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1837:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1849:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1834:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1834:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1873:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1870:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1870:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1831:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:62:8"
															},
															"nodeType": "YulIf",
															"src": "1828:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1936:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1925:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1925:22:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1703:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1712:6:8",
														"type": ""
													}
												],
												"src": "1678:275:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2010:478:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2059:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2068:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2071:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2061:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2061:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2061:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2038:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2046:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2053:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2030:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2023:35:8"
															},
															"nodeType": "YulIf",
															"src": "2020:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2084:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2107:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2094:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:20:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2088:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2153:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2155:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2155:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2129:2:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2126:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2126:26:8"
															},
															"nodeType": "YulIf",
															"src": "2123:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2184:70:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2227:2:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2231:4:8",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2223:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2223:13:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2242:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2238:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2238:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2219:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2219:27:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2248:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2215:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2215:38:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2199:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:55:8"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2188:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2270:7:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2279:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:19:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2330:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2339:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2342:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2332:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2332:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2332:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2305:6:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2313:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2301:15:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2318:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:26:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2325:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2294:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:35:8"
															},
															"nodeType": "YulIf",
															"src": "2291:55:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2372:7:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2368:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2392:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2400:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:17:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2407:2:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2355:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2355:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2355:55:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2434:7:8"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2443:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2430:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2430:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2448:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2426:27:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2419:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2419:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2466:16:8",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2475:7:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2466:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1984:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1992:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2000:5:8",
														"type": ""
													}
												],
												"src": "1958:530:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2575:1600:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2624:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2633:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2626:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2626:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2603:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2611:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2599:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2599:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2618:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2588:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:35:8"
															},
															"nodeType": "YulIf",
															"src": "2585:55:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2649:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2672:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2659:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:20:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2653:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2688:14:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2698:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2692:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2711:28:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2721:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2715:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2762:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2764:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2764:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2764:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2754:2:8"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2758:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2751:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2751:10:8"
															},
															"nodeType": "YulIf",
															"src": "2748:36:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2793:20:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:1:8",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2810:2:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2803:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:10:8"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2797:2:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2822:39:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2853:2:8"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2857:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:11:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2833:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:28:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2826:3:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2870:16:8",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2883:3:8"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "2874:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2902:3:8"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2907:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2895:15:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2919:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2935:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:12:8"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2919:3:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2947:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2969:6:8"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "2977:2:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2965:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:15:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2982:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2961:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2961:24:8"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2951:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3013:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3022:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3025:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3015:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3015:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3015:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3000:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3008:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2997:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:15:8"
															},
															"nodeType": "YulIf",
															"src": "2994:35:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3038:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3053:6:8"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3061:2:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3049:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:15:8"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3042:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3129:1017:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3143:36:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3175:3:8"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "3162:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3162:17:8"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "3147:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3227:74:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "3245:11:8",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3255:1:8",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "3249:2:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "3280:2:8"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "3284:2:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "3273:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3273:14:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3273:14:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "3198:11:8"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "3211:2:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3195:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3195:19:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3192:109:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3314:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "3328:6:8"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "3336:11:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3324:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3324:24:8"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "3318:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3361:14:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3371:4:8",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "3365:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3439:74:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "3457:11:8",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3467:1:8",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_8",
																							"nodeType": "YulTypedName",
																							"src": "3461:2:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_8",
																								"nodeType": "YulIdentifier",
																								"src": "3492:2:8"
																							},
																							{
																								"name": "_8",
																								"nodeType": "YulIdentifier",
																								"src": "3496:2:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "3485:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3485:14:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3485:14:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "end",
																									"nodeType": "YulIdentifier",
																									"src": "3403:3:8"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "3408:2:8"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3399:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3399:12:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3417:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3413:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3413:7:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3395:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3395:26:8"
																				},
																				{
																					"name": "_7",
																					"nodeType": "YulIdentifier",
																					"src": "3423:2:8"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nodeType": "YulIdentifier",
																				"src": "3391:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3391:35:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3388:125:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3526:35:8",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_1338",
																				"nodeType": "YulIdentifier",
																				"src": "3539:20:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3539:22:8"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "3530:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3574:41:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "3607:2:8"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "3611:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3603:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3603:11:8"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "3590:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3590:25:8"
																		},
																		"variables": [
																			{
																				"name": "offset_1",
																				"nodeType": "YulTypedName",
																				"src": "3578:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3660:74:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "3678:11:8",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3688:1:8",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_9",
																							"nodeType": "YulTypedName",
																							"src": "3682:2:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_9",
																								"nodeType": "YulIdentifier",
																								"src": "3713:2:8"
																							},
																							{
																								"name": "_9",
																								"nodeType": "YulIdentifier",
																								"src": "3717:2:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "3706:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3706:14:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3706:14:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "offset_1",
																					"nodeType": "YulIdentifier",
																					"src": "3634:8:8"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "3644:2:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3631:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3631:16:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3628:106:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3754:5:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_6",
																											"nodeType": "YulIdentifier",
																											"src": "3786:2:8"
																										},
																										{
																											"name": "offset_1",
																											"nodeType": "YulIdentifier",
																											"src": "3790:8:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "3782:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3782:17:8"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "3801:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3778:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3778:26:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "3806:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "3761:16:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3761:49:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3747:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3747:64:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:64:8"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3824:41:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "3857:2:8"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "3861:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3853:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3853:11:8"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "3840:12:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3840:25:8"
																		},
																		"variables": [
																			{
																				"name": "offset_2",
																				"nodeType": "YulTypedName",
																				"src": "3828:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3910:77:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "3928:12:8",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3939:1:8",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_10",
																							"nodeType": "YulTypedName",
																							"src": "3932:3:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_10",
																								"nodeType": "YulIdentifier",
																								"src": "3964:3:8"
																							},
																							{
																								"name": "_10",
																								"nodeType": "YulIdentifier",
																								"src": "3969:3:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "3957:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3957:16:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3957:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "offset_2",
																					"nodeType": "YulIdentifier",
																					"src": "3884:8:8"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "3894:2:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3881:2:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3881:16:8"
																		},
																		"nodeType": "YulIf",
																		"src": "3878:109:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "4011:5:8"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "4018:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4007:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4007:14:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_6",
																											"nodeType": "YulIdentifier",
																											"src": "4048:2:8"
																										},
																										{
																											"name": "offset_2",
																											"nodeType": "YulIdentifier",
																											"src": "4052:8:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4044:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4044:17:8"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "4063:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4040:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4040:26:8"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4068:3:8"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4023:16:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4023:49:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4000:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4000:73:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4000:73:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4093:3:8"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "4098:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4086:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4086:18:8"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4117:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4128:3:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4133:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4124:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4124:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4117:3:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3089:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3081:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3081:15:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3097:23:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3099:19:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3110:3:8"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3115:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3106:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3106:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3099:3:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3077:3:8",
																"statements": []
															},
															"src": "3073:1073:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4155:14:8",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4164:5:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4155:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_struct_RRSetWithSignature_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2549:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2557:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2565:5:8",
														"type": ""
													}
												],
												"src": "2493:1682:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4328:322:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4374:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4383:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4386:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4376:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4376:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4376:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4349:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4358:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4345:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4345:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4370:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4341:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:32:8"
															},
															"nodeType": "YulIf",
															"src": "4338:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4399:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4426:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4413:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4403:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4479:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4488:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4491:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4481:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4481:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4481:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4451:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4459:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4448:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:8"
															},
															"nodeType": "YulIf",
															"src": "4445:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4504:89:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4565:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4561:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4561:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4585:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_RRSetWithSignature_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4514:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:79:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4602:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4629:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4640:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4625:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4625:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4612:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4286:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4297:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4309:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4317:6:8",
														"type": ""
													}
												],
												"src": "4180:470:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4704:373:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4714:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4734:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4728:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:12:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4718:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4756:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4761:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4749:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4749:19:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4777:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4786:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4781:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4848:110:8",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4862:14:8",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4872:4:8",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "4866:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "4904:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4909:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4900:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4900:11:8"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4913:2:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4896:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4896:20:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "4932:5:8"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4939:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4928:3:8"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4928:13:8"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4943:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4924:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4924:22:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4918:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4918:29:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4889:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4889:59:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4889:59:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4807:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4810:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4804:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4804:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4818:21:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4820:17:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4829:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4832:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4825:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4825:12:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4820:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4800:3:8",
																"statements": []
															},
															"src": "4796:162:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4982:3:8"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4987:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4978:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4978:16:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4996:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:27:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4967:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4967:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4967:38:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5029:3:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5042:6:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5050:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5038:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5038:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5059:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5055:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5055:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5034:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5034:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5025:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:39:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5066:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5021:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5021:50:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4681:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4688:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4696:3:8",
														"type": ""
													}
												],
												"src": "4655:422:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5227:158:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5244:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5255:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5237:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5237:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5267:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5292:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5304:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5315:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5300:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5300:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5275:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5275:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5267:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5339:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5350:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5359:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5367:10:8",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5355:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:23:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5328:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_uint32__to_t_bytes_memory_ptr_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5188:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5199:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5207:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5218:4:8",
														"type": ""
													}
												],
												"src": "5082:303:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:114:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5504:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5513:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5516:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5506:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5506:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5506:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5479:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5488:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5475:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5500:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5471:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5471:32:8"
															},
															"nodeType": "YulIf",
															"src": "5468:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5556:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5539:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:27:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5529:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5424:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5435:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5447:6:8",
														"type": ""
													}
												],
												"src": "5390:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5693:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5703:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5715:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5711:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5711:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5703:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5745:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5760:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5776:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5781:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5772:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5772:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5785:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5768:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5768:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5756:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5756:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5738:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5738:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5738:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Digest_$3381__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5662:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5673:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5684:4:8",
														"type": ""
													}
												],
												"src": "5577:218:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5901:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5911:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5923:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5934:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5919:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5919:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5911:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5953:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5968:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5984:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5989:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5980:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5980:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5993:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5976:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5976:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5964:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5964:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5946:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5946:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5870:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5881:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5892:4:8",
														"type": ""
													}
												],
												"src": "5800:203:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6127:98:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6144:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6155:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6137:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6137:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6167:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6192:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6204:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6215:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6200:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6200:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6175:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6167:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6096:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6107:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6118:4:8",
														"type": ""
													}
												],
												"src": "6008:217:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6361:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6407:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6416:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6419:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6409:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6409:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6409:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6382:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6378:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6374:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6374:32:8"
															},
															"nodeType": "YulIf",
															"src": "6371:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6432:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6459:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6446:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6436:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6512:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6521:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6524:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6514:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6514:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6484:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6492:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6481:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6481:30:8"
															},
															"nodeType": "YulIf",
															"src": "6478:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6537:89:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6598:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6609:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6594:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6594:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6618:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_RRSetWithSignature_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6547:46:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:79:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6537:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6327:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6338:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6350:6:8",
														"type": ""
													}
												],
												"src": "6230:402:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6756:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6766:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6778:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6789:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6774:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6766:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6808:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6823:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6839:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6844:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6835:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6835:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6848:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6831:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6831:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6819:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6819:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6801:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Algorithm_$3367__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6725:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6736:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6747:4:8",
														"type": ""
													}
												],
												"src": "6637:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6988:156:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6998:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7010:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7021:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7006:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7006:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6998:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7040:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7055:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7063:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7051:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7033:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:36:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7033:36:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7089:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7100:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7109:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7125:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7130:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7121:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7121:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7134:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7117:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7117:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7105:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7105:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7078:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:60:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7078:60:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6949:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6960:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6968:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6979:4:8",
														"type": ""
													}
												],
												"src": "6863:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7204:325:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7214:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7231:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7224:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7224:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7214:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7245:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7275:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7281:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7271:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7271:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "7249:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7322:31:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7324:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "7338:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7346:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7334:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7334:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7324:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7302:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7295:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7295:26:8"
															},
															"nodeType": "YulIf",
															"src": "7292:61:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7412:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7433:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7440:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7445:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7436:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7436:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7426:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7426:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7426:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7477:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7480:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7470:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7505:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7508:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7498:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7498:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7498:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "7368:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7391:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7399:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7388:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7388:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7365:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7365:38:8"
															},
															"nodeType": "YulIf",
															"src": "7362:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7184:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7193:6:8",
														"type": ""
													}
												],
												"src": "7149:380:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7566:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7583:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7590:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7595:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7586:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7576:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7576:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7623:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7626:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7616:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7616:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7650:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7640:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7640:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7534:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7698:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7715:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7722:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7708:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7755:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7758:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7748:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7779:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7782:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7772:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7666:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7845:88:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7876:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7878:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7878:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7878:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7861:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7872:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7868:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7868:6:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7858:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7858:17:8"
															},
															"nodeType": "YulIf",
															"src": "7855:43:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7907:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7918:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7925:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7914:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7914:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7907:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7827:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7837:3:8",
														"type": ""
													}
												],
												"src": "7798:135:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8083:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8100:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8111:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8093:21:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8123:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8148:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8160:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8171:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8156:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8156:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8131:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:44:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8195:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8206:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8191:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8191:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8215:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8223:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8211:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8211:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8184:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8184:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8184:45:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8044:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8055:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8063:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8074:4:8",
														"type": ""
													}
												],
												"src": "7938:297:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8365:166:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8375:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8387:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8398:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8383:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8383:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8375:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8410:20:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8420:10:8",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8414:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8446:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8461:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8469:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8439:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8493:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8504:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8521:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8509:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8482:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8482:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8482:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8326:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8337:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8345:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8356:4:8",
														"type": ""
													}
												],
												"src": "8240:291:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8584:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8594:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8605:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8608:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8601:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8633:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8635:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8635:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8635:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8625:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "8628:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8622:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:10:8"
															},
															"nodeType": "YulIf",
															"src": "8619:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8567:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8570:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8576:3:8",
														"type": ""
													}
												],
												"src": "8536:125:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8715:79:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8725:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8737:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8740:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8733:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8733:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8725:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8766:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8768:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8768:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8768:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "8757:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8763:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8754:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:11:8"
															},
															"nodeType": "YulIf",
															"src": "8751:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8697:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8700:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8706:4:8",
														"type": ""
													}
												],
												"src": "8666:128:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8898:89:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8908:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8920:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8931:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8916:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8916:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8908:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8950:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8965:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8973:6:8",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8961:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8961:19:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8943:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8943:38:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8943:38:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8867:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8878:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8889:4:8",
														"type": ""
													}
												],
												"src": "8799:188:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9117:162:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9127:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9139:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9150:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9135:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9135:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9127:4:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9162:16:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9172:6:8",
																"type": "",
																"value": "0xffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9166:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9194:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9209:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9217:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9205:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9205:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9187:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9187:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9252:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9237:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9237:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9261:6:8"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9269:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9257:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9257:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9230:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9230:43:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9230:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9078:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9089:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9097:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9108:4:8",
														"type": ""
													}
												],
												"src": "8992:287:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9316:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9333:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9340:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9345:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9336:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9326:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9326:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9326:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9373:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9376:4:8",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9366:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9366:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9366:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9397:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9400:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9390:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9390:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9390:15:8"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "9284:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:212:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9598:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9609:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9591:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9591:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9621:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9652:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9664:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9675:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9660:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9660:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9635:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9635:44:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "9625:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9699:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9710:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9695:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "9719:6:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9727:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9715:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9715:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9688:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9688:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9747:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9772:6:8"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "9780:6:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9755:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9755:32:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9747:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9542:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9553:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9561:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9572:4:8",
														"type": ""
													}
												],
												"src": "9416:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9845:89:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9872:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9874:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9874:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9874:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9865:5:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9858:13:8"
															},
															"nodeType": "YulIf",
															"src": "9855:39:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9903:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9914:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9925:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9921:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9921:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9910:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9910:18:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9903:3:8"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9827:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9837:3:8",
														"type": ""
													}
												],
												"src": "9798:136:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10150:326:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10167:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10178:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10160:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10160:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10160:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10190:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10221:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10233:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10244:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10229:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10229:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10204:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10204:44:8"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10194:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10268:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10279:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10264:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10264:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10288:6:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10284:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10284:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10257:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10257:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10257:50:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10316:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10347:6:8"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10355:6:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10330:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10330:32:8"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "10320:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10382:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10393:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10378:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10378:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "10402:6:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10410:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10398:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10398:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10371:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10371:50:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10371:50:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10430:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10455:6:8"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "10463:6:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10438:16:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:32:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10430:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10103:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10114:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10122:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10130:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10141:4:8",
														"type": ""
													}
												],
												"src": "9939:537:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10559:199:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10605:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10614:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10617:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10607:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10607:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10607:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10580:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10589:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10576:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10576:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10601:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10572:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10572:32:8"
															},
															"nodeType": "YulIf",
															"src": "10569:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10630:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10649:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10643:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10643:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10634:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10712:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10721:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10724:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10714:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10714:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10714:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10681:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "10702:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "10695:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10695:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10688:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10688:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10678:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10678:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10671:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10671:40:8"
															},
															"nodeType": "YulIf",
															"src": "10668:60:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10737:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10747:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10737:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10525:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10536:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10548:6:8",
														"type": ""
													}
												],
												"src": "10481:277:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10937:173:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10954:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10965:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10947:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10947:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10947:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10988:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10999:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10984:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10984:18:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11004:2:8",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10977:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10977:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10977:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11027:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11038:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11023:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11023:18:8"
																	},
																	{
																		"hexValue": "4c6f6e67206b657973206e6f74207065726d6974746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11043:25:8",
																		"type": "",
																		"value": "Long keys not permitted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11016:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11016:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11016:53:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11078:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11090:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11101:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11086:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11086:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11078:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e23270aecf7702fd4b1bd212912c277507361dc8248ebed5ad0286c9b051069__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10914:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10928:4:8",
														"type": ""
													}
												],
												"src": "10763:347:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11153:171:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11184:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11205:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11212:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11217:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11208:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11208:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11198:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11198:31:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11198:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11249:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11252:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11242:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11242:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11242:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11277:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11280:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11270:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11270:15:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11270:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11173:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11166:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:9:8"
															},
															"nodeType": "YulIf",
															"src": "11163:132:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11304:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11313:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11316:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11309:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11309:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11304:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11138:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11141:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11147:1:8",
														"type": ""
													}
												],
												"src": "11115:209:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11381:116:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11391:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11406:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11409:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11402:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11402:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11391:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11469:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11471:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11471:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11471:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11440:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11433:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11433:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11447:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11454:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11463:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11450:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11450:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11444:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11444:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11430:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11430:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11423:45:8"
															},
															"nodeType": "YulIf",
															"src": "11420:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11360:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11363:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11369:7:8",
														"type": ""
													}
												],
												"src": "11329:168:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function validator_revert_contract_Algorithm(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint8t_contract$_Algorithm_$3367(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_Algorithm(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Algorithm(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8t_contract$_Digest_$3381(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_Algorithm(value)\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1338() -> memPtr\n    {\n        memPtr := mload(0x40)\n        let newFreePtr := add(memPtr, 0x40)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(0x40, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_array_struct_RRSetWithSignature_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let dst := allocate_memory(add(_4, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _4), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _3)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            let _6 := add(offset, innerOffset)\n            let _7 := 0x40\n            if slt(add(sub(end, _6), not(31)), _7)\n            {\n                let _8 := 0\n                revert(_8, _8)\n            }\n            let value := allocate_memory_1338()\n            let offset_1 := calldataload(add(_6, _2))\n            if gt(offset_1, _3)\n            {\n                let _9 := 0\n                revert(_9, _9)\n            }\n            mstore(value, abi_decode_bytes(add(add(_6, offset_1), _2), end))\n            let offset_2 := calldataload(add(_6, _7))\n            if gt(offset_2, _3)\n            {\n                let _10 := 0\n                revert(_10, _10)\n            }\n            mstore(add(value, _2), abi_decode_bytes(add(add(_6, offset_2), _2), end))\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_struct_RRSetWithSignature_dyn(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint32__to_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_encode_tuple_t_contract$_Digest_$3381__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_struct_RRSetWithSignature_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_Algorithm_$3367__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8_t_address__to_t_uint8_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value1, tail_1)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 96))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_bytes(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        tail := abi_encode_bytes(value2, tail_2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7e23270aecf7702fd4b1bd212912c277507361dc8248ebed5ad0286c9b051069__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Long keys not permitted\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806373cc48a61161006657806373cc48a6146100fd5780638da5cb5b1461013e57806398d35f2014610151578063bdf95fef14610166578063c327deef1461017957600080fd5b8063020ed8d31461009857806313af4035146100ad57806328e7677d146100c0578063440f3d42146100d3575b600080fd5b6100ab6100a63660046116ba565b6101a2565b005b6100ab6100bb3660046116f1565b610224565b6100ab6100ce3660046116ba565b61025d565b6100e66100e13660046118e8565b6102d7565b6040516100f4929190611973565b60405180910390f35b61012661010b36600461199b565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100f4565b600154610126906001600160a01b031681565b6101596103c9565b6040516100f491906119b6565b6100e66101743660046119c9565b610457565b61012661018736600461199b565b6002602052600090815260409020546001600160a01b031681565b6001546001600160a01b031633146101b957600080fd5b60ff821660008181526002602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527ff73c3c226af96b7f1ba666a21b3ceaf2be3ee6a365e3178fd9cd1eaae0075aa891015b60405180910390a15050565b6001546001600160a01b0316331461023b57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461027457600080fd5b60ff821660008181526003602090815260409182902080546001600160a01b0319166001600160a01b0386169081179091558251938452908301527f2fcc274c3b72dd483ab201bfa87295e3817e8b9b10693219873b722ca1af00c79101610218565b6060600080600080546102e9906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610315906119fe565b80156103625780601f1061033757610100808354040283529160200191610362565b820191906000526020600020905b81548152906001019060200180831161034557829003601f168201915b5050505050905060005b85518110156103bf57600061039b87838151811061038c5761038c611a38565b6020026020010151848861046e565b61010081015160a090910151945092508190506103b781611a64565b91505061036c565b5091509250929050565b600080546103d6906119fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610402906119fe565b801561044f5780601f106104245761010080835404028352916020019161044f565b820191906000526020600020905b81548152906001019060200180831161043257829003601f168201915b505050505081565b6060600061046583426102d7565b91509150915091565b6104766115eb565b83516104819061057a565b90506000610493828360000151610674565b604083015190915060ff166104a9826000610786565b146104d85780826040015160405163e861b2bd60e01b81526004016104cf929190611a7d565b60405180910390fd5b6101208201819052608082015160009084900360030b12156105235760808201516040516353c27c3f60e11b815263ffffffff918216600482015290841660248201526044016104cf565b60a0820151600090840360030b12156105655760a0820151604051635ea081b560e11b815263ffffffff918216600482015290841660248201526044016104cf565b610571818387876107ec565b505b9392505050565b6105826115eb565b61058d82600061089d565b61ffff16815261059e8260026108c5565b60ff1660208201526105b18260036108c5565b60ff1660408201526105c48260046108e9565b63ffffffff90811660608301526105e09083906008906108e916565b63ffffffff90811660808301526105fc908390600c906108e916565b63ffffffff90811660a083015261061890839060109061089d16565b61ffff1660c082015261062c826012610913565b60e082018190525161066990610643906012611aa2565b8260e0015151601285516106579190611ab5565b6106619190611ab5565b849190610936565b610100820152919050565b60606000610681846109b8565b90505b8051516020820151101561077f57606081015161ffff166001146106c7576060810151604051634c52f98d60e11b815261ffff90911660048201526024016104cf565b81516000036106e0576106d9816109d0565b9150610731565b602081015181516106f0916109f1565b82511415806107135750805160208201518351610711928592600092610a4b565b155b156107315760405163cbceee6f60e01b815260040160405180910390fd5b8261ffff16816040015161ffff161461077157604080820151905163537fc54560e11b815261ffff918216600482015290841660248201526044016104cf565b61077a81610a6e565b610684565b5092915050565b6000805b8351831061079a5761079a611ac8565b60006107a685856108c5565b60ff1690506107b6816001611aa2565b6107c09085611aa2565b9350806000036107d057506107e3565b6107db600183611aa2565b91505061078a565b90505b92915050565b60e08301516107fc908590610b56565b6108205760e083015160405163eaafc59b60e01b81526104cf918691600401611ade565b600061082c8282610bb3565b9050602b61ffff16816040015161ffff16036108525761084d848483610bce565b610896565b603061ffff16816040015161ffff16036108715761084d848483610cbb565b60408082015190516361529e8760e01b815261ffff90911660048201526024016104cf565b5050505050565b81516000906108ad836002611aa2565b11156108b857600080fd5b50016002015161ffff1690565b60008282815181106108d9576108d9611a38565b016020015160f81c905092915050565b81516000906108f9836004611aa2565b111561090457600080fd5b50016004015163ffffffff1690565b6060600061092184846109f1565b905061092e848483610936565b949350505050565b82516060906109458385611aa2565b111561095057600080fd5b60008267ffffffffffffffff81111561096b5761096b61170e565b6040519080825280601f01601f191660200182016040528015610995576020820181803683370190505b509050602080820190868601016109ad828287610d83565b509095945050505050565b6109c0611641565b6107e68261010001516000610bb3565b602081015181516060916107e6916109e890826109f1565b84519190610936565b6000815b83518110610a0557610a05611ac8565b6000610a1185836108c5565b60ff169050610a21816001611aa2565b610a2b9083611aa2565b915080600003610a3b5750610a41565b506109f5565b61092e8382611ab5565b6000610a58848484610dd9565b610a63878785610dd9565b149695505050505050565b60c08101516020820181905281515111610a855750565b6000610a99826000015183602001516109f1565b8260200151610aa89190611aa2565b8251909150610ab7908261089d565b61ffff166040830152610acb600282611aa2565b8251909150610ada908261089d565b61ffff166060830152610aee600282611aa2565b8251909150610afd90826108e9565b63ffffffff166080830152610b13600482611aa2565b8251909150600090610b25908361089d565b61ffff169050610b36600283611aa2565b60a084018190529150610b498183611aa2565b60c0909301929092525050565b60008080610b648582610786565b90506000610b73856000610786565b90505b80821115610b9c57610b888684610dfd565b925081610b9481611b0c565b925050610b76565b610ba98684876000610e21565b9695505050505050565b610bbb611641565b82815260c081018290526107e681610a6e565b60208101516000610bde856109b8565b90505b80515160208201511015610c9b57604081015161ffff16603014610c245760408082015190516361529e8760e01b815261ffff90911660048201526024016104cf565b6000610c2f82610e56565b90506000610c4a6000835184610e729092919063ffffffff16565b9050610c5881838989610f10565b15610c8b57610c6d8760e00151868385611036565b15610c7b5750505050505050565b60c08501849052610c8b85610a6e565b5050610c9681610a6e565b610be1565b508360e001516040516306cde0f360e01b81526004016104cf91906119b6565b80515160208201511015610d64576000610cd4826109d0565b9050610ced8460e001518261117390919063ffffffff16565b610d12578360e0015181604051636b80573f60e11b81526004016104cf929190611ade565b6000610d1d83610e56565b90506000610d386000835184610e729092919063ffffffff16565b9050610d4681838888610f10565b15610d5357505050505050565b505050610d5f81610a6e565b610cbb565b8260e001516040516306cde0f360e01b81526004016104cf91906119b6565b60208110610dbb5781518352610d9a602084611aa2565b9250610da7602083611aa2565b9150610db4602082611ab5565b9050610d83565b905182516020929092036101000a6000190180199091169116179052565b8251600090610de88385611aa2565b1115610df357600080fd5b5091016020012090565b6000610e0983836108c5565b60ff16610e17836001611aa2565b6107e39190611aa2565b6000610e3a8383848651610e359190611ab5565b610dd9565b610e4c8686878951610e359190611ab5565b1495945050505050565b60a081015160c08201516060916107e6916109e8908290611ab5565b6040805160808101825260008082526020820181905291810191909152606080820152610eaa610ea3600085611aa2565b859061089d565b61ffff168152610ec5610ebe600285611aa2565b85906108c5565b60ff166020820152610edb610ebe600385611aa2565b60ff166040820152610f04610ef1600485611aa2565b610efc600485611ab5565b869190610936565b60608201529392505050565b6000846020015160ff16600314610f295750600061092e565b826020015160ff16856040015160ff1614610f465750600061092e565b6000610f5185611191565b90508360c0015161ffff168161ffff1614610f7057600091505061092e565b855161010016600003610f8757600091505061092e565b60408087015160ff166000908152600260205220546001600160a01b031680610fb55760009250505061092e565b8351602085015160405163de8f50a160e01b81526001600160a01b0384169263de8f50a192610fea928b929190600401611b23565b602060405180830381865afa158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190611b5c565b979650505050505050565b60008061104283611191565b90505b8451516020860151101561116757600061105e866109d0565b905061106a8188611173565b61108b578681604051636b80573f60e11b81526004016104cf929190611ade565b60a086015160c08701516000916110b0916110a7908290611ab5565b89519190610e72565b90508261ffff16816000015161ffff16146110cc575050611159565b856040015160ff16816020015160ff16146110e8575050611159565b60408051808201909152606081526000602082015261111586518a5161110e9190611aa2565b82906113b4565b50611120818a61142b565b5061112b818761142b565b5061114382604001518260000151846060015161144c565b1561115557600194505050505061092e565b5050505b61116285610a6e565b611045565b50600095945050505050565b6000815183511480156107e357506107e38360008460008751610a4b565b6000612000825111156111e65760405162461bcd60e51b815260206004820152601760248201527f4c6f6e67206b657973206e6f74207065726d697474656400000000000000000060448201526064016104cf565b60008060005b8451601f0181101561125b57600081602087010151905085518260200111156112215785518290036008026101000390811c901b5b7eff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff600882901c811694909401931691909101906020016111ec565b506010827fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c827dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff160191506010817fffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff000016901c817dffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff1601905080600883901b0191506020827fffffffff00000000ffffffff00000000ffffffff00000000ffffffff0000000016901c827bffffffff00000000ffffffff00000000ffffffff00000000ffffffff1601915060408277ffffffffffffffff0000000000000000ffffffffffffffff1916901c8277ffffffffffffffff0000000000000000ffffffffffffffff16019150608082901c826fffffffffffffffffffffffffffffffff16019150601082901c61ffff16820191508192505050919050565b6040805180820190915260608152600060208201526113d4602083611b7e565b156113fc576113e4602083611b7e565b6113ef906020611ab5565b6113f99083611aa2565b91505b60208084018390526040518085526000815290818401018181101561142057600080fd5b604052509192915050565b6040805180820190915260608152600060208201526107e3838384516114f8565b60ff83166000908152600360205260408120546001600160a01b031661147457506000610573565b60ff841660009081526003602052604090819020549051637bf41d7760e11b81526001600160a01b039091169063f7e83aee906114b79086908690600401611ade565b602060405180830381865afa1580156114d4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e9190611b5c565b604080518082019091526060815260006020820152825182111561151b57600080fd5b835151600061152a8483611aa2565b9050856020015181111561154c5761154c86611547836002611ba0565b6115ce565b855180518382016020019160009180851115611566578482525b505050602086015b602086106115a65780518252611585602083611aa2565b9150611592602082611aa2565b905061159f602087611ab5565b955061156e565b51815160001960208890036101000a0190811690199190911617905250849150509392505050565b81516115da83836113b4565b506115e5838261142b565b50505050565b604080516101408101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082019290925260e08101829052610100810182905261012081019190915290565b6040518060e001604052806060815260200160008152602001600061ffff168152602001600061ffff168152602001600063ffffffff16815260200160008152602001600081525090565b803560ff8116811461169d57600080fd5b919050565b6001600160a01b03811681146116b757600080fd5b50565b600080604083850312156116cd57600080fd5b6116d68361168c565b915060208301356116e6816116a2565b809150509250929050565b60006020828403121561170357600080fd5b81356107e3816116a2565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156117475761174761170e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156117765761177661170e565b604052919050565b600082601f83011261178f57600080fd5b813567ffffffffffffffff8111156117a9576117a961170e565b6117bc601f8201601f191660200161174d565b8181528460208386010111156117d157600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126117ff57600080fd5b8135602067ffffffffffffffff8083111561181c5761181c61170e565b8260051b61182b83820161174d565b938452858101830193838101908886111561184557600080fd5b84880192505b858310156118dc578235848111156118635760008081fd5b88016040818b03601f190181131561187b5760008081fd5b611883611724565b87830135878111156118955760008081fd5b6118a38d8a8387010161177e565b8252509082013590868211156118b95760008081fd5b6118c78c898486010161177e565b8189015284525050918401919084019061184b565b98975050505050505050565b600080604083850312156118fb57600080fd5b823567ffffffffffffffff81111561191257600080fd5b61191e858286016117ee565b95602094909401359450505050565b6000815180845260005b8181101561195357602081850181015186830182015201611937565b506000602082860101526020601f19601f83011685010191505092915050565b604081526000611986604083018561192d565b905063ffffffff831660208301529392505050565b6000602082840312156119ad57600080fd5b6107e38261168c565b6020815260006107e3602083018461192d565b6000602082840312156119db57600080fd5b813567ffffffffffffffff8111156119f257600080fd5b61092e848285016117ee565b600181811c90821680611a1257607f821691505b602082108103611a3257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611a7657611a76611a4e565b5060010190565b604081526000611a90604083018561192d565b905060ff831660208301529392505050565b808201808211156107e6576107e6611a4e565b818103818111156107e6576107e6611a4e565b634e487b7160e01b600052600160045260246000fd5b604081526000611af1604083018561192d565b8281036020840152611b03818561192d565b95945050505050565b600081611b1b57611b1b611a4e565b506000190190565b606081526000611b36606083018661192d565b8281036020840152611b48818661192d565b90508281036040840152610ba9818561192d565b600060208284031215611b6e57600080fd5b815180151581146107e357600080fd5b600082611b9b57634e487b7160e01b600052601260045260246000fd5b500690565b80820281158282048414176107e6576107e6611a4e56fea2646970667358221220d9f840df995898bea655c762bec971127e4007415650db190c0beed62620368764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73CC48A6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x73CC48A6 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x98D35F20 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xBDF95FEF EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xC327DEEF EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x20ED8D3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x28E7677D EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0x440F3D42 EQ PUSH2 0xD3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB PUSH2 0xA6 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH2 0xBB CALLDATASIZE PUSH1 0x4 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH2 0xAB PUSH2 0xCE CALLDATASIZE PUSH1 0x4 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x25D JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP3 SWAP2 SWAP1 PUSH2 0x1973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x126 PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x126 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x159 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH2 0xE6 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x457 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0xF73C3C226AF96B7F1BA666A21B3CEAF2BE3EE6A365E3178FD9CD1EAAE0075AA8 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2FCC274C3B72DD483AB201BFA87295E3817E8B9B10693219873B722CA1AF00C7 SWAP2 ADD PUSH2 0x218 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2E9 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x362 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x337 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x362 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x345 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 PUSH2 0x39B DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x38C JUMPI PUSH2 0x38C PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP9 PUSH2 0x46E JUMP JUMPDEST PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD SWAP5 POP SWAP3 POP DUP2 SWAP1 POP PUSH2 0x3B7 DUP2 PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x36C JUMP JUMPDEST POP SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x3D6 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x402 SWAP1 PUSH2 0x19FE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x44F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x424 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x44F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x432 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x465 DUP4 TIMESTAMP PUSH2 0x2D7 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x476 PUSH2 0x15EB JUMP JUMPDEST DUP4 MLOAD PUSH2 0x481 SWAP1 PUSH2 0x57A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x493 DUP3 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x674 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x4A9 DUP3 PUSH1 0x0 PUSH2 0x786 JUMP JUMPDEST EQ PUSH2 0x4D8 JUMPI DUP1 DUP3 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xE861B2BD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x120 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP5 SWAP1 SUB PUSH1 0x3 SIGNEXTEND SLT ISZERO PUSH2 0x523 JUMPI PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x53C27C3F PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x0 SWAP1 DUP5 SUB PUSH1 0x3 SIGNEXTEND SLT ISZERO PUSH2 0x565 JUMPI PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x5EA081B5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x571 DUP2 DUP4 DUP8 DUP8 PUSH2 0x7EC JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x582 PUSH2 0x15EB JUMP JUMPDEST PUSH2 0x58D DUP3 PUSH1 0x0 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND DUP2 MSTORE PUSH2 0x59E DUP3 PUSH1 0x2 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5B1 DUP3 PUSH1 0x3 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x5C4 DUP3 PUSH1 0x4 PUSH2 0x8E9 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5E0 SWAP1 DUP4 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x8E9 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x5FC SWAP1 DUP4 SWAP1 PUSH1 0xC SWAP1 PUSH2 0x8E9 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x618 SWAP1 DUP4 SWAP1 PUSH1 0x10 SWAP1 PUSH2 0x89D AND JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x62C DUP3 PUSH1 0x12 PUSH2 0x913 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE MLOAD PUSH2 0x669 SWAP1 PUSH2 0x643 SWAP1 PUSH1 0x12 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD MLOAD MLOAD PUSH1 0x12 DUP6 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x681 DUP5 PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 MLOAD MLOAD PUSH1 0x20 DUP3 ADD MLOAD LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x1 EQ PUSH2 0x6C7 JUMPI PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x4C52F98D PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CF JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SUB PUSH2 0x6E0 JUMPI PUSH2 0x6D9 DUP2 PUSH2 0x9D0 JUMP JUMPDEST SWAP2 POP PUSH2 0x731 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH2 0x6F0 SWAP2 PUSH2 0x9F1 JUMP JUMPDEST DUP3 MLOAD EQ ISZERO DUP1 PUSH2 0x713 JUMPI POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD DUP4 MLOAD PUSH2 0x711 SWAP3 DUP6 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xA4B JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCBCEEE6F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0xFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND EQ PUSH2 0x771 JUMPI PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x537FC545 PUSH1 0xE1 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH2 0x77A DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP4 LT PUSH2 0x79A JUMPI PUSH2 0x79A PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A6 DUP6 DUP6 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x7B6 DUP2 PUSH1 0x1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x7C0 SWAP1 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x0 SUB PUSH2 0x7D0 JUMPI POP PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x7DB PUSH1 0x1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x78A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x7FC SWAP1 DUP6 SWAP1 PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x820 JUMPI PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xEAAFC59B PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0x4CF SWAP2 DUP7 SWAP2 PUSH1 0x4 ADD PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82C DUP3 DUP3 PUSH2 0xBB3 JUMP JUMPDEST SWAP1 POP PUSH1 0x2B PUSH2 0xFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND SUB PUSH2 0x852 JUMPI PUSH2 0x84D DUP5 DUP5 DUP4 PUSH2 0xBCE JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0xFFFF AND SUB PUSH2 0x871 JUMPI PUSH2 0x84D DUP5 DUP5 DUP4 PUSH2 0xCBB JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x61529E87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x8AD DUP4 PUSH1 0x2 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADD PUSH1 0x2 ADD MLOAD PUSH2 0xFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8D9 JUMPI PUSH2 0x8D9 PUSH2 0x1A38 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x8F9 DUP4 PUSH1 0x4 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADD PUSH1 0x4 ADD MLOAD PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x921 DUP5 DUP5 PUSH2 0x9F1 JUMP JUMPDEST SWAP1 POP PUSH2 0x92E DUP5 DUP5 DUP4 PUSH2 0x936 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x945 DUP4 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96B PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x995 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP7 DUP7 ADD ADD PUSH2 0x9AD DUP3 DUP3 DUP8 PUSH2 0xD83 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x7E6 DUP3 PUSH2 0x100 ADD MLOAD PUSH1 0x0 PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x60 SWAP2 PUSH2 0x7E6 SWAP2 PUSH2 0x9E8 SWAP1 DUP3 PUSH2 0x9F1 JUMP JUMPDEST DUP5 MLOAD SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x0 DUP2 JUMPDEST DUP4 MLOAD DUP2 LT PUSH2 0xA05 JUMPI PUSH2 0xA05 PUSH2 0x1AC8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA11 DUP6 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xA21 DUP2 PUSH1 0x1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xA2B SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x0 SUB PUSH2 0xA3B JUMPI POP PUSH2 0xA41 JUMP JUMPDEST POP PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x92E DUP4 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA58 DUP5 DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0xA63 DUP8 DUP8 DUP6 PUSH2 0xDD9 JUMP JUMPDEST EQ SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP2 MLOAD MLOAD GT PUSH2 0xA85 JUMPI POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA99 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0x9F1 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH2 0xAB7 SWAP1 DUP3 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xACB PUSH1 0x2 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH2 0xADA SWAP1 DUP3 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xAEE PUSH1 0x2 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH2 0xAFD SWAP1 DUP3 PUSH2 0x8E9 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xB13 PUSH1 0x4 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xB25 SWAP1 DUP4 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND SWAP1 POP PUSH2 0xB36 PUSH1 0x2 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 POP PUSH2 0xB49 DUP2 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0xB64 DUP6 DUP3 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB73 DUP6 PUSH1 0x0 PUSH2 0x786 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB9C JUMPI PUSH2 0xB88 DUP7 DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP3 POP DUP2 PUSH2 0xB94 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP3 POP POP PUSH2 0xB76 JUMP JUMPDEST PUSH2 0xBA9 DUP7 DUP5 DUP8 PUSH1 0x0 PUSH2 0xE21 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBBB PUSH2 0x1641 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x7E6 DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x0 PUSH2 0xBDE DUP6 PUSH2 0x9B8 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 MLOAD MLOAD PUSH1 0x20 DUP3 ADD MLOAD LT ISZERO PUSH2 0xC9B JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0xFFFF AND PUSH1 0x30 EQ PUSH2 0xC24 JUMPI PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 MLOAD PUSH4 0x61529E87 PUSH1 0xE0 SHL DUP2 MSTORE PUSH2 0xFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC2F DUP3 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC4A PUSH1 0x0 DUP4 MLOAD DUP5 PUSH2 0xE72 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC58 DUP2 DUP4 DUP10 DUP10 PUSH2 0xF10 JUMP JUMPDEST ISZERO PUSH2 0xC8B JUMPI PUSH2 0xC6D DUP8 PUSH1 0xE0 ADD MLOAD DUP7 DUP4 DUP6 PUSH2 0x1036 JUMP JUMPDEST ISZERO PUSH2 0xC7B JUMPI POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD DUP5 SWAP1 MSTORE PUSH2 0xC8B DUP6 PUSH2 0xA6E JUMP JUMPDEST POP POP PUSH2 0xC96 DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST POP DUP4 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6CDE0F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST DUP1 MLOAD MLOAD PUSH1 0x20 DUP3 ADD MLOAD LT ISZERO PUSH2 0xD64 JUMPI PUSH1 0x0 PUSH2 0xCD4 DUP3 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP PUSH2 0xCED DUP5 PUSH1 0xE0 ADD MLOAD DUP3 PUSH2 0x1173 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xD12 JUMPI DUP4 PUSH1 0xE0 ADD MLOAD DUP2 PUSH1 0x40 MLOAD PUSH4 0x6B80573F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD38 PUSH1 0x0 DUP4 MLOAD DUP5 PUSH2 0xE72 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD46 DUP2 DUP4 DUP9 DUP9 PUSH2 0xF10 JUMP JUMPDEST ISZERO PUSH2 0xD53 JUMPI POP POP POP POP POP POP JUMP JUMPDEST POP POP POP PUSH2 0xD5F DUP2 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xCBB JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x6CDE0F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xDBB JUMPI DUP2 MLOAD DUP4 MSTORE PUSH2 0xD9A PUSH1 0x20 DUP5 PUSH2 0x1AA2 JUMP JUMPDEST SWAP3 POP PUSH2 0xDA7 PUSH1 0x20 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB4 PUSH1 0x20 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP PUSH2 0xD83 JUMP JUMPDEST SWAP1 MLOAD DUP3 MLOAD PUSH1 0x20 SWAP3 SWAP1 SWAP3 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP2 AND OR SWAP1 MSTORE JUMP JUMPDEST DUP3 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xDE8 DUP4 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST GT ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP2 ADD PUSH1 0x20 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE09 DUP4 DUP4 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0xE17 DUP4 PUSH1 0x1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0x7E3 SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3A DUP4 DUP4 DUP5 DUP7 MLOAD PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0xE4C DUP7 DUP7 DUP8 DUP10 MLOAD PUSH2 0xE35 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST EQ SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x60 SWAP2 PUSH2 0x7E6 SWAP2 PUSH2 0x9E8 SWAP1 DUP3 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH2 0xEAA PUSH2 0xEA3 PUSH1 0x0 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH2 0xFFFF AND DUP2 MSTORE PUSH2 0xEC5 PUSH2 0xEBE PUSH1 0x2 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xEDB PUSH2 0xEBE PUSH1 0x3 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0xF04 PUSH2 0xEF1 PUSH1 0x4 DUP6 PUSH2 0x1AA2 JUMP JUMPDEST PUSH2 0xEFC PUSH1 0x4 DUP6 PUSH2 0x1AB5 JUMP JUMPDEST DUP7 SWAP2 SWAP1 PUSH2 0x936 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND PUSH1 0x3 EQ PUSH2 0xF29 JUMPI POP PUSH1 0x0 PUSH2 0x92E JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND EQ PUSH2 0xF46 JUMPI POP PUSH1 0x0 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF51 DUP6 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xC0 ADD MLOAD PUSH2 0xFFFF AND DUP2 PUSH2 0xFFFF AND EQ PUSH2 0xF70 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x92E JUMP JUMPDEST DUP6 MLOAD PUSH2 0x100 AND PUSH1 0x0 SUB PUSH2 0xF87 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0xFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xFB5 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x92E JUMP JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0xDE8F50A1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 PUSH4 0xDE8F50A1 SWAP3 PUSH2 0xFEA SWAP3 DUP12 SWAP3 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1007 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x102B SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1042 DUP4 PUSH2 0x1191 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 MLOAD MLOAD PUSH1 0x20 DUP7 ADD MLOAD LT ISZERO PUSH2 0x1167 JUMPI PUSH1 0x0 PUSH2 0x105E DUP7 PUSH2 0x9D0 JUMP JUMPDEST SWAP1 POP PUSH2 0x106A DUP2 DUP9 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x108B JUMPI DUP7 DUP2 PUSH1 0x40 MLOAD PUSH4 0x6B80573F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP3 SWAP2 SWAP1 PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0xA0 DUP7 ADD MLOAD PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0x0 SWAP2 PUSH2 0x10B0 SWAP2 PUSH2 0x10A7 SWAP1 DUP3 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST DUP10 MLOAD SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0xFFFF AND DUP2 PUSH1 0x0 ADD MLOAD PUSH2 0xFFFF AND EQ PUSH2 0x10CC JUMPI POP POP PUSH2 0x1159 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND EQ PUSH2 0x10E8 JUMPI POP POP PUSH2 0x1159 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1115 DUP7 MLOAD DUP11 MLOAD PUSH2 0x110E SWAP2 SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x13B4 JUMP JUMPDEST POP PUSH2 0x1120 DUP2 DUP11 PUSH2 0x142B JUMP JUMPDEST POP PUSH2 0x112B DUP2 DUP8 PUSH2 0x142B JUMP JUMPDEST POP PUSH2 0x1143 DUP3 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x60 ADD MLOAD PUSH2 0x144C JUMP JUMPDEST ISZERO PUSH2 0x1155 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x92E JUMP JUMPDEST POP POP POP JUMPDEST PUSH2 0x1162 DUP6 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0x1045 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x7E3 JUMPI POP PUSH2 0x7E3 DUP4 PUSH1 0x0 DUP5 PUSH1 0x0 DUP8 MLOAD PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP3 MLOAD GT ISZERO PUSH2 0x11E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6F6E67206B657973206E6F74207065726D6974746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD PUSH1 0x1F ADD DUP2 LT ISZERO PUSH2 0x125B JUMPI PUSH1 0x0 DUP2 PUSH1 0x20 DUP8 ADD ADD MLOAD SWAP1 POP DUP6 MLOAD DUP3 PUSH1 0x20 ADD GT ISZERO PUSH2 0x1221 JUMPI DUP6 MLOAD DUP3 SWAP1 SUB PUSH1 0x8 MUL PUSH2 0x100 SUB SWAP1 DUP2 SHR SWAP1 SHL JUMPDEST PUSH31 0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF PUSH1 0x8 DUP3 SWAP1 SHR DUP2 AND SWAP5 SWAP1 SWAP5 ADD SWAP4 AND SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x11EC JUMP JUMPDEST POP PUSH1 0x10 DUP3 PUSH32 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000 AND SWAP1 SHR DUP3 PUSH30 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF AND ADD SWAP2 POP PUSH1 0x10 DUP2 PUSH32 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000 AND SWAP1 SHR DUP2 PUSH30 0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF AND ADD SWAP1 POP DUP1 PUSH1 0x8 DUP4 SWAP1 SHL ADD SWAP2 POP PUSH1 0x20 DUP3 PUSH32 0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000 AND SWAP1 SHR DUP3 PUSH28 0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF AND ADD SWAP2 POP PUSH1 0x40 DUP3 PUSH24 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF NOT AND SWAP1 SHR DUP3 PUSH24 0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND ADD SWAP2 POP PUSH1 0x80 DUP3 SWAP1 SHR DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADD SWAP2 POP PUSH1 0x10 DUP3 SWAP1 SHR PUSH2 0xFFFF AND DUP3 ADD SWAP2 POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x13D4 PUSH1 0x20 DUP4 PUSH2 0x1B7E JUMP JUMPDEST ISZERO PUSH2 0x13FC JUMPI PUSH2 0x13E4 PUSH1 0x20 DUP4 PUSH2 0x1B7E JUMP JUMPDEST PUSH2 0x13EF SWAP1 PUSH1 0x20 PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x13F9 SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 DUP2 DUP5 ADD ADD DUP2 DUP2 LT ISZERO PUSH2 0x1420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7E3 DUP4 DUP4 DUP5 MLOAD PUSH2 0x14F8 JUMP JUMPDEST PUSH1 0xFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1474 JUMPI POP PUSH1 0x0 PUSH2 0x573 JUMP JUMPDEST PUSH1 0xFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x7BF41D77 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xF7E83AEE SWAP1 PUSH2 0x14B7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1ADE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD MLOAD PUSH1 0x0 PUSH2 0x152A DUP5 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x20 ADD MLOAD DUP2 GT ISZERO PUSH2 0x154C JUMPI PUSH2 0x154C DUP7 PUSH2 0x1547 DUP4 PUSH1 0x2 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x15CE JUMP JUMPDEST DUP6 MLOAD DUP1 MLOAD DUP4 DUP3 ADD PUSH1 0x20 ADD SWAP2 PUSH1 0x0 SWAP2 DUP1 DUP6 GT ISZERO PUSH2 0x1566 JUMPI DUP5 DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP7 ADD JUMPDEST PUSH1 0x20 DUP7 LT PUSH2 0x15A6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0x1585 PUSH1 0x20 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1592 PUSH1 0x20 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x159F PUSH1 0x20 DUP8 PUSH2 0x1AB5 JUMP JUMPDEST SWAP6 POP PUSH2 0x156E JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP9 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP5 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x15DA DUP4 DUP4 PUSH2 0x13B4 JUMP JUMPDEST POP PUSH2 0x15E5 DUP4 DUP3 PUSH2 0x142B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x140 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x100 DUP2 ADD DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x169D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x16B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D6 DUP4 PUSH2 0x168C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16E6 DUP2 PUSH2 0x16A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7E3 DUP2 PUSH2 0x16A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1747 JUMPI PUSH2 0x1747 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1776 JUMPI PUSH2 0x1776 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x178F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17A9 JUMPI PUSH2 0x17A9 PUSH2 0x170E JUMP JUMPDEST PUSH2 0x17BC PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x174D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x17D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x181C JUMPI PUSH2 0x181C PUSH2 0x170E JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH2 0x182B DUP4 DUP3 ADD PUSH2 0x174D JUMP JUMPDEST SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP1 DUP9 DUP7 GT ISZERO PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 DUP9 ADD SWAP3 POP JUMPDEST DUP6 DUP4 LT ISZERO PUSH2 0x18DC JUMPI DUP3 CALLDATALOAD DUP5 DUP2 GT ISZERO PUSH2 0x1863 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP9 ADD PUSH1 0x40 DUP2 DUP12 SUB PUSH1 0x1F NOT ADD DUP2 SGT ISZERO PUSH2 0x187B JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1883 PUSH2 0x1724 JUMP JUMPDEST DUP8 DUP4 ADD CALLDATALOAD DUP8 DUP2 GT ISZERO PUSH2 0x1895 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x18A3 DUP14 DUP11 DUP4 DUP8 ADD ADD PUSH2 0x177E JUMP JUMPDEST DUP3 MSTORE POP SWAP1 DUP3 ADD CALLDATALOAD SWAP1 DUP7 DUP3 GT ISZERO PUSH2 0x18B9 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x18C7 DUP13 DUP10 DUP5 DUP7 ADD ADD PUSH2 0x177E JUMP JUMPDEST DUP2 DUP10 ADD MSTORE DUP5 MSTORE POP POP SWAP2 DUP5 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0x184B JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1912 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x191E DUP6 DUP3 DUP7 ADD PUSH2 0x17EE JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1953 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1937 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1986 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E3 DUP3 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x7E3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x92E DUP5 DUP3 DUP6 ADD PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A32 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A76 JUMPI PUSH2 0x1A76 PUSH2 0x1A4E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1A90 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E6 PUSH2 0x1A4E JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E6 PUSH2 0x1A4E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1AF1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x192D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B03 DUP2 DUP6 PUSH2 0x192D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B1B JUMPI PUSH2 0x1B1B PUSH2 0x1A4E JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B36 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x192D JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B48 DUP2 DUP7 PUSH2 0x192D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xBA9 DUP2 DUP6 PUSH2 0x192D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B9B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7E6 JUMPI PUSH2 0x7E6 PUSH2 0x1A4E JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xF8 BLOCKHASH 0xDF SWAP10 PC SWAP9 0xBE 0xA6 SSTORE 0xC7 PUSH3 0xBEC971 SLT PUSH31 0x4007415650DB190C0BEED62620368764736F6C634300081100330000000000 ",
							"sourceMap": "928:14952:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2448:157;;;;;;:::i;:::-;;:::i;:::-;;329:89:4;;;;;;:::i;:::-;;:::i;2838:151:3:-;;;;;;:::i;:::-;;:::i;4190:594::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1845:39;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1845:39:3;;;;;;-1:-1:-1;;;;;5756:32:8;;;5738:51;;5726:2;5711:18;1845:39:3;5577:218:8;145:20:4;;;;;-1:-1:-1;;;;;145:20:4;;;127::2;;;:::i;:::-;;;;;;;:::i;3427:259:3:-;;;;;;:::i;:::-;;:::i;1793:45::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1793:45:3;;;2448:157;229:5:4;;-1:-1:-1;;;;;229:5:4;215:10;:19;207:28;;;;;;2525:14:3::1;::::0;::::1;;::::0;;;:10:::1;:14;::::0;;;;;;;;:21;;-1:-1:-1;;;;;;2525:21:3::1;-1:-1:-1::0;;;;;2525:21:3;::::1;::::0;;::::1;::::0;;;2562:35;;7033:36:8;;;7085:18;;;7078:60;2562:35:3::1;::::0;7006:18:8;2562:35:3::1;;;;;;;;2448:157:::0;;:::o;329:89:4:-;229:5;;-1:-1:-1;;;;;229:5:4;215:10;:19;207:28;;;;;;394:5:::1;:16:::0;;-1:-1:-1;;;;;;394:16:4::1;-1:-1:-1::0;;;;;394:16:4;;;::::1;::::0;;;::::1;::::0;;329:89::o;2838:151:3:-;229:5:4;;-1:-1:-1;;;;;229:5:4;215:10;:19;207:28;;;;;;2911:11:3::1;::::0;::::1;;::::0;;;:7:::1;:11;::::0;;;;;;;;:20;;-1:-1:-1;;;;;;2911:20:3::1;-1:-1:-1::0;;;;;2911:20:3;::::1;::::0;;::::1;::::0;;;2947:34;;7033:36:8;;;7085:18;;;7078:60;2947:34:3::1;::::0;7006:18:8;2947:34:3::1;6863:281:8::0;4190:594:3;4367:16;4385;4419:18;4440:7;4419:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4463:9;4458:283;4482:5;:12;4478:1;:16;4458:283;;;4516:30;4549:105;4585:5;4591:1;4585:8;;;;;;;;:::i;:::-;;;;;;;4612:5;4636:3;4549:17;:105::i;:::-;4677:10;;;;4714:15;;;;;;-1:-1:-1;4677:10:3;-1:-1:-1;4496:3:3;;-1:-1:-1;4496:3:3;;;:::i;:::-;;;;4458:283;;;-1:-1:-1;4759:5:3;-1:-1:-1;4190:594:3;;;;;:::o;127:20:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3427:259:3:-;3584:16;3602;3643:35;3655:5;3662:15;3643:11;:35::i;:::-;3636:42;;;;3427:259;;;:::o;5305:1427::-;5455:30;;:::i;:::-;5506:11;;:27;;:25;:27::i;:::-;5498:35;;5611:17;5631:37;5643:5;5650;:17;;;5631:11;:37::i;:::-;5705:12;;;;5611:57;;-1:-1:-1;5683:34:3;;:18;5611:57;5699:1;5683:15;:18::i;:::-;:34;5679:111;;5759:4;5765:5;:12;;;5741:37;;-1:-1:-1;;;5741:37:3;;;;;;;;;:::i;:::-;;;;;;;;5679:111;5800:10;;;:17;;;6184:16;;;;10067:4:5;10116:21;;;;:26;;;;6155:142:3;;6255:16;;;;6238:47;;-1:-1:-1;;;6238:47:3;;8420:10:8;8457:15;;;6238:47:3;;;8439:34:8;8509:15;;;8489:18;;;8482:43;8383:18;;6238:47:3;8240:291:8;6155:142:3;6508:15;;;;10067:4:5;10116:21;;;:26;;;;6466:144:3;;6569:15;;;;6548:50;;-1:-1:-1;;;6548:50:3;;8420:10:8;8457:15;;;6548:50:3;;;8439:34:8;8509:15;;;8489:18;;;8482:43;8383:18;;6548:50:3;8240:291:8;6466:144:3;6657:42;6673:4;6679:5;6686;6693;6657:15;:42::i;:::-;6712:12;5305:1427;;;;;;:::o;2830:744:5:-;2911:21;;:::i;:::-;2964:27;:4;2244:1;2964:15;:27::i;:::-;2945:46;;;;3019:31;:4;2287:1;3019:14;:31::i;:::-;3002:48;;:14;;;:48;3075:28;:4;2327:1;3075:14;:28::i;:::-;3061:42;;:11;;;:42;3125:26;:4;2364:1;3125:15;:26::i;:::-;3114:37;;;;:8;;;:37;3180:33;;:4;;2408:1;;3180:15;:33;:::i;:::-;3162:51;;;;:15;;;:51;3241:32;;:4;;2451:2;;3241:15;:32;:::i;:::-;3224:49;;;;:14;;;:49;3298:30;;:4;;2493:2;;3298:15;:30;:::i;:::-;3284:44;;:11;;;:44;3357:33;3366:4;2539:2;3357:8;:33::i;:::-;3339:15;;;:51;;;3462:22;3413:153;;3442:42;;2539:2;3442:42;:::i;:::-;3533:4;:15;;;:22;2539:2;3499:4;:11;:31;;;;:::i;:::-;:56;;;;:::i;:::-;3413:4;;:153;:14;:153::i;:::-;3401:9;;;:165;:4;2830:744;-1:-1:-1;2830:744:5:o;6893:1219:3:-;7014:17;7100:30;7133:11;:5;:9;:11::i;:::-;7100:44;;7081:1024;4721:9:5;;:16;4706:11;;;;:31;;7081:1024:3;;7280:10;;;;:25;;1100:1;7280:25;7276:97;;7346:10;;;;7333:24;;-1:-1:-1;;;7333:24:3;;8973:6:8;8961:19;;;7333:24:3;;;8943:38:8;8916:18;;7333:24:3;8799:188:8;7276:97:3;7393:4;:11;7408:1;7393:16;7389:484;;7437:11;:4;:9;:11::i;:::-;7430:18;;7389:484;;;7685:11;;;;7664:9;;:33;;:20;:33::i;:::-;7649:4;:11;:48;;:125;;;-1:-1:-1;7738:9:3;;7749:11;;;;7762;;7723:51;;7762:4;;7735:1;;7723:11;:51::i;:::-;7722:52;7649:125;7623:235;;;7824:14;;-1:-1:-1;;;7824:14:3;;;;;;;;;;;7623:235;7991:11;7975:27;;:4;:12;;;:27;;;7971:123;;8052:12;;;;;8030:48;;-1:-1:-1;;;8030:48:3;;9172:6:8;9205:15;;;8030:48:3;;;9187:34:8;9257:15;;;9237:18;;;9230:43;9135:18;;8030:48:3;8992:287:8;7971:123:3;7186:11;:4;:9;:11::i;:::-;7081:1024;;;;6893:1219;;;;:::o;1766:440:5:-;1869:7;;1917:259;1961:4;:11;1952:6;:20;1945:28;;;;:::i;:::-;1988:16;2007:22;:4;2022:6;2007:14;:22::i;:::-;1988:41;;;-1:-1:-1;2054:12:5;1988:41;2065:1;2054:12;:::i;:::-;2044:22;;;;:::i;:::-;;;2085:8;2097:1;2085:13;2081:59;;2119:5;;;2081:59;2154:10;2163:1;2154:10;;:::i;:::-;;;1930:246;1917:259;;;2193:5;-1:-1:-1;1766:440:5;;;;;:::o;8469:827:3:-;8808:16;;;;8789:36;;:4;;:18;:36::i;:::-;8784:118;;8873:16;;;;8849:41;;-1:-1:-1;;;8849:41:3;;;;8867:4;;8849:41;;;:::i;8784:118::-;8914:33;8950:19;:5;8914:33;8950:16;:19::i;:::-;8914:55;;1139:2;9012:29;;:7;:15;;;:29;;;9008:281;;9058:34;9071:5;9078:4;9084:7;9058:12;:34::i;:::-;9008:281;;;1181:2;9114:33;;:7;:15;;;:33;;;9110:179;;9164:40;9183:5;9190:4;9196:7;9164:18;:40::i;9110:179::-;9261:15;;;;;9244:33;;-1:-1:-1;;;9244:33:3;;8973:6:8;8961:19;;;9244:33:3;;;8943:38:8;8916:18;;9244:33:3;8799:188:8;9110:179:3;8654:642;8469:827;;;;:::o;6707:256:1:-;6849:11;;6807:10;;6838:7;:3;6844:1;6838:7;:::i;:::-;:22;;6830:31;;;;;;-1:-1:-1;6913:22:1;6927:1;6913:22;6907:29;6938:6;6903:42;;6707:256::o;6298:152::-;6397:9;6432:4;6437:3;6432:9;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;6298:152:1;;;;:::o;7220:260::-;7362:11;;7320:10;;7351:7;:3;7357:1;7351:7;:::i;:::-;:22;;7343:31;;;;;;-1:-1:-1;7426:22:1;7440:1;7426:22;7420:29;7451:10;7416:46;;7220:260::o;1252:221:5:-;1353:16;1382:11;1396:24;1407:4;1413:6;1396:10;:24::i;:::-;1382:38;-1:-1:-1;1438:27:5;:4;1453:6;1382:38;1438:14;:27::i;:::-;1431:34;1252:221;-1:-1:-1;;;;1252:221:5:o;10076:454:1:-;10249:11;;10200:12;;10233;10242:3;10233:6;:12;:::i;:::-;:27;;10225:36;;;;;;10274:16;10303:3;10293:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10293:14:1;-1:-1:-1;10274:33:1;-1:-1:-1;10406:2:1;10397:12;;;;10430:26;;;;10477:22;10397:12;10430:26;10495:3;10477:6;:22::i;:::-;-1:-1:-1;10519:3:1;;10076:454;-1:-1:-1;;;;;10076:454:1:o;3582:146:5:-;3658:17;;:::i;:::-;3695:25;3706:5;:10;;;3718:1;3695:10;:25::i;5774:231::-;5918:11;;;;5959:9;;5835:12;;5880:117;;5948:34;;5918:11;5948:10;:34::i;:::-;5880:9;;;:117;:19;:117::i;598:416::-;701:7;735:6;752:225;793:4;:11;787:3;:17;780:25;;;;:::i;:::-;820:16;839:19;:4;854:3;839:14;:19::i;:::-;820:38;;;-1:-1:-1;880:12:5;820:38;891:1;880:12;:::i;:::-;873:19;;;;:::i;:::-;;;911:8;923:1;911:13;907:59;;945:5;;;907:59;765:212;752:225;;;994:12;1000:6;994:3;:12;:::i;3925:272:1:-;4105:4;4158:31;4165:5;4172:11;4185:3;4158:6;:31::i;:::-;4129:25;4136:4;4142:6;4150:3;4129:6;:25::i;:::-;:60;;3925:272;-1:-1:-1;;;;;;3925:272:1:o;4877:710:5:-;4954:15;;;;4940:11;;;:29;;;4999:9;;:16;-1:-1:-1;4980:70:5;;4877:710;:::o;4980:70::-;5088:11;5116:34;5127:4;:9;;;5138:4;:11;;;5116:10;:34::i;:::-;5102:4;:11;;;:48;;;;:::i;:::-;5216:9;;5088:62;;-1:-1:-1;5216:25:5;;5088:62;5216:20;:25::i;:::-;5201:40;;:12;;;:40;5252:8;5259:1;5252:8;;:::i;:::-;5284:9;;5252:8;;-1:-1:-1;5284:25:5;;5252:8;5284:20;:25::i;:::-;5271:38;;:10;;;:38;5320:8;5327:1;5320:8;;:::i;:::-;5350:9;;5320:8;;-1:-1:-1;5350:25:5;;5320:8;5350:20;:25::i;:::-;5339:36;;:8;;;:36;5386:8;5393:1;5386:8;;:::i;:::-;5456:9;;5386:8;;-1:-1:-1;5434:19:5;;5456:25;;5386:8;5456:20;:25::i;:::-;5434:47;;;-1:-1:-1;5492:8:5;5499:1;5492:8;;:::i;:::-;5511:16;;;:22;;;5492:8;-1:-1:-1;5562:17:5;5568:11;5492:8;5562:17;:::i;:::-;5544:15;;;;:35;;;;-1:-1:-1;;4877:710:5:o;7953:412::-;8063:4;;;8123:19;8134:4;8063;8123:10;:19::i;:::-;8106:36;;8153:19;8175:20;8186:5;8193:1;8175:10;:20::i;:::-;8153:42;;8208:104;8224:11;8215:6;:20;8208:104;;;8258:19;8267:4;8273:3;8258:8;:19::i;:::-;8252:25;-1:-1:-1;8292:8:5;;;;:::i;:::-;;;;8208:104;;;8331:26;:4;8343:3;8348:5;8355:1;8331:11;:26::i;:::-;8324:33;7953:412;-1:-1:-1;;;;;;7953:412:5:o;4225:214::-;4328:21;;:::i;:::-;4362:15;;;4388:14;;;:23;;;4422:9;4362:3;4422:4;:9::i;12525:1228:3:-;12725:12;;;;12703:19;12800:11;:5;:9;:11::i;:::-;12767:44;;12748:947;4721:9:5;;:16;4706:11;;;;:31;;12748:947:3;;12895:12;;;;:30;;1181:2;12895:30;12891:108;;12970:12;;;;;12953:30;;-1:-1:-1;;;12953:30:3;;8973:6:8;8961:19;;;12953:30:3;;;8943:38:8;8916:18;;12953:30:3;8799:188:8;12891:108:3;13015:21;13039:12;:4;:10;:12::i;:::-;13015:36;;13066:28;13097:88;13135:1;13155:8;:15;13097:8;:19;;:88;;;;;:::i;:::-;13066:119;;13204:53;13227:6;13235:8;13245:5;13252:4;13204:22;:53::i;:::-;13200:484;;;13378:58;13394:5;:16;;;13412:5;13419:6;13427:8;13378:15;:58::i;:::-;13352:153;;;13479:7;;;;12525:1228;;;:::o;13352:153::-;13607:16;;;:30;;;13656:12;13607:5;13656:10;:12::i;:::-;12876:819;;12853:11;:4;:9;:11::i;:::-;12748:947;;;;13728:5;:16;;;13712:33;;-1:-1:-1;;;13712:33:3;;;;;;;;:::i;9594:866::-;4721:9:5;;:16;4706:11;;;;:31;;9857:545:3;;9908:22;9933:12;:5;:10;:12::i;:::-;9908:37;;9965:34;9982:5;:16;;;9965:9;:16;;:34;;;;:::i;:::-;9960:129;;10045:5;:16;;;10063:9;10027:46;;-1:-1:-1;;;10027:46:3;;;;;;;;;:::i;9960:129::-;10105:21;10129:13;:5;:11;:13::i;:::-;10105:37;;10157:28;10188:88;10226:1;10246:8;:15;10188:8;:19;;:88;;;;;:::i;:::-;10157:119;;10295:53;10318:6;10326:8;10336:5;10343:4;10295:22;:53::i;:::-;10291:100;;;10369:7;;;9594:866;;;:::o;10291:100::-;9893:509;;;9879:12;:5;:10;:12::i;:::-;9857:545;;;10435:5;:16;;;10419:33;;-1:-1:-1;;;10419:33:3;;;;;;;;:::i;9207:636:1:-;9352:2;9345:3;:9;9338:171;;9423:10;;9410:24;;9463:10;9471:2;9417:4;9463:10;:::i;:::-;;-1:-1:-1;9488:9:1;9495:2;9488:9;;:::i;:::-;;-1:-1:-1;9356:9:1;9363:2;9356:9;;:::i;:::-;;;9338:171;;;9679:10;;9739:11;;9603:2;:8;;;;9595:3;:17;-1:-1:-1;;9594:23:1;9691:9;;9675:26;;;9735:22;;9788:21;9775:35;;9207:636::o;429:283::-;598:11;;550;;582:12;591:3;582:6;:12;:::i;:::-;:27;;574:36;;;;;;-1:-1:-1;662:26:1;;676:2;662:26;652:42;;429:283::o;10169:162:5:-;10267:7;10304:19;:4;10319:3;10304:14;:19::i;:::-;10294:29;;:7;:3;10300:1;10294:7;:::i;:::-;:29;;;;:::i;4597:316:1:-;4755:4;4851:54;4858:5;4865:11;4893;4878:5;:12;:26;;;;:::i;:::-;4851:6;:54::i;:::-;4792:42;4799:4;4805:6;4827;4813:4;:11;:20;;;;:::i;4792:42::-;:113;;4597:316;-1:-1:-1;;;;;4597:316:1:o;6189:253:5:-;6350:16;;;;6385:15;;;;6267:12;;6312:122;;6385:34;;6350:16;;6385:34;:::i;6750:481::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6922:38:5;6938:21;6482:1;6938:6;:21;:::i;:::-;6922:4;;:15;:38::i;:::-;6909:51;;;;6987:40;7002:24;6525:1;7002:6;:24;:::i;:::-;6987:4;;:14;:40::i;:::-;6971:56;;:13;;;:56;7055:41;7070:25;6569:1;7070:6;:25;:::i;7055:41::-;7038:58;;:14;;;:58;7124:99;7153:22;6610:1;7153:6;:22;:::i;:::-;7190;6610:1;7190:6;:22;:::i;:::-;7124:4;;:99;:14;:99::i;:::-;7107:14;;;:116;:4;6750:481;-1:-1:-1;;;6750:481:5:o;10812:1370:3:-;11027:4;11185:6;:15;;;:20;;11204:1;11185:20;11181:65;;-1:-1:-1;11229:5:3;11222:12;;11181:65;11486:5;:15;;;11466:35;;:6;:16;;;:35;;;11462:80;;-1:-1:-1;11525:5:3;11518:12;;11462:80;11552:21;11576:24;:8;:22;:24::i;:::-;11552:48;;11633:5;:12;;;11615:30;;:14;:30;;;11611:75;;11669:5;11662:12;;;;;11611:75;11879:12;;1231:5;11879:34;:12;:39;11875:84;;11942:5;11935:12;;;;;11875:84;12004:16;;;;;11993:28;;11971:19;11993:28;;;:10;:28;;;;-1:-1:-1;;;;;11993:28:3;;12032:77;;12092:5;12085:12;;;;;;12032:77;12153:10;;12165:8;;;;12126:48;;-1:-1:-1;;;12126:48:3;;-1:-1:-1;;;;;12126:16:3;;;;;:48;;12143:8;;12153:10;12165:8;12126:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12119:55;10812:1370;-1:-1:-1;;;;;;;10812:1370:3:o;14126:1142::-;14325:4;14342:13;14358:24;:8;:22;:24::i;:::-;14342:40;;14393:845;4721:9:5;;:16;4706:11;;;;:31;;14393:845:3;;14444:22;14469:12;:5;:10;:12::i;:::-;14444:37;-1:-1:-1;14501:25:3;14444:37;14518:7;14501:16;:25::i;:::-;14496:111;;14572:7;14581:9;14554:37;;-1:-1:-1;;;14554:37:3;;;;;;;;;:::i;14496:111::-;14682:17;;;;14718:16;;;;14623:20;;14646:123;;14718:36;;14682:17;;14718:36;:::i;:::-;14646:10;;;:123;:17;:123::i;:::-;14623:146;;14801:6;14788:19;;:2;:9;;;:19;;;14784:68;;14828:8;;;;14784:68;14886:6;:16;;;14870:32;;:2;:12;;;:32;;;14866:81;;14923:8;;;;14866:81;-1:-1:-1;;;;;;;;;;;;;;;;;15002:42:3;15028:8;:15;15011:7;:14;:32;;;;:::i;:::-;15002:3;;:8;:42::i;:::-;-1:-1:-1;15059:19:3;:3;15070:7;15059:10;:19::i;:::-;-1:-1:-1;15093:20:3;:3;15104:8;15093:10;:20::i;:::-;;15132:47;15145:2;:13;;;15160:3;:7;;;15169:2;:9;;;15132:12;:47::i;:::-;15128:99;;;15207:4;15200:11;;;;;;;;15128:99;14429:809;;;14393:845;14415:12;:5;:10;:12::i;:::-;14393:845;;;-1:-1:-1;15255:5:3;;14126:1142;-1:-1:-1;;;;;14126:1142:3:o;5813:230:1:-;5916:4;5968:5;:12;5953:4;:11;:27;:82;;;;;5997:38;6004:4;6010:1;6013:5;6020:1;6023:4;:11;5997:6;:38::i;10503:4071:5:-;10568:6;12387:4;12372;:11;:19;;12364:55;;;;-1:-1:-1;;;12364:55:5;;10965:2:8;12364:55:5;;;10947:21:8;11004:2;10984:18;;;10977:30;11043:25;11023:18;;;11016:53;11086:18;;12364:55:5;10763:347:8;12364:55:5;12434:11;12460;12491:9;12486:685;12510:4;:11;12524:2;12510:16;12506:1;:20;12486:685;;;12556:12;12652:1;12647:2;12641:4;12637:13;12633:21;12627:28;12619:36;;12705:4;:11;12696:1;12700:2;12696:6;:20;12692:169;;;12765:11;;:15;;;12784:1;12764:21;12758:3;:27;12816:14;;;12815:26;;12692:169;12907:126;13032:1;12907:126;;;;;12879:154;;;;;13060:94;13052:103;;;;;12533:2;12528:7;12486:685;;;;13444:2;13325:3;13352:66;13325:93;13324:122;;13209:3;13236:66;13209:93;13208:239;13185:262;;13721:2;13602:3;13629:66;13602:93;13601:122;;13486:3;13513:66;13486:93;13485:239;13462:262;;13758:3;13753:1;13746:3;:8;;13745:16;13739:22;;14035:2;13916:3;13943:66;13916:93;13915:122;;13800:3;13827:66;13800:93;13799:239;13776:262;;14312:2;14193:3;-1:-1:-1;;14193:93:5;14192:122;;14077:3;14104:66;14077:93;14076:239;14053:262;;14476:3;14469;:10;;14354:3;14381:66;14354:93;14353:127;14330:150;;14510:2;14503:3;:9;;14516:6;14502:20;14495:27;;;;14551:3;14537:18;;;;10503:4071;;;:::o;1020:555:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;1119:13:0;1130:2;1119:8;:13;:::i;:::-;:18;1115:81;;1171:13;1182:2;1171:8;:13;:::i;:::-;1165:20;;:2;:20;:::i;:::-;1153:32;;;;:::i;:::-;;;1115:81;1251:12;;;;:23;;;1324:4;1318:11;1342:16;;;-1:-1:-1;1371:14:0;;1318:11;1417:18;;;1409:27;1452:12;;;1449:60;;;1493:1;1490;1483:12;1449:60;1529:4;1522:17;-1:-1:-1;1565:3:0;;1020:555;-1:-1:-1;;1020:555:0:o;4539:146::-;-1:-1:-1;;;;;;;;;;;;;;;;;4648:30:0;4655:3;4660:4;4666;:11;4648:6;:30::i;15571:306:3:-;15737:19;;;15708:4;15737:19;;;:7;:19;;;;;;-1:-1:-1;;;;;15737:19:3;15725:87;;-1:-1:-1;15795:5:3;15788:12;;15725:87;15829:19;;;;;;;:7;:19;;;;;;;;:40;;-1:-1:-1;;;15829:40:3;;-1:-1:-1;;;;;15829:19:3;;;;:26;;:40;;15856:4;;15862:6;;15829:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2844:1427:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;2970:4:0;:11;2963:3;:18;;2955:27;;;;;;3004:7;;:14;2993:8;3047:9;3053:3;3004:14;3047:9;:::i;:::-;3028:28;;3084:3;:12;;;3070:11;:26;3066:85;;;3112:28;3119:3;3124:15;:11;3138:1;3124:15;:::i;:::-;3112:6;:28::i;:::-;3284:10;;3367:13;;3480:25;;;3496:2;3480:25;;3161:9;;3579:23;;;3576:86;;;3636:11;3628:6;3621:27;3576:86;-1:-1:-1;;;3692:2:0;3682:13;;3765:165;3779:2;3772:3;:9;3765:165;;3848:10;;3835:24;;3886:10;3894:2;3842:4;3886:10;:::i;:::-;;-1:-1:-1;3910:9:0;3917:2;3910:9;;:::i;:::-;;-1:-1:-1;3783:9:0;3790:2;3783:9;;:::i;:::-;;;3765:165;;;4091:10;4150:11;;-1:-1:-1;;4017:2:0;:8;;;4009:3;:17;4008:23;4146:22;;;4103:9;;4087:26;;;;4198:21;4185:35;;-1:-1:-1;4261:3:0;;-1:-1:-1;;2844:1427:0;;;;;:::o;2004:167::-;2099:7;;2116:19;2099:3;2126:8;2116:4;:19::i;:::-;;2145;2152:3;2157:6;2145;:19::i;:::-;;2067:104;2004:167;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:156:8:-;80:20;;140:4;129:16;;119:27;;109:55;;160:1;157;150:12;109:55;14:156;;;:::o;175:142::-;-1:-1:-1;;;;;261:31:8;;251:42;;241:70;;307:1;304;297:12;241:70;175:142;:::o;322:346::-;406:6;414;467:2;455:9;446:7;442:23;438:32;435:52;;;483:1;480;473:12;435:52;506:27;523:9;506:27;:::i;:::-;496:37;;583:2;572:9;568:18;555:32;596:42;632:5;596:42;:::i;:::-;657:5;647:15;;;322:346;;;;;:::o;673:258::-;732:6;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;840:9;827:23;859:42;895:5;859:42;:::i;1284:127::-;1345:10;1340:3;1336:20;1333:1;1326:31;1376:4;1373:1;1366:15;1400:4;1397:1;1390:15;1416:257;1488:4;1482:11;;;1520:17;;1567:18;1552:34;;1588:22;;;1549:62;1546:88;;;1614:18;;:::i;:::-;1650:4;1643:24;1416:257;:::o;1678:275::-;1749:2;1743:9;1814:2;1795:13;;-1:-1:-1;;1791:27:8;1779:40;;1849:18;1834:34;;1870:22;;;1831:62;1828:88;;;1896:18;;:::i;:::-;1932:2;1925:22;1678:275;;-1:-1:-1;1678:275:8:o;1958:530::-;2000:5;2053:3;2046:4;2038:6;2034:17;2030:27;2020:55;;2071:1;2068;2061:12;2020:55;2107:6;2094:20;2133:18;2129:2;2126:26;2123:52;;;2155:18;;:::i;:::-;2199:55;2242:2;2223:13;;-1:-1:-1;;2219:27:8;2248:4;2215:38;2199:55;:::i;:::-;2279:2;2270:7;2263:19;2325:3;2318:4;2313:2;2305:6;2301:15;2297:26;2294:35;2291:55;;;2342:1;2339;2332:12;2291:55;2407:2;2400:4;2392:6;2388:17;2381:4;2372:7;2368:18;2355:55;2455:1;2430:16;;;2448:4;2426:27;2419:38;;;;2434:7;1958:530;-1:-1:-1;;;1958:530:8:o;2493:1682::-;2565:5;2618:3;2611:4;2603:6;2599:17;2595:27;2585:55;;2636:1;2633;2626:12;2585:55;2672:6;2659:20;2698:4;2721:18;2758:2;2754;2751:10;2748:36;;;2764:18;;:::i;:::-;2810:2;2807:1;2803:10;2833:28;2857:2;2853;2849:11;2833:28;:::i;:::-;2895:15;;;2965;;;2961:24;;;2926:12;;;;2997:15;;;2994:35;;;3025:1;3022;3015:12;2994:35;3061:2;3053:6;3049:15;3038:26;;3073:1073;3089:6;3084:3;3081:15;3073:1073;;;3175:3;3162:17;3211:2;3198:11;3195:19;3192:109;;;3255:1;3284:2;3280;3273:14;3192:109;3324:24;;3371:4;3399:12;;;-1:-1:-1;;3395:26:8;3391:35;-1:-1:-1;3388:125:8;;;3467:1;3496:2;3492;3485:14;3388:125;3539:22;;:::i;:::-;3611:2;3607;3603:11;3590:25;3644:2;3634:8;3631:16;3628:106;;;3688:1;3717:2;3713;3706:14;3628:106;3761:49;3806:3;3801:2;3790:8;3786:2;3782:17;3778:26;3761:49;:::i;:::-;3747:64;;-1:-1:-1;3853:11:8;;;3840:25;;3881:16;;;3878:109;;;3939:1;3969:3;3964;3957:16;3878:109;4023:49;4068:3;4063:2;4052:8;4048:2;4044:17;4040:26;4023:49;:::i;:::-;4007:14;;;4000:73;4086:18;;-1:-1:-1;;3106:12:8;;;;4124;;;;3073:1073;;;4164:5;2493:1682;-1:-1:-1;;;;;;;;2493:1682:8:o;4180:470::-;4309:6;4317;4370:2;4358:9;4349:7;4345:23;4341:32;4338:52;;;4386:1;4383;4376:12;4338:52;4426:9;4413:23;4459:18;4451:6;4448:30;4445:50;;;4491:1;4488;4481:12;4445:50;4514:79;4585:7;4576:6;4565:9;4561:22;4514:79;:::i;:::-;4504:89;4640:2;4625:18;;;;4612:32;;-1:-1:-1;;;;4180:470:8:o;4655:422::-;4696:3;4734:5;4728:12;4761:6;4756:3;4749:19;4786:1;4796:162;4810:6;4807:1;4804:13;4796:162;;;4872:4;4928:13;;;4924:22;;4918:29;4900:11;;;4896:20;;4889:59;4825:12;4796:162;;;4800:3;5003:1;4996:4;4987:6;4982:3;4978:16;4974:27;4967:38;5066:4;5059:2;5055:7;5050:2;5042:6;5038:15;5034:29;5029:3;5025:39;5021:50;5014:57;;;4655:422;;;;:::o;5082:303::-;5255:2;5244:9;5237:21;5218:4;5275:44;5315:2;5304:9;5300:18;5292:6;5275:44;:::i;:::-;5267:52;;5367:10;5359:6;5355:23;5350:2;5339:9;5335:18;5328:51;5082:303;;;;;:::o;5390:182::-;5447:6;5500:2;5488:9;5479:7;5475:23;5471:32;5468:52;;;5516:1;5513;5506:12;5468:52;5539:27;5556:9;5539:27;:::i;6008:217::-;6155:2;6144:9;6137:21;6118:4;6175:44;6215:2;6204:9;6200:18;6192:6;6175:44;:::i;6230:402::-;6350:6;6403:2;6391:9;6382:7;6378:23;6374:32;6371:52;;;6419:1;6416;6409:12;6371:52;6459:9;6446:23;6492:18;6484:6;6481:30;6478:50;;;6524:1;6521;6514:12;6478:50;6547:79;6618:7;6609:6;6598:9;6594:22;6547:79;:::i;7149:380::-;7228:1;7224:12;;;;7271;;;7292:61;;7346:4;7338:6;7334:17;7324:27;;7292:61;7399:2;7391:6;7388:14;7368:18;7365:38;7362:161;;7445:10;7440:3;7436:20;7433:1;7426:31;7480:4;7477:1;7470:15;7508:4;7505:1;7498:15;7362:161;;7149:380;;;:::o;7534:127::-;7595:10;7590:3;7586:20;7583:1;7576:31;7626:4;7623:1;7616:15;7650:4;7647:1;7640:15;7666:127;7727:10;7722:3;7718:20;7715:1;7708:31;7758:4;7755:1;7748:15;7782:4;7779:1;7772:15;7798:135;7837:3;7858:17;;;7855:43;;7878:18;;:::i;:::-;-1:-1:-1;7925:1:8;7914:13;;7798:135::o;7938:297::-;8111:2;8100:9;8093:21;8074:4;8131:44;8171:2;8160:9;8156:18;8148:6;8131:44;:::i;:::-;8123:52;;8223:4;8215:6;8211:17;8206:2;8195:9;8191:18;8184:45;7938:297;;;;;:::o;8536:125::-;8601:9;;;8622:10;;;8619:36;;;8635:18;;:::i;8666:128::-;8733:9;;;8754:11;;;8751:37;;;8768:18;;:::i;9284:127::-;9345:10;9340:3;9336:20;9333:1;9326:31;9376:4;9373:1;9366:15;9400:4;9397:1;9390:15;9416:377;9609:2;9598:9;9591:21;9572:4;9635:44;9675:2;9664:9;9660:18;9652:6;9635:44;:::i;:::-;9727:9;9719:6;9715:22;9710:2;9699:9;9695:18;9688:50;9755:32;9780:6;9772;9755:32;:::i;:::-;9747:40;9416:377;-1:-1:-1;;;;;9416:377:8:o;9798:136::-;9837:3;9865:5;9855:39;;9874:18;;:::i;:::-;-1:-1:-1;;;9910:18:8;;9798:136::o;9939:537::-;10178:2;10167:9;10160:21;10141:4;10204:44;10244:2;10233:9;10229:18;10221:6;10204:44;:::i;:::-;10296:9;10288:6;10284:22;10279:2;10268:9;10264:18;10257:50;10330:32;10355:6;10347;10330:32;:::i;:::-;10316:46;;10410:9;10402:6;10398:22;10393:2;10382:9;10378:18;10371:50;10438:32;10463:6;10455;10438:32;:::i;10481:277::-;10548:6;10601:2;10589:9;10580:7;10576:23;10572:32;10569:52;;;10617:1;10614;10607:12;10569:52;10649:9;10643:16;10702:5;10695:13;10688:21;10681:5;10678:32;10668:60;;10724:1;10721;10714:12;11115:209;11147:1;11173;11163:132;;11217:10;11212:3;11208:20;11205:1;11198:31;11252:4;11249:1;11242:15;11280:4;11277:1;11270:15;11163:132;-1:-1:-1;11309:9:8;;11115:209::o;11329:168::-;11402:9;;;11433;;11450:15;;;11444:22;;11430:37;11420:71;;11471:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1429800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"algorithms(uint8)": "2638",
								"anchors()": "infinite",
								"digests(uint8)": "2550",
								"owner()": "2359",
								"setAlgorithm(uint8,address)": "28212",
								"setDigest(uint8,address)": "28267",
								"setOwner(address)": "26732",
								"verifyRRSet((bytes,bytes)[])": "infinite",
								"verifyRRSet((bytes,bytes)[],uint256)": "infinite"
							},
							"internal": {
								"validateRRs(struct RRUtils.SignedSet memory,uint16)": "infinite",
								"validateSignedSet(struct DNSSEC.RRSetWithSignature memory,bytes memory,uint256)": "infinite",
								"verifyDSHash(uint8,bytes memory,bytes memory)": "infinite",
								"verifyKeyWithDS(bytes memory,struct RRUtils.RRIterator memory,struct RRUtils.DNSKEY memory,bytes memory)": "infinite",
								"verifySignature(bytes memory,struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory,bytes memory)": "infinite",
								"verifySignatureWithKey(struct RRUtils.DNSKEY memory,bytes memory,struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory)": "infinite",
								"verifyWithDS(struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory,struct RRUtils.RRIterator memory)": "infinite",
								"verifyWithKnownKey(struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory,struct RRUtils.RRIterator memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2015,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 295,
									"end": 300,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 295,
									"end": 313,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 295,
									"end": 313,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 303,
									"end": 313,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 295,
									"end": 300,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2182,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2192,
									"end": 2200,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 295,
									"end": 300,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2182,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 2182,
									"end": 2200,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2182,
									"end": 2200,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 2182,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2182,
									"end": 2200,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2015,
									"end": 2208,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1187,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 225,
									"end": 231,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 256,
									"end": 258,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 299,
									"end": 301,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 287,
									"end": 296,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 278,
									"end": 285,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 274,
									"end": 297,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 270,
									"end": 302,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 267,
									"end": 319,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 267,
									"end": 319,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 267,
									"end": 319,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 315,
									"end": 316,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 312,
									"end": 313,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 305,
									"end": 317,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 267,
									"end": 319,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 267,
									"end": 319,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 342,
									"end": 358,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 342,
									"end": 358,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 407,
									"end": 421,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 407,
									"end": 421,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 407,
									"end": 421,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 404,
									"end": 438,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 404,
									"end": 438,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 404,
									"end": 438,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 434,
									"end": 435,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 436,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 404,
									"end": 438,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 404,
									"end": 438,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 472,
									"end": 478,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 461,
									"end": 470,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 457,
									"end": 479,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 447,
									"end": 479,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 447,
									"end": 479,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 517,
									"end": 524,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 510,
									"end": 514,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 506,
									"end": 508,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 502,
									"end": 515,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 498,
									"end": 525,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 488,
									"end": 543,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 488,
									"end": 543,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 539,
									"end": 540,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 536,
									"end": 537,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 529,
									"end": 541,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 488,
									"end": 543,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 488,
									"end": 543,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 570,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 562,
									"end": 571,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 590,
									"end": 592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 586,
									"end": 588,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 583,
									"end": 593,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 616,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 580,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 580,
									"end": 616,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 596,
									"end": 614,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 596,
									"end": 614,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 596,
									"end": 614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 596,
									"end": 614,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 596,
									"end": 614,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 671,
									"end": 673,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 665,
									"end": 674,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 639,
									"end": 641,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 725,
									"end": 738,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 725,
									"end": 738,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 721,
									"end": 743,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 721,
									"end": 743,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 745,
									"end": 747,
									"name": "PUSH",
									"source": 8,
									"value": "3F"
								},
								{
									"begin": 717,
									"end": 748,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 713,
									"end": 753,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 701,
									"end": 754,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 701,
									"end": 754,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 701,
									"end": 754,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 787,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 769,
									"end": 787,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 769,
									"end": 787,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 789,
									"end": 811,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 789,
									"end": 811,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 789,
									"end": 811,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 766,
									"end": 812,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 763,
									"end": 835,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 763,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 763,
									"end": 835,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 815,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 815,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 815,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 815,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 815,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 855,
									"end": 865,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 851,
									"end": 853,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 844,
									"end": 866,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 890,
									"end": 892,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 882,
									"end": 888,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 875,
									"end": 893,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 930,
									"end": 937,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 925,
									"end": 927,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 920,
									"end": 922,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 916,
									"end": 918,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 912,
									"end": 923,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 908,
									"end": 928,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 905,
									"end": 938,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 902,
									"end": 955,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 951,
									"end": 952,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 948,
									"end": 949,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 941,
									"end": 953,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 902,
									"end": 955,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 974,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 964,
									"end": 974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 997,
									"end": 999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 994,
									"end": 995,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1000,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1085,
									"end": 1095,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1085,
									"end": 1095,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1085,
									"end": 1095,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 1100,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1081,
									"end": 1100,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1101,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1068,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1068,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1068,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1050,
									"end": 1073,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1050,
									"end": 1073,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1043,
									"end": 1102,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1008,
									"end": 1018,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1008,
									"end": 1018,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1008,
									"end": 1018,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1008,
									"end": 1018,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 983,
									"end": 1112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1154,
									"end": 1155,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1151,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1144,
									"end": 1146,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1136,
									"end": 1142,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1147,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1128,
									"end": 1152,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1121,
									"end": 1156,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1175,
									"end": 1181,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "SWAP7",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1181,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1187,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1187,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1187,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 146,
									"end": 1187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1572,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 1192,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1272,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1267,
									"end": 1279,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1279,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1279,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1267,
									"end": 1279,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1326,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1326,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1314,
									"end": 1326,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1335,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1396,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1389,
									"end": 1393,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 1381,
									"end": 1387,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1377,
									"end": 1394,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1367,
									"end": 1394,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1367,
									"end": 1394,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1335,
									"end": 1396,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1335,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1442,
									"end": 1444,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1434,
									"end": 1440,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1431,
									"end": 1445,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1429,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1408,
									"end": 1446,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1405,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1405,
									"end": 1566,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1488,
									"end": 1498,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 1483,
									"end": 1486,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 1479,
									"end": 1499,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1476,
									"end": 1477,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1469,
									"end": 1500,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1523,
									"end": 1527,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1520,
									"end": 1521,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1513,
									"end": 1528,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1551,
									"end": 1555,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1548,
									"end": 1549,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1541,
									"end": 1556,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1405,
									"end": 1566,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1405,
									"end": 1566,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1405,
									"end": 1566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1572,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1572,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1572,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 2246,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 1702,
									"end": 2246,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1803,
									"end": 1805,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1798,
									"end": 1801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1795,
									"end": 1806,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1792,
									"end": 2240,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1792,
									"end": 2240,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1792,
									"end": 2240,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1839,
									"end": 1840,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1864,
									"end": 1869,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1862,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1853,
									"end": 1870,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1909,
									"end": 1913,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1905,
									"end": 1907,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1895,
									"end": 1914,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1979,
									"end": 1981,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1967,
									"end": 1977,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1963,
									"end": 1982,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1960,
									"end": 1961,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1956,
									"end": 1983,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1950,
									"end": 1954,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 1984,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2015,
									"end": 2019,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2003,
									"end": 2013,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2000,
									"end": 2020,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1997,
									"end": 2044,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1997,
									"end": 2044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1997,
									"end": 2044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2038,
									"end": 2042,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1997,
									"end": 2044,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 1997,
									"end": 2044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2093,
									"end": 2095,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2088,
									"end": 2091,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2084,
									"end": 2096,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2081,
									"end": 2082,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 2077,
									"end": 2097,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2071,
									"end": 2075,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2098,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2098,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2098,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2168,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2159,
									"end": 2164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2156,
									"end": 2169,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2228,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2211,
									"end": 2228,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2192,
									"end": 2193,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2181,
									"end": 2194,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2148,
									"end": 2230,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2152,
									"end": 2155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1792,
									"end": 2240,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1792,
									"end": 2240,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 2246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 2246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 2246,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1702,
									"end": 2246,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2422,
									"end": 3770,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 2422,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2540,
									"end": 2550,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2540,
									"end": 2550,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2562,
									"end": 2592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2562,
									"end": 2592,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2559,
									"end": 2615,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2559,
									"end": 2615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2559,
									"end": 2615,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2595,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2595,
									"end": 2613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 2595,
									"end": 2613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2595,
									"end": 2613,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 2595,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2713,
									"end": 2719,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2673,
									"end": 2711,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2705,
									"end": 2709,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2699,
									"end": 2710,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2673,
									"end": 2711,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 2673,
									"end": 2711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2673,
									"end": 2711,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2673,
									"end": 2711,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 2624,
									"end": 2720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2624,
									"end": 2720,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 2624,
									"end": 2720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2775,
									"end": 2779,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2775,
									"end": 2779,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2839,
									"end": 2841,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2828,
									"end": 2842,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2828,
									"end": 2842,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2856,
									"end": 2857,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2851,
									"end": 3513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 3513,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2851,
									"end": 3513,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3557,
									"end": 3558,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3660,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3660,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 3571,
									"end": 3660,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3626,
									"end": 3645,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3626,
									"end": 3645,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3626,
									"end": 3645,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3620,
									"end": 3646,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3571,
									"end": 3660,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 3571,
									"end": 3660,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2379,
									"end": 2380,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2375,
									"end": 2386,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2375,
									"end": 2386,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2375,
									"end": 2386,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2371,
									"end": 2395,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2367,
									"end": 2396,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2357,
									"end": 2397,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2403,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2410,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2399,
									"end": 2410,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2354,
									"end": 2411,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3673,
									"end": 3754,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3673,
									"end": 3754,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2821,
									"end": 3764,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 2821,
									"end": 3764,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 3513,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2851,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1649,
									"end": 1650,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1642,
									"end": 1656,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1642,
									"end": 1656,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1642,
									"end": 1656,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1686,
									"end": 1690,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1673,
									"end": 1691,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1673,
									"end": 1691,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2887,
									"end": 2907,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2887,
									"end": 2907,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2887,
									"end": 2907,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3018,
									"end": 3025,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3015,
									"end": 3016,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3012,
									"end": 3026,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3107,
									"end": 3126,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3107,
									"end": 3126,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3107,
									"end": 3126,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3101,
									"end": 3127,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3086,
									"end": 3128,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3086,
									"end": 3128,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3199,
									"end": 3226,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3199,
									"end": 3226,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3199,
									"end": 3226,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3199,
									"end": 3226,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3167,
									"end": 3168,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3155,
									"end": 3169,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3155,
									"end": 3169,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3155,
									"end": 3169,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3155,
									"end": 3169,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3053,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3034,
									"end": 3053,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3004,
									"end": 3240,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3008,
									"end": 3011,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3268,
									"end": 3274,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3259,
									"end": 3266,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3256,
									"end": 3275,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3454,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3253,
									"end": 3454,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3329,
									"end": 3348,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3329,
									"end": 3348,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3329,
									"end": 3348,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3323,
									"end": 3349,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3412,
									"end": 3413,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 3408,
									"end": 3422,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3408,
									"end": 3422,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3408,
									"end": 3422,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3424,
									"end": 3427,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 3404,
									"end": 3428,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3400,
									"end": 3437,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3396,
									"end": 3438,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3381,
									"end": 3439,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3366,
									"end": 3440,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3366,
									"end": 3440,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3454,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 3253,
									"end": 3454,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3500,
									"end": 3501,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3484,
									"end": 3498,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3484,
									"end": 3498,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3484,
									"end": 3498,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3480,
									"end": 3502,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3467,
									"end": 3503,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3467,
									"end": 3503,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2422,
									"end": 3770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2422,
									"end": 3770,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 2422,
									"end": 3770,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 928,
									"end": 15880,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9f840df995898bea655c762bec971127e4007415650db190c0beed62620368764736f6c63430008110033",
									".code": [
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "73CC48A6"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "73CC48A6"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "98D35F20"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "BDF95FEF"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "C327DEEF"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "20ED8D3"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "13AF4035"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "28E7677D"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "440F3D42"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 928,
											"end": 15880,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2448,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2448,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 329,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2838,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2838,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 4190,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4190,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4190,
											"end": 4784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1845,
											"end": 1884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5756,
											"end": 5788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5756,
											"end": 5788,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5789,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1845,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5577,
											"end": 5795,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 145,
											"end": 165,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 145,
											"end": 165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 127,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 127,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3427,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3427,
											"end": 3686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1793,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 229,
											"end": 234,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 229,
											"end": 234,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 215,
											"end": 225,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 215,
											"end": 234,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2525,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2525,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2539,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2546,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "F73C3C226AF96B7F1BA666A21B3CEAF2BE3EE6A365E3178FD9CD1EAAE0075AA8"
										},
										{
											"begin": 2562,
											"end": 2597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2562,
											"end": 2597,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 234,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 229,
											"end": 234,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 215,
											"end": 225,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 215,
											"end": 234,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 394,
											"end": 410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 394,
											"end": 410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2838,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 229,
											"end": 234,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 229,
											"end": 234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 229,
											"end": 234,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 215,
											"end": 225,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 215,
											"end": 234,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2911,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2911,
											"end": 2922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2931,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2947,
											"end": 2981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7033,
											"end": 7069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7085,
											"end": 7103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7078,
											"end": 7138,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2947,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2FCC274C3B72DD483AB201BFA87295E3817E8B9B10693219873B722CA1AF00C7"
										},
										{
											"begin": 2947,
											"end": 2981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7006,
											"end": 7024,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2947,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 6863,
											"end": 7144,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4367,
											"end": 4383,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4437,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4419,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 4419,
											"end": 4447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4419,
											"end": 4447,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4463,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4482,
											"end": 4487,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4482,
											"end": 4494,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4494,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4585,
											"end": 4590,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4591,
											"end": 4592,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4585,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4585,
											"end": 4593,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4617,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4549,
											"end": 4654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4654,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 4549,
											"end": 4654,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4687,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4677,
											"end": 4687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4729,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4677,
											"end": 4687,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4496,
											"end": 4499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4496,
											"end": 4499,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 4458,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4764,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 127,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 127,
											"end": 147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 127,
											"end": 147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 127,
											"end": 147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3584,
											"end": 3600,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3602,
											"end": 3618,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3655,
											"end": 3660,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3677,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3643,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3643,
											"end": 3678,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 3643,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3636,
											"end": 3678,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3427,
											"end": 3686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5455,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 5455,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5485,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 5455,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5517,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 5506,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5533,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5533,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5628,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5631,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5643,
											"end": 5648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5650,
											"end": 5667,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5631,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 5631,
											"end": 5668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5631,
											"end": 5668,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 5631,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5705,
											"end": 5717,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5668,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5683,
											"end": 5717,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5683,
											"end": 5717,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5611,
											"end": 5668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5699,
											"end": 5700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 5683,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5683,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5683,
											"end": 5717,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5679,
											"end": 5790,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5770,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5777,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E861B2BD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5741,
											"end": 5778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5679,
											"end": 5790,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5679,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5817,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5817,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5800,
											"end": 5817,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "SIGNEXTEND",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6155,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6155,
											"end": 6297,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6255,
											"end": 6271,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53C27C3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8439,
											"end": 8473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6238,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8240,
											"end": 8531,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6297,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 6155,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6508,
											"end": 6523,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 6508,
											"end": 6523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6508,
											"end": 6523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6508,
											"end": 6523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10067,
											"end": 10071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10137,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "SIGNEXTEND",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 10116,
											"end": 10142,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6466,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6466,
											"end": 6610,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6569,
											"end": 6584,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 6569,
											"end": 6584,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6569,
											"end": 6584,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6569,
											"end": 6584,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5EA081B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8420,
											"end": 8430,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8439,
											"end": 8473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8509,
											"end": 8524,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8489,
											"end": 8507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8525,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6548,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8240,
											"end": 8531,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6466,
											"end": 6610,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 6466,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6673,
											"end": 6677,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6684,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6686,
											"end": 6691,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 6657,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6657,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6657,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6712,
											"end": 6724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 6732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2830,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2911,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2911,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2964,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2991,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2964,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2991,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 2945,
											"end": 2991,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2991,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3019,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3019,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3019,
											"end": 3050,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3019,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3050,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3002,
											"end": 3050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3016,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3050,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3075,
											"end": 3079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2327,
											"end": 2328,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3075,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3075,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3103,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3061,
											"end": 3103,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3072,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3061,
											"end": 3072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3125,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3125,
											"end": 3151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3125,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3114,
											"end": 3151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3151,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3122,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3114,
											"end": 3122,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3114,
											"end": 3151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2408,
											"end": 2409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3180,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3162,
											"end": 3213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3213,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3213,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3245,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3245,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 2451,
											"end": 2453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3241,
											"end": 3273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3224,
											"end": 3273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3238,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3224,
											"end": 3238,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3238,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3298,
											"end": 3328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3298,
											"end": 3328,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3328,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3298,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3328,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 3284,
											"end": 3328,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3366,
											"end": 3370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3357,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3357,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3357,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3413,
											"end": 3566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3442,
											"end": 3484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3442,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3442,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3484,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3442,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3533,
											"end": 3548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3548,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3533,
											"end": 3555,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2541,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3499,
											"end": 3503,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3510,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3499,
											"end": 3530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3499,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3499,
											"end": 3555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3499,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3555,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3499,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3417,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3417,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3413,
											"end": 3566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3413,
											"end": 3566,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3413,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3401,
											"end": 3405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 3574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6893,
											"end": 8112,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 6893,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7014,
											"end": 7031,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7100,
											"end": 7130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7133,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7133,
											"end": 7138,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 7133,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7133,
											"end": 7144,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 7133,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7100,
											"end": 7144,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7100,
											"end": 7144,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7290,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7280,
											"end": 7290,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7290,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7290,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7280,
											"end": 7305,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 7280,
											"end": 7305,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7280,
											"end": 7305,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 7373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7276,
											"end": 7373,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7356,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7346,
											"end": 7356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7356,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7356,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C52F98D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7333,
											"end": 7357,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8799,
											"end": 8987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7373,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 7276,
											"end": 7373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7393,
											"end": 7404,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7393,
											"end": 7409,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 7389,
											"end": 7873,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7437,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7437,
											"end": 7441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7437,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 7437,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7437,
											"end": 7448,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 7437,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 7389,
											"end": 7873,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7389,
											"end": 7873,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 7389,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7696,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7696,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7685,
											"end": 7696,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7673,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7664,
											"end": 7697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 7664,
											"end": 7697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7664,
											"end": 7697,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 7664,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7660,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7697,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7697,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7774,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7649,
											"end": 7774,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7738,
											"end": 7747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7738,
											"end": 7747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7749,
											"end": 7760,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7749,
											"end": 7760,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7749,
											"end": 7760,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7749,
											"end": 7760,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7762,
											"end": 7773,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7723,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 7723,
											"end": 7774,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7762,
											"end": 7766,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7762,
											"end": 7766,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7723,
											"end": 7734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 7723,
											"end": 7774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7723,
											"end": 7774,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 7723,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7774,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7649,
											"end": 7774,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7649,
											"end": 7774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7858,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 7623,
											"end": 7858,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CBCEEE6F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7858,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 7623,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7991,
											"end": 8002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 8002,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 7975,
											"end": 8002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 7979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 7987,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7975,
											"end": 7987,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 7987,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 8002,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 7975,
											"end": 8002,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7975,
											"end": 8002,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 7971,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7971,
											"end": 8094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8052,
											"end": 8064,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "537FC545"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9172,
											"end": 9178,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 9205,
											"end": 9220,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9205,
											"end": 9220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9205,
											"end": 9220,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9187,
											"end": 9221,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9257,
											"end": 9272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9257,
											"end": 9272,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9257,
											"end": 9272,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9237,
											"end": 9255,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9230,
											"end": 9273,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9135,
											"end": 9153,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8030,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8992,
											"end": 9279,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7971,
											"end": 8094,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 7971,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7186,
											"end": 7197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 7186,
											"end": 7190,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 7186,
											"end": 7197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7186,
											"end": 7197,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 7186,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 8105,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6893,
											"end": 8112,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6893,
											"end": 8112,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6893,
											"end": 8112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6893,
											"end": 8112,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6893,
											"end": 8112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 2176,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1917,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1965,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 1972,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 1972,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1945,
											"end": 1973,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1945,
											"end": 1973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1945,
											"end": 1973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1973,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1945,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2007,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2007,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1988,
											"end": 2029,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2029,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1988,
											"end": 2029,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2054,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2054,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2044,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2093,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2081,
											"end": 2140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2124,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2140,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2081,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2154,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2154,
											"end": 2164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 2176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1917,
											"end": 2176,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 2176,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1917,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2193,
											"end": 2198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 2206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8469,
											"end": 9296,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 8469,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8793,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 8789,
											"end": 8825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 8789,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8784,
											"end": 8902,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 8889,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 8873,
											"end": 8889,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 8889,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8873,
											"end": 8889,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EAAFC59B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8867,
											"end": 8871,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8867,
											"end": 8871,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 8849,
											"end": 8890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8784,
											"end": 8902,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 8784,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8950,
											"end": 8955,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8914,
											"end": 8947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8950,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 8950,
											"end": 8969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8950,
											"end": 8969,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8950,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8914,
											"end": 8969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8914,
											"end": 8969,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1141,
											"name": "PUSH",
											"source": 3,
											"value": "2B"
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9012,
											"end": 9019,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9012,
											"end": 9027,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9012,
											"end": 9027,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9012,
											"end": 9027,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9012,
											"end": 9041,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9008,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9008,
											"end": 9289,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9078,
											"end": 9082,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9058,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 9058,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9058,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9008,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9008,
											"end": 9289,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9008,
											"end": 9289,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 9008,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 9114,
											"end": 9147,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 9114,
											"end": 9147,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9129,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9114,
											"end": 9129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9129,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9147,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 9114,
											"end": 9147,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9114,
											"end": 9147,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9110,
											"end": 9289,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 9183,
											"end": 9188,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9190,
											"end": 9194,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9196,
											"end": 9203,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9164,
											"end": 9204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9289,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 9110,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9276,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9261,
											"end": 9276,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9276,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9276,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9276,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61529E87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9244,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8799,
											"end": 8987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9110,
											"end": 9289,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 9110,
											"end": 9289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8654,
											"end": 9296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 9296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 9296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 9296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 9296,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 9296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6707,
											"end": 6963,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6707,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6860,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6860,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6838,
											"end": 6841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6845,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6838,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6838,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6860,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6860,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6830,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6928,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6913,
											"end": 6935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6936,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 6903,
											"end": 6945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6450,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6298,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6432,
											"end": 6441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 6432,
											"end": 6441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6298,
											"end": 6450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7480,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7220,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7320,
											"end": 7330,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7351,
											"end": 7354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7351,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7351,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7358,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7351,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7373,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7351,
											"end": 7373,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 7343,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7426,
											"end": 7448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7420,
											"end": 7449,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7461,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7416,
											"end": 7462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7416,
											"end": 7462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1473,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1252,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1369,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1382,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1419,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1396,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1396,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 1396,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1459,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1438,
											"end": 1465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1465,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1438,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1473,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1252,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10076,
											"end": 10530,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 10076,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10249,
											"end": 10260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10200,
											"end": 10212,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10200,
											"end": 10212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10242,
											"end": 10245,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10239,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 10233,
											"end": 10245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10260,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10233,
											"end": 10260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 10225,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10274,
											"end": 10290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10293,
											"end": 10307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10293,
											"end": 10307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10274,
											"end": 10307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10406,
											"end": 10408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10397,
											"end": 10409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10409,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 10397,
											"end": 10409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 10477,
											"end": 10499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10499,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 10477,
											"end": 10499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10519,
											"end": 10522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10519,
											"end": 10522,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 10530,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10076,
											"end": 10530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3582,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3658,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3695,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3716,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3706,
											"end": 3716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3716,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3695,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5774,
											"end": 6005,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5774,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5929,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5918,
											"end": 5929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5929,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5835,
											"end": 5847,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5835,
											"end": 5847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5880,
											"end": 5997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5918,
											"end": 5929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5958,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5948,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5889,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5889,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5880,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5880,
											"end": 5997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 598,
											"end": 1014,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 598,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 701,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 752,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 752,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 797,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 793,
											"end": 804,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 804,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 780,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 780,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 780,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 780,
											"end": 805,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 780,
											"end": 805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 839,
											"end": 843,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 854,
											"end": 857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 839,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 839,
											"end": 858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 839,
											"end": 858,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 839,
											"end": 858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 858,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 820,
											"end": 858,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 820,
											"end": 858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 820,
											"end": 858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 891,
											"end": 892,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 880,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 880,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 880,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 873,
											"end": 892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 892,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 873,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 892,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 873,
											"end": 892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 892,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 911,
											"end": 919,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 924,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 907,
											"end": 966,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 907,
											"end": 966,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 945,
											"end": 950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 945,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 907,
											"end": 966,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 907,
											"end": 966,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 765,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 752,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 752,
											"end": 977,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 752,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 752,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 994,
											"end": 997,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 994,
											"end": 1006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3925,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3925,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4185,
											"end": 4188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4158,
											"end": 4189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4189,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4158,
											"end": 4189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4136,
											"end": 4140,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4148,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4153,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4129,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4129,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4189,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4189,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3925,
											"end": 4197,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3925,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 5587,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4877,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4954,
											"end": 4969,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4951,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4940,
											"end": 4951,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4940,
											"end": 4969,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4999,
											"end": 5015,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4980,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4980,
											"end": 5050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4877,
											"end": 5587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4877,
											"end": 5587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 5050,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 4980,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5099,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5127,
											"end": 5131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5127,
											"end": 5136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5136,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5149,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5138,
											"end": 5149,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5149,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 5116,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5116,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5116,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5102,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5150,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5150,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5216,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5216,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 5201,
											"end": 5241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5201,
											"end": 5241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5259,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5252,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5284,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5284,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5281,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5271,
											"end": 5281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5281,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5320,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 5350,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5339,
											"end": 5347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5393,
											"end": 5394,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5386,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5434,
											"end": 5453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5456,
											"end": 5481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5456,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5456,
											"end": 5481,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 5456,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5481,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 5434,
											"end": 5481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5434,
											"end": 5481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5499,
											"end": 5500,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5492,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5527,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5562,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5568,
											"end": 5579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5562,
											"end": 5579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5579,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 5562,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 5587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 8365,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7953,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8123,
											"end": 8142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8106,
											"end": 8142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8106,
											"end": 8142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 8186,
											"end": 8191,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 8175,
											"end": 8195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 8175,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8224,
											"end": 8235,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8215,
											"end": 8221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8215,
											"end": 8235,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8267,
											"end": 8271,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 8258,
											"end": 8277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8258,
											"end": 8277,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8258,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8277,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 8292,
											"end": 8300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8292,
											"end": 8300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 8208,
											"end": 8312,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8331,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8331,
											"end": 8335,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8343,
											"end": 8346,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8353,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 8355,
											"end": 8356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8331,
											"end": 8342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 8331,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8331,
											"end": 8357,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 8331,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8357,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 8365,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7953,
											"end": 8365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4225,
											"end": 4439,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4225,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4328,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4377,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4402,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4388,
											"end": 4402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4362,
											"end": 4365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4422,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4422,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 13753,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 12525,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 12737,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12725,
											"end": 12737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 12737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 12737,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12800,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 12800,
											"end": 12805,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12800,
											"end": 12809,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 12800,
											"end": 12811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12800,
											"end": 12811,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 12800,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12767,
											"end": 12811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12767,
											"end": 12811,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12907,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12895,
											"end": 12907,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12907,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12907,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12895,
											"end": 12925,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 12895,
											"end": 12925,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 12895,
											"end": 12925,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 12891,
											"end": 12999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 12891,
											"end": 12999,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12982,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12970,
											"end": 12982,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12982,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12982,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12970,
											"end": 12982,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61529E87"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8961,
											"end": 8980,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8943,
											"end": 8981,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12953,
											"end": 12983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 8799,
											"end": 8987,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12891,
											"end": 12999,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 12891,
											"end": 12999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13015,
											"end": 13036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13039,
											"end": 13049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 13039,
											"end": 13051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 13039,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13015,
											"end": 13051,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13015,
											"end": 13051,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13066,
											"end": 13094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 13135,
											"end": 13136,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13155,
											"end": 13163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13155,
											"end": 13170,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13105,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 13097,
											"end": 13116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 13097,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13066,
											"end": 13185,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13066,
											"end": 13185,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13204,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 13227,
											"end": 13233,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13235,
											"end": 13243,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13245,
											"end": 13250,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 13252,
											"end": 13256,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 13204,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 13204,
											"end": 13257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13204,
											"end": 13257,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 13204,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13200,
											"end": 13684,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13200,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 13200,
											"end": 13684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13378,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 13394,
											"end": 13399,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13410,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 13394,
											"end": 13410,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13394,
											"end": 13410,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13412,
											"end": 13417,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 13419,
											"end": 13425,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13427,
											"end": 13435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13378,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 13378,
											"end": 13436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13378,
											"end": 13436,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 13378,
											"end": 13436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13505,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 13352,
											"end": 13505,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13479,
											"end": 13486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13479,
											"end": 13486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13479,
											"end": 13486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13479,
											"end": 13486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12525,
											"end": 13753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12525,
											"end": 13753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12525,
											"end": 13753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12525,
											"end": 13753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13352,
											"end": 13505,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 13352,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13623,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 13607,
											"end": 13623,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13637,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13637,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13607,
											"end": 13637,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13656,
											"end": 13668,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 13607,
											"end": 13612,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 13656,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 13656,
											"end": 13668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13656,
											"end": 13668,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 13656,
											"end": 13668,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12876,
											"end": 13695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12876,
											"end": 13695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12853,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 12853,
											"end": 12857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12853,
											"end": 12862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 12853,
											"end": 12864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12853,
											"end": 12864,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 12853,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12748,
											"end": 13695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 13733,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 13744,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 13728,
											"end": 13744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13728,
											"end": 13744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDE0F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13712,
											"end": 13745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 13712,
											"end": 13745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 10460,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9594,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9857,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9857,
											"end": 10402,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9908,
											"end": 9930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9933,
											"end": 9938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9933,
											"end": 9943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 9933,
											"end": 9945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 9933,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9908,
											"end": 9945,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9908,
											"end": 9945,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9982,
											"end": 9987,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9982,
											"end": 9998,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9982,
											"end": 9998,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 9965,
											"end": 9981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 9965,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9960,
											"end": 10089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9960,
											"end": 10089,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10045,
											"end": 10050,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10045,
											"end": 10061,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 10045,
											"end": 10061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10045,
											"end": 10061,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10063,
											"end": 10072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B80573F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 10027,
											"end": 10073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9960,
											"end": 10089,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 9960,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10105,
											"end": 10126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10129,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 10129,
											"end": 10142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "tag",
											"source": 3,
											"value": "290"
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10105,
											"end": 10142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10105,
											"end": 10142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10185,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10226,
											"end": 10227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10254,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10246,
											"end": 10261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10196,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 10188,
											"end": 10207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 10188,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10157,
											"end": 10276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10318,
											"end": 10324,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10326,
											"end": 10334,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10336,
											"end": 10341,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10343,
											"end": 10347,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10295,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "tag",
											"source": 3,
											"value": "292"
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10369,
											"end": 10376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10369,
											"end": 10376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10369,
											"end": 10376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 10460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 10460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 10460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9594,
											"end": 10460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9893,
											"end": 10402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9893,
											"end": 10402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9893,
											"end": 10402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9891,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9879,
											"end": 9884,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 9879,
											"end": 9891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9879,
											"end": 9891,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 9879,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9857,
											"end": 10402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 9857,
											"end": 10402,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9857,
											"end": 10402,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 9857,
											"end": 10402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10451,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 10435,
											"end": 10451,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10435,
											"end": 10451,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDE0F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10419,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 10419,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9207,
											"end": 9843,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9207,
											"end": 9843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9345,
											"end": 9348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9345,
											"end": 9354,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 9338,
											"end": 9509,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9433,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9471,
											"end": 9473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 9463,
											"end": 9473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9473,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9495,
											"end": 9497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 9488,
											"end": 9497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9497,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9363,
											"end": 9365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9356,
											"end": 9365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 9338,
											"end": 9509,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9509,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 9338,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9679,
											"end": 9689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9679,
											"end": 9689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9739,
											"end": 9750,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9611,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9595,
											"end": 9612,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9594,
											"end": 9617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9675,
											"end": 9701,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9735,
											"end": 9757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9735,
											"end": 9757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9788,
											"end": 9809,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9775,
											"end": 9810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9207,
											"end": 9843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 429,
											"end": 712,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 429,
											"end": 712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 598,
											"end": 609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 598,
											"end": 609,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 550,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 582,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 591,
											"end": 594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 582,
											"end": 588,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 582,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 582,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 582,
											"end": 594,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 582,
											"end": 594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 609,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 582,
											"end": 609,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 574,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 574,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 574,
											"end": 610,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 610,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 574,
											"end": 610,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 574,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 574,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 662,
											"end": 688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 652,
											"end": 694,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 652,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 429,
											"end": 712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10169,
											"end": 10331,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 10169,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 10304,
											"end": 10308,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10319,
											"end": 10322,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 10304,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 10294,
											"end": 10297,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10294,
											"end": 10301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10294,
											"end": 10301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10301,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 10294,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10294,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 10294,
											"end": 10323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4913,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4597,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4858,
											"end": 4863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4904,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4883,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4878,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4851,
											"end": 4905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4905,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 4851,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4799,
											"end": 4803,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4833,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4817,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 4813,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4834,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4792,
											"end": 4834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4905,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4905,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4913,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4597,
											"end": 4913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6442,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 6189,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6400,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 6385,
											"end": 6400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6279,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6267,
											"end": 6279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6312,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6312,
											"end": 6434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6385,
											"end": 6419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6385,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6385,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6750,
											"end": 7231,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 6750,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6922,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6938,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 6482,
											"end": 6483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6938,
											"end": 6959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 6959,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 6938,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6926,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 6922,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6922,
											"end": 6960,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 6922,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6960,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 6909,
											"end": 6960,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 7002,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 7002,
											"end": 7008,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7002,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7002,
											"end": 7026,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 7002,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 6991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 6991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 6987,
											"end": 7027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6987,
											"end": 7027,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 6987,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 7027,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6971,
											"end": 7027,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 7027,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7055,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7070,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 6569,
											"end": 6570,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 7070,
											"end": 7076,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7070,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7070,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7055,
											"end": 7096,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 7055,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7096,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7038,
											"end": 7096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 7153,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7153,
											"end": 7159,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7153,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7175,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 7153,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 6610,
											"end": 6611,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7190,
											"end": 7196,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7190,
											"end": 7212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 7190,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 7124,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7124,
											"end": 7223,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 7124,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7107,
											"end": 7121,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7107,
											"end": 7121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7107,
											"end": 7121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7107,
											"end": 7223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6750,
											"end": 7231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6750,
											"end": 7231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10812,
											"end": 12182,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 10812,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11027,
											"end": 11031,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11185,
											"end": 11191,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11185,
											"end": 11200,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11185,
											"end": 11200,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11185,
											"end": 11200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11204,
											"end": 11205,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 11185,
											"end": 11205,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11246,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 11181,
											"end": 11246,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11229,
											"end": 11234,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11222,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 11222,
											"end": 11234,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11181,
											"end": 11246,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 11181,
											"end": 11246,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11491,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11501,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11486,
											"end": 11501,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11501,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11501,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11466,
											"end": 11501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11472,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11466,
											"end": 11482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11501,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11466,
											"end": 11501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11466,
											"end": 11501,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11462,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 11462,
											"end": 11542,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11525,
											"end": 11530,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 11518,
											"end": 11530,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11462,
											"end": 11542,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 11462,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11552,
											"end": 11573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11576,
											"end": 11600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 11576,
											"end": 11584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 11576,
											"end": 11600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11576,
											"end": 11600,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 11576,
											"end": 11600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11552,
											"end": 11600,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11552,
											"end": 11600,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11633,
											"end": 11638,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11645,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 11615,
											"end": 11645,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11629,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11645,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 11615,
											"end": 11645,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11615,
											"end": 11645,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11611,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 11611,
											"end": 11686,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11669,
											"end": 11674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 11662,
											"end": 11674,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11611,
											"end": 11686,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 11611,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11879,
											"end": 11891,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11879,
											"end": 11891,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1231,
											"end": 1236,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 11879,
											"end": 11913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11879,
											"end": 11891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11918,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11875,
											"end": 11959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 11875,
											"end": 11959,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11942,
											"end": 11947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11935,
											"end": 11947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11935,
											"end": 11947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11935,
											"end": 11947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11935,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 11935,
											"end": 11947,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11875,
											"end": 11959,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 11875,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12004,
											"end": 12020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12020,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12004,
											"end": 12020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11971,
											"end": 11990,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12003,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11993,
											"end": 12021,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12032,
											"end": 12109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 12032,
											"end": 12109,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12092,
											"end": 12097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 12085,
											"end": 12097,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12032,
											"end": 12109,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 12032,
											"end": 12109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12153,
											"end": 12163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12153,
											"end": 12163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12165,
											"end": 12173,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12165,
											"end": 12173,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 12165,
											"end": 12173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12165,
											"end": 12173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DE8F50A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12126,
											"end": 12142,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12142,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12142,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12142,
											"name": "PUSH",
											"source": 3,
											"value": "DE8F50A1"
										},
										{
											"begin": 12126,
											"end": 12142,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12151,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 12143,
											"end": 12151,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12153,
											"end": 12163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12165,
											"end": 12173,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 12126,
											"end": 12174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 12126,
											"end": 12174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 12126,
											"end": 12174,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12119,
											"end": 12174,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 10812,
											"end": 12182,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10812,
											"end": 12182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14126,
											"end": 15268,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 14126,
											"end": 15268,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14325,
											"end": 14329,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14342,
											"end": 14355,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14358,
											"end": 14382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 14358,
											"end": 14366,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 14358,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 14358,
											"end": 14382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14358,
											"end": 14382,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 14358,
											"end": 14382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14342,
											"end": 14382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14342,
											"end": 14382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "tag",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4717,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4737,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14444,
											"end": 14466,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 14469,
											"end": 14474,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14469,
											"end": 14479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 14469,
											"end": 14481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 14469,
											"end": 14481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14444,
											"end": 14481,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14501,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 14444,
											"end": 14481,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14518,
											"end": 14525,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 14501,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 14501,
											"end": 14526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14501,
											"end": 14526,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 14501,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14496,
											"end": 14607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 14496,
											"end": 14607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14572,
											"end": 14579,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14581,
											"end": 14590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B80573F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14554,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 14554,
											"end": 14591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14496,
											"end": 14607,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 14496,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14734,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 14718,
											"end": 14734,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14734,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14734,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14623,
											"end": 14643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14623,
											"end": 14643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 14646,
											"end": 14769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 14718,
											"end": 14754,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 14718,
											"end": 14754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14718,
											"end": 14754,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 14718,
											"end": 14754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14656,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14656,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 14646,
											"end": 14769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14646,
											"end": 14769,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 14646,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14623,
											"end": 14769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14623,
											"end": 14769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14801,
											"end": 14807,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14788,
											"end": 14790,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14788,
											"end": 14797,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "PUSH",
											"source": 3,
											"value": "FFFF"
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14788,
											"end": 14807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14784,
											"end": 14852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 14784,
											"end": 14852,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 14828,
											"end": 14836,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14784,
											"end": 14852,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 14784,
											"end": 14852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14886,
											"end": 14892,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14886,
											"end": 14902,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 14886,
											"end": 14902,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14886,
											"end": 14902,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14872,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14882,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 14870,
											"end": 14882,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14882,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14902,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14866,
											"end": 14947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 14866,
											"end": 14947,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14923,
											"end": 14931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14923,
											"end": 14931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14923,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 14923,
											"end": 14931,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14866,
											"end": 14947,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 14866,
											"end": 14947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 15002,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 15028,
											"end": 15036,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15028,
											"end": 15043,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15018,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15025,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 15011,
											"end": 15043,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 15011,
											"end": 15043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15011,
											"end": 15043,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 15011,
											"end": 15043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15002,
											"end": 15005,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15002,
											"end": 15005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15002,
											"end": 15010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 15002,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15002,
											"end": 15044,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 15002,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15059,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 15059,
											"end": 15062,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15070,
											"end": 15077,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 15059,
											"end": 15069,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 15059,
											"end": 15078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15059,
											"end": 15078,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 15059,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 15093,
											"end": 15096,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15104,
											"end": 15112,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 15093,
											"end": 15113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15113,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 15093,
											"end": 15113,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15093,
											"end": 15113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15179,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 15145,
											"end": 15147,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15145,
											"end": 15158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15145,
											"end": 15158,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15145,
											"end": 15158,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15160,
											"end": 15163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15160,
											"end": 15167,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15160,
											"end": 15167,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15160,
											"end": 15167,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15169,
											"end": 15171,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15169,
											"end": 15178,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 15169,
											"end": 15178,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15169,
											"end": 15178,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 15132,
											"end": 15179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15132,
											"end": 15179,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 15132,
											"end": 15179,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15128,
											"end": 15227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15128,
											"end": 15227,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 15128,
											"end": 15227,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15207,
											"end": 15211,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 15200,
											"end": 15211,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15128,
											"end": 15227,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 15128,
											"end": 15227,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14429,
											"end": 15238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14429,
											"end": 15238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14429,
											"end": 15238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14415,
											"end": 14427,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 14415,
											"end": 14420,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 14415,
											"end": 14425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 14415,
											"end": 14427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14415,
											"end": 14427,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 14415,
											"end": 14427,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "346"
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 14393,
											"end": 15238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15255,
											"end": 15260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15255,
											"end": 15260,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 14126,
											"end": 15268,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14126,
											"end": 15268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5813,
											"end": 6043,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5813,
											"end": 6043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5920,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5980,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5964,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5980,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6035,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5953,
											"end": 6035,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 6035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 6004,
											"end": 6008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6020,
											"end": 6021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6027,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6034,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5997,
											"end": 6035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10503,
											"end": 14574,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 10503,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10568,
											"end": 10574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "PUSH",
											"source": 5,
											"value": "2000"
										},
										{
											"begin": 12372,
											"end": 12376,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12372,
											"end": 12383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12372,
											"end": 12391,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12372,
											"end": 12391,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10965,
											"end": 10967,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10947,
											"end": 10968,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "PUSH",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 10984,
											"end": 11002,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10984,
											"end": 11002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10984,
											"end": 11002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10977,
											"end": 11007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11043,
											"end": 11068,
											"name": "PUSH",
											"source": 8,
											"value": "4C6F6E67206B657973206E6F74207065726D6974746564000000000000000000"
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11023,
											"end": 11041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11069,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11086,
											"end": 11104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 10763,
											"end": 11110,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "tag",
											"source": 5,
											"value": "375"
										},
										{
											"begin": 12364,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12434,
											"end": 12445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12460,
											"end": 12471,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12491,
											"end": 12500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "tag",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12510,
											"end": 12514,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12510,
											"end": 12521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12524,
											"end": 12526,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 12510,
											"end": 12526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12526,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12556,
											"end": 12568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12653,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12647,
											"end": 12649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12641,
											"end": 12645,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 12637,
											"end": 12650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12633,
											"end": 12654,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12655,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12619,
											"end": 12655,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12619,
											"end": 12655,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12705,
											"end": 12709,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12705,
											"end": 12716,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12696,
											"end": 12697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12700,
											"end": 12702,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12696,
											"end": 12702,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12696,
											"end": 12716,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12692,
											"end": 12861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12692,
											"end": 12861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12692,
											"end": 12861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 12776,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 12776,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 12780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 12780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12765,
											"end": 12780,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12784,
											"end": 12785,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 12764,
											"end": 12785,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 12758,
											"end": 12761,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 12758,
											"end": 12785,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12816,
											"end": 12830,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 12815,
											"end": 12841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12815,
											"end": 12841,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 12692,
											"end": 12861,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 12692,
											"end": 12861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 13033,
											"name": "PUSH",
											"source": 5,
											"value": "FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"
										},
										{
											"begin": 13032,
											"end": 13033,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 12907,
											"end": 13033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 13033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 13033,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 13033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12907,
											"end": 13033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12879,
											"end": 13033,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12879,
											"end": 13033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12879,
											"end": 13033,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 12879,
											"end": 13033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12879,
											"end": 13033,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13060,
											"end": 13154,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13052,
											"end": 13155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13052,
											"end": 13155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13052,
											"end": 13155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13052,
											"end": 13155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13052,
											"end": 13155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12533,
											"end": 12535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12528,
											"end": 12535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "378"
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "tag",
											"source": 5,
											"value": "379"
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12486,
											"end": 13171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13444,
											"end": 13446,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 13325,
											"end": 13328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13352,
											"end": 13418,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000"
										},
										{
											"begin": 13325,
											"end": 13418,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13446,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13236,
											"end": 13302,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"
										},
										{
											"begin": 13209,
											"end": 13302,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13208,
											"end": 13447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13447,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13185,
											"end": 13447,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13721,
											"end": 13723,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 13602,
											"end": 13605,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13629,
											"end": 13695,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000"
										},
										{
											"begin": 13602,
											"end": 13695,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 13723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 13723,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 13486,
											"end": 13489,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13513,
											"end": 13579,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"
										},
										{
											"begin": 13486,
											"end": 13579,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13485,
											"end": 13724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13462,
											"end": 13724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13462,
											"end": 13724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13758,
											"end": 13761,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13753,
											"end": 13754,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 13746,
											"end": 13749,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13746,
											"end": 13754,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13746,
											"end": 13754,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 13745,
											"end": 13761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13739,
											"end": 13761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13739,
											"end": 13761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14035,
											"end": 14037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13916,
											"end": 13919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13943,
											"end": 14009,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000"
										},
										{
											"begin": 13916,
											"end": 14009,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13915,
											"end": 14037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13915,
											"end": 14037,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 13800,
											"end": 13803,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13827,
											"end": 13893,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"
										},
										{
											"begin": 13800,
											"end": 13893,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13799,
											"end": 14038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13776,
											"end": 14038,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13776,
											"end": 14038,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14312,
											"end": 14314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14193,
											"end": 14196,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14193,
											"end": 14286,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14192,
											"end": 14314,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 14077,
											"end": 14080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14104,
											"end": 14170,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14077,
											"end": 14170,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14076,
											"end": 14315,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14053,
											"end": 14315,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14053,
											"end": 14315,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14476,
											"end": 14479,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 14469,
											"end": 14472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14469,
											"end": 14479,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14469,
											"end": 14479,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 14354,
											"end": 14357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14381,
											"end": 14447,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14354,
											"end": 14447,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14353,
											"end": 14480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14330,
											"end": 14480,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14330,
											"end": 14480,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14510,
											"end": 14512,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 14503,
											"end": 14506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14503,
											"end": 14512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14503,
											"end": 14512,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 14516,
											"end": 14522,
											"name": "PUSH",
											"source": 5,
											"value": "FFFF"
										},
										{
											"begin": 14502,
											"end": 14522,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14495,
											"end": 14522,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14495,
											"end": 14522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14495,
											"end": 14522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14495,
											"end": 14522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14551,
											"end": 14554,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14555,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 14574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 14574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 14574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10503,
											"end": 14574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1020,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 1020,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1119,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1119,
											"end": 1132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1132,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1119,
											"end": 1132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1119,
											"end": 1137,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1115,
											"end": 1196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1171,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1184,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 1171,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1165,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 1165,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1153,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1153,
											"end": 1185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1115,
											"end": 1196,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1115,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1318,
											"end": 1329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 1449,
											"end": 1509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1493,
											"end": 1494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1483,
											"end": 1495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1449,
											"end": 1509,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 1449,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1529,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1522,
											"end": 1539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4539,
											"end": 4685,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4539,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4648,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4655,
											"end": 4658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4660,
											"end": 4664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4670,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4666,
											"end": 4677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 4648,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15571,
											"end": 15877,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 15571,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15708,
											"end": 15712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15744,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15725,
											"end": 15812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 15725,
											"end": 15812,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15795,
											"end": 15800,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15788,
											"end": 15800,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 15788,
											"end": 15800,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15725,
											"end": 15812,
											"name": "tag",
											"source": 3,
											"value": "408"
										},
										{
											"begin": 15725,
											"end": 15812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15836,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7BF41D77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15848,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15855,
											"name": "PUSH",
											"source": 3,
											"value": "F7E83AEE"
										},
										{
											"begin": 15829,
											"end": 15855,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15856,
											"end": 15860,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15856,
											"end": 15860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15862,
											"end": 15868,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15862,
											"end": 15868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 15829,
											"end": 15869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "tag",
											"source": 3,
											"value": "409"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "tag",
											"source": 3,
											"value": "411"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 15829,
											"end": 15869,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 15829,
											"end": 15869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2970,
											"end": 2974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2970,
											"end": 2981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 2955,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2993,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3018,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3047,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 3047,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3028,
											"end": 3056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3084,
											"end": 3096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3096,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3066,
											"end": 3151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3124,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3124,
											"end": 3135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3124,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3124,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3124,
											"end": 3139,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 3124,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 3112,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3294,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3480,
											"end": 3505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3602,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3579,
											"end": 3602,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3576,
											"end": 3662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3621,
											"end": 3648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3662,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3576,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3695,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3772,
											"end": 3775,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3835,
											"end": 3859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3894,
											"end": 3896,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3842,
											"end": 3846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3886,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3910,
											"end": 3919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3790,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3783,
											"end": 3792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 3765,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4017,
											"end": 4019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4025,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4017,
											"end": 4025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4017,
											"end": 4025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4009,
											"end": 4026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4146,
											"end": 4168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4103,
											"end": 4112,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4087,
											"end": 4113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4219,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4185,
											"end": 4220,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4261,
											"end": 4264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4264,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 4271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 4271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2171,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 2004,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 2099,
											"end": 2102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2126,
											"end": 2134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 2116,
											"end": 2135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2116,
											"end": 2135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 2152,
											"end": 2155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2157,
											"end": 2163,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2145,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 2145,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2067,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2004,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "120"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 170,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 14,
											"end": 170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 80,
											"end": 100,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 80,
											"end": 100,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 140,
											"end": 144,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 129,
											"end": 145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 129,
											"end": 145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 119,
											"end": 146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 119,
											"end": 146,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 109,
											"end": 164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 109,
											"end": 164,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 160,
											"end": 161,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 150,
											"end": 162,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 109,
											"end": 164,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 109,
											"end": 164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 175,
											"end": 317,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 175,
											"end": 317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 261,
											"end": 292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 261,
											"end": 292,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 251,
											"end": 293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 251,
											"end": 293,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 241,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 241,
											"end": 311,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 307,
											"end": 308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 297,
											"end": 309,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 241,
											"end": 311,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 241,
											"end": 311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 175,
											"end": 317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 175,
											"end": 317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 322,
											"end": 668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 420,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 467,
											"end": 469,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 455,
											"end": 464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 446,
											"end": 453,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 442,
											"end": 465,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 438,
											"end": 470,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 435,
											"end": 487,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 435,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 435,
											"end": 487,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 481,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 473,
											"end": 485,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 435,
											"end": 487,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 435,
											"end": 487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 506,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 506,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 506,
											"end": 533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 506,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 506,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 496,
											"end": 533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 496,
											"end": 533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 583,
											"end": 585,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 572,
											"end": 581,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 568,
											"end": 586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 555,
											"end": 587,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 596,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 632,
											"end": 637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 596,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 596,
											"end": 638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 596,
											"end": 638,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 596,
											"end": 638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 657,
											"end": 662,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 647,
											"end": 662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 647,
											"end": 662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 647,
											"end": 662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 322,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 673,
											"end": 931,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 673,
											"end": 931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 732,
											"end": 738,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 753,
											"end": 805,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 753,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 753,
											"end": 805,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 791,
											"end": 803,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 753,
											"end": 805,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 753,
											"end": 805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 827,
											"end": 850,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 859,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 859,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 859,
											"end": 901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1411,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1284,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1355,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1336,
											"end": 1356,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1376,
											"end": 1380,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1373,
											"end": 1374,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1366,
											"end": 1381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1400,
											"end": 1404,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1405,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1673,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 1416,
											"end": 1673,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1537,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1520,
											"end": 1537,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1567,
											"end": 1585,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1586,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1552,
											"end": 1586,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1549,
											"end": 1611,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 1546,
											"end": 1634,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 1614,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1614,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1614,
											"end": 1632,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 1614,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1654,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1667,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1673,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1953,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 1678,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1751,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1818,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1868,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1868,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1892,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1892,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1893,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1916,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1828,
											"end": 1916,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1896,
											"end": 1914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1953,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1678,
											"end": 1953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1678,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 2488,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 1958,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2000,
											"end": 2005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2038,
											"end": 2044,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2030,
											"end": 2057,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2020,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 2020,
											"end": 2075,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2072,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2069,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2073,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2020,
											"end": 2075,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 2020,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2114,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2133,
											"end": 2151,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2129,
											"end": 2131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2126,
											"end": 2152,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2175,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 2123,
											"end": 2175,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2155,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 2155,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2223,
											"end": 2236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2223,
											"end": 2236,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2219,
											"end": 2246,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2248,
											"end": 2252,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2215,
											"end": 2253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2199,
											"end": 2254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2277,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2325,
											"end": 2328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2318,
											"end": 2322,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2297,
											"end": 2323,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2294,
											"end": 2329,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2346,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 2291,
											"end": 2346,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2340,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2344,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2346,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 2291,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2409,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2392,
											"end": 2398,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2379,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2410,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2448,
											"end": 2452,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2453,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2457,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2419,
											"end": 2457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2441,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 2488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1958,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 4175,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 2493,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2622,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 2585,
											"end": 2640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2636,
											"end": 2637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2634,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2626,
											"end": 2638,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 2585,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2679,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2758,
											"end": 2760,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2754,
											"end": 2756,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2751,
											"end": 2761,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 2748,
											"end": 2784,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2764,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 2764,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2803,
											"end": 2813,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2857,
											"end": 2859,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2833,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2833,
											"end": 2861,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 2833,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 2910,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2980,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2980,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 2980,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 2985,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 2985,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 2985,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2938,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2926,
											"end": 2938,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3012,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3012,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2997,
											"end": 3012,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2994,
											"end": 3029,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2994,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2994,
											"end": 3029,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3022,
											"end": 3023,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3015,
											"end": 3027,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2994,
											"end": 3029,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 2994,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3061,
											"end": 3063,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3049,
											"end": 3064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3064,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3038,
											"end": 3064,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3081,
											"end": 3096,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3162,
											"end": 3179,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3213,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3198,
											"end": 3209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3195,
											"end": 3214,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3301,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3192,
											"end": 3301,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3273,
											"end": 3287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3192,
											"end": 3301,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 3192,
											"end": 3301,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3324,
											"end": 3348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3375,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3411,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3395,
											"end": 3421,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3391,
											"end": 3426,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3388,
											"end": 3513,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 3388,
											"end": 3513,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3498,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3494,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3499,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3388,
											"end": 3513,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 3388,
											"end": 3513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 3539,
											"end": 3561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3611,
											"end": 3613,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3609,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3590,
											"end": 3615,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3642,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3631,
											"end": 3647,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3734,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 3628,
											"end": 3734,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3688,
											"end": 3689,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3719,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3706,
											"end": 3720,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3734,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 3628,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3803,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3790,
											"end": 3798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3782,
											"end": 3799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3778,
											"end": 3804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 3761,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3810,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 3761,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3747,
											"end": 3811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3881,
											"end": 3897,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3881,
											"end": 3897,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3881,
											"end": 3897,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 3987,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3878,
											"end": 3987,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3967,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3957,
											"end": 3973,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3878,
											"end": 3987,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 3878,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 4068,
											"end": 4071,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 4063,
											"end": 4065,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4052,
											"end": 4060,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4048,
											"end": 4050,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4061,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 4023,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4023,
											"end": 4072,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 4023,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4000,
											"end": 4073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3106,
											"end": 3118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4124,
											"end": 4136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 3073,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4164,
											"end": 4169,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 4175,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2493,
											"end": 4175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4180,
											"end": 4650,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4180,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4315,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4370,
											"end": 4372,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4358,
											"end": 4367,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4345,
											"end": 4368,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4373,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4390,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 4338,
											"end": 4390,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4386,
											"end": 4387,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4383,
											"end": 4384,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4388,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4390,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 4338,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4426,
											"end": 4435,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4436,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4477,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4451,
											"end": 4457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4495,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 4445,
											"end": 4495,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4445,
											"end": 4495,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 4445,
											"end": 4495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 4585,
											"end": 4592,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4576,
											"end": 4582,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4574,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4561,
											"end": 4583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 4514,
											"end": 4593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4514,
											"end": 4593,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 4514,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4593,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4640,
											"end": 4642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 4643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4612,
											"end": 4644,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 4612,
											"end": 4644,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4180,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 5077,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 4655,
											"end": 5077,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4699,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4739,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4728,
											"end": 4740,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4786,
											"end": 4787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4810,
											"end": 4816,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4807,
											"end": 4808,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4804,
											"end": 4817,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4941,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4928,
											"end": 4941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4947,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4911,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4911,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4900,
											"end": 4911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4916,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4896,
											"end": 4916,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4889,
											"end": 4948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4837,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 4796,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 4803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5003,
											"end": 5004,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5000,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 4993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4982,
											"end": 4985,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 4994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4974,
											"end": 5001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4967,
											"end": 5005,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5066,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5061,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5055,
											"end": 5062,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5052,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5042,
											"end": 5048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5038,
											"end": 5053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5034,
											"end": 5063,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5032,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5025,
											"end": 5064,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5021,
											"end": 5071,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5071,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5014,
											"end": 5071,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 5077,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 5077,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 5077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 5077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4655,
											"end": 5077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5255,
											"end": 5257,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5237,
											"end": 5258,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5275,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 5315,
											"end": 5317,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5313,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5300,
											"end": 5318,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5292,
											"end": 5298,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 5275,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5275,
											"end": 5319,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 5275,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5267,
											"end": 5319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5367,
											"end": 5377,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5359,
											"end": 5365,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5378,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5350,
											"end": 5352,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5348,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5082,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5572,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 5390,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5486,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5475,
											"end": 5498,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5503,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 5468,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5556,
											"end": 5565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5539,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5539,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6008,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6008,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6144,
											"end": 6153,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6137,
											"end": 6158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 6215,
											"end": 6217,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6204,
											"end": 6213,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 6175,
											"end": 6219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6230,
											"end": 6632,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 6230,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6350,
											"end": 6356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6403,
											"end": 6405,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6391,
											"end": 6400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6382,
											"end": 6389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6378,
											"end": 6401,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6406,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6419,
											"end": 6420,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6417,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6446,
											"end": 6469,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6492,
											"end": 6510,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6484,
											"end": 6490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6481,
											"end": 6511,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6528,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 6478,
											"end": 6528,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6524,
											"end": 6525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6514,
											"end": 6526,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6528,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 6478,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6618,
											"end": 6625,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6609,
											"end": 6615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6607,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6594,
											"end": 6616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6547,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 6547,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7529,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 7149,
											"end": 7529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 7224,
											"end": 7236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7271,
											"end": 7283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7271,
											"end": 7283,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7271,
											"end": 7283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 7292,
											"end": 7353,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7350,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7334,
											"end": 7351,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 7324,
											"end": 7351,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7324,
											"end": 7351,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7353,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 7292,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7399,
											"end": 7401,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7391,
											"end": 7397,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7388,
											"end": 7402,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 7362,
											"end": 7523,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7445,
											"end": 7455,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7440,
											"end": 7443,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7433,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7426,
											"end": 7457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7480,
											"end": 7484,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 7477,
											"end": 7478,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7470,
											"end": 7485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7513,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7523,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 7362,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7362,
											"end": 7523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7529,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7149,
											"end": 7529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7534,
											"end": 7661,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 7534,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7595,
											"end": 7605,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7586,
											"end": 7606,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7583,
											"end": 7584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7607,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 7623,
											"end": 7624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7616,
											"end": 7631,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7647,
											"end": 7648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7655,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7666,
											"end": 7793,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7666,
											"end": 7793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7727,
											"end": 7737,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7722,
											"end": 7725,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7718,
											"end": 7738,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7739,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7762,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7755,
											"end": 7756,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7748,
											"end": 7763,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7786,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7779,
											"end": 7780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7772,
											"end": 7787,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7933,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 7798,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7858,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7858,
											"end": 7875,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7858,
											"end": 7875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 7855,
											"end": 7898,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7878,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 7878,
											"end": 7896,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 7878,
											"end": 7896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7878,
											"end": 7896,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 7878,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7925,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 7914,
											"end": 7927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7914,
											"end": 7927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7798,
											"end": 7933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8111,
											"end": 8113,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8100,
											"end": 8109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8093,
											"end": 8114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8131,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 8171,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8160,
											"end": 8169,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8156,
											"end": 8174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 8131,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8131,
											"end": 8175,
											"name": "tag",
											"source": 8,
											"value": "517"
										},
										{
											"begin": 8131,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8123,
											"end": 8175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 8215,
											"end": 8221,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8228,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8206,
											"end": 8208,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8195,
											"end": 8204,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8191,
											"end": 8209,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8184,
											"end": 8229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7938,
											"end": 8235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8536,
											"end": 8661,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 8536,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8601,
											"end": 8610,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8601,
											"end": 8610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8601,
											"end": 8610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8632,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8632,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8632,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8619,
											"end": 8655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8619,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8619,
											"end": 8655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 8635,
											"end": 8653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8666,
											"end": 8794,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 8666,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8754,
											"end": 8765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8754,
											"end": 8765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8754,
											"end": 8765,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8751,
											"end": 8788,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8751,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8751,
											"end": 8788,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8768,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 8768,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 8768,
											"end": 8786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9284,
											"end": 9411,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 9284,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9345,
											"end": 9355,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 9340,
											"end": 9343,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 9336,
											"end": 9356,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 9333,
											"end": 9334,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9376,
											"end": 9380,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9373,
											"end": 9374,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9366,
											"end": 9381,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9400,
											"end": 9404,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9397,
											"end": 9398,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9390,
											"end": 9405,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9416,
											"end": 9793,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 9416,
											"end": 9793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9609,
											"end": 9611,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9598,
											"end": 9607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9591,
											"end": 9612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9572,
											"end": 9576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9635,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 9675,
											"end": 9677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9664,
											"end": 9673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9660,
											"end": 9678,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9652,
											"end": 9658,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9635,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 9635,
											"end": 9679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9635,
											"end": 9679,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 9635,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9719,
											"end": 9725,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9715,
											"end": 9737,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9710,
											"end": 9712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9708,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9695,
											"end": 9713,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9688,
											"end": 9738,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 9780,
											"end": 9786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9772,
											"end": 9778,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 9755,
											"end": 9787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9755,
											"end": 9787,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 9755,
											"end": 9787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9747,
											"end": 9787,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9416,
											"end": 9793,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9416,
											"end": 9793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9934,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9798,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9837,
											"end": 9840,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9870,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 9894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 9855,
											"end": 9894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 9874,
											"end": 9892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 9874,
											"end": 9892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9874,
											"end": 9892,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 9874,
											"end": 9892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 9928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9939,
											"end": 10476,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9939,
											"end": 10476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10178,
											"end": 10180,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10167,
											"end": 10176,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10160,
											"end": 10181,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10141,
											"end": 10145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10204,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10233,
											"end": 10242,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10221,
											"end": 10227,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10248,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 10204,
											"end": 10248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10204,
											"end": 10248,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 10204,
											"end": 10248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10288,
											"end": 10294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10306,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10268,
											"end": 10277,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10264,
											"end": 10282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10257,
											"end": 10307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10330,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 10355,
											"end": 10361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10347,
											"end": 10353,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10330,
											"end": 10362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 10330,
											"end": 10362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10330,
											"end": 10362,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 10330,
											"end": 10362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10420,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10382,
											"end": 10391,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10378,
											"end": 10396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10371,
											"end": 10421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10463,
											"end": 10469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 10438,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10481,
											"end": 10758,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 10481,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10548,
											"end": 10554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10589,
											"end": 10598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10580,
											"end": 10587,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10599,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10572,
											"end": 10604,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10621,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 10569,
											"end": 10621,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 10618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 10619,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10569,
											"end": 10621,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 10569,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10658,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10643,
											"end": 10659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10702,
											"end": 10707,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10695,
											"end": 10708,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10688,
											"end": 10709,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10681,
											"end": 10686,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10678,
											"end": 10710,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10714,
											"end": 10726,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11324,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 11115,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 11163,
											"end": 11295,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11217,
											"end": 11227,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 11212,
											"end": 11215,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 11208,
											"end": 11228,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 11205,
											"end": 11206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11198,
											"end": 11229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11252,
											"end": 11256,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 11249,
											"end": 11250,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 11242,
											"end": 11257,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11280,
											"end": 11284,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11277,
											"end": 11278,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11270,
											"end": 11285,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 11163,
											"end": 11295,
											"name": "tag",
											"source": 8,
											"value": "543"
										},
										{
											"begin": 11163,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11309,
											"end": 11318,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 11309,
											"end": 11318,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11329,
											"end": 11497,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 11329,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11411,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11411,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11411,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11433,
											"end": 11442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11433,
											"end": 11442,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11450,
											"end": 11465,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11466,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11444,
											"end": 11466,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11430,
											"end": 11467,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 11420,
											"end": 11491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 11471,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 11471,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/buffer/contracts/Buffer.sol",
								"packages/contracts/src/dnssec-oracle/BytesUtils.sol",
								"packages/contracts/src/dnssec-oracle/DNSSEC.sol",
								"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
								"packages/contracts/src/dnssec-oracle/Owned.sol",
								"packages/contracts/src/dnssec-oracle/RRUtils.sol",
								"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
								"packages/contracts/src/dnssec-oracle/digests/Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"algorithms(uint8)": "c327deef",
							"anchors()": "98d35f20",
							"digests(uint8)": "73cc48a6",
							"owner()": "8da5cb5b",
							"setAlgorithm(uint8,address)": "020ed8d3",
							"setDigest(uint8,address)": "28e7677d",
							"setOwner(address)": "13af4035",
							"verifyRRSet((bytes,bytes)[])": "bdf95fef",
							"verifyRRSet((bytes,bytes)[],uint256)": "440f3d42"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_anchors\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"class\",\"type\":\"uint16\"}],\"name\":\"InvalidClass\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"name\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"labelsExpected\",\"type\":\"uint256\"}],\"name\":\"InvalidLabelCount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"proofType\",\"type\":\"uint16\"}],\"name\":\"InvalidProofType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRRSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"rrsetName\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signerName\",\"type\":\"bytes\"}],\"name\":\"InvalidSignerName\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signerName\",\"type\":\"bytes\"}],\"name\":\"NoMatchingProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signerName\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"proofName\",\"type\":\"bytes\"}],\"name\":\"ProofNameMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"expiration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"now\",\"type\":\"uint32\"}],\"name\":\"SignatureExpired\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"inception\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"now\",\"type\":\"uint32\"}],\"name\":\"SignatureNotValidYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"rrsetType\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"sigType\",\"type\":\"uint16\"}],\"name\":\"SignatureTypeMismatch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"AlgorithmUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"DigestUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"algorithms\",\"outputs\":[{\"internalType\":\"contract Algorithm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"anchors\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"digests\",\"outputs\":[{\"internalType\":\"contract Digest\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"contract Algorithm\",\"name\":\"algo\",\"type\":\"address\"}],\"name\":\"setAlgorithm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"contract Digest\",\"name\":\"digest\",\"type\":\"address\"}],\"name\":\"setDigest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"rrset\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct DNSSEC.RRSetWithSignature[]\",\"name\":\"input\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"now\",\"type\":\"uint256\"}],\"name\":\"verifyRRSet\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rrs\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"inception\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"rrset\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"internalType\":\"struct DNSSEC.RRSetWithSignature[]\",\"name\":\"input\",\"type\":\"tuple[]\"}],\"name\":\"verifyRRSet\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"rrs\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"inception\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"_anchors\":\"The binary format RR entries for the root DS records.\"}},\"setAlgorithm(uint8,address)\":{\"details\":\"Sets the contract address for a signature verification algorithm.      Callable only by the owner.\",\"params\":{\"algo\":\"The address of the algorithm contract.\",\"id\":\"The algorithm ID\"}},\"setDigest(uint8,address)\":{\"details\":\"Sets the contract address for a digest verification algorithm.      Callable only by the owner.\",\"params\":{\"digest\":\"The address of the digest contract.\",\"id\":\"The digest ID\"}},\"verifyRRSet((bytes,bytes)[])\":{\"details\":\"Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.\",\"params\":{\"input\":\"A list of signed RRSets.\"},\"returns\":{\"inception\":\"The inception time of the signed record set.\",\"rrs\":\"The RRData from the last RRSet in the chain.\"}},\"verifyRRSet((bytes,bytes)[],uint256)\":{\"details\":\"Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.\",\"params\":{\"input\":\"A list of signed RRSets.\",\"now\":\"The Unix timestamp to validate the records at.\"},\"returns\":{\"inception\":\"The inception time of the signed record set.\",\"rrs\":\"The RRData from the last RRSet in the chain.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":\"DNSSECImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/buffer/contracts/Buffer.sol\":{\"keccak256\":\"0xd6dd3b0b327288f8e1b711a609f4040fea602e2ad4bba9febdf2f33b4e56eb0c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://78a722152d40d778a97595e5224fac1d138f4e659dcb1a926148909ef4c4bdca\",\"dweb:/ipfs/QmRxScF53x5ywsChLNpMUCdg2TSoCWTfo8G65Mo3sGY55b\"]},\"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":{\"keccak256\":\"0x7362a411f1cf9462eabb40847e7dfe6ffb2a9039ec996f6f9e7335f2c1e69290\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d371e4a35657aadec9c397b7cea8a5b86df3b5103d8e477bb9b4f3af4764d140\",\"dweb:/ipfs/QmYVw3XwgsRQhb6nr6szegPPnnXwp2Zm8wESHzXA2Ka5yy\"]},\"packages/contracts/src/dnssec-oracle/DNSSEC.sol\":{\"keccak256\":\"0x2fc67aef2359ab521c6c84d706df5d246d49bb1f6a605fb605272a7e976a61a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740e97cfdd0541635b2d6d30756aaa41f7b632db649f517e757432188ebeff02\",\"dweb:/ipfs/QmexKwKERStSpTnpR2aAkvfrgFaJsfdfw8MRXWgtmPqfan\"]},\"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol\":{\"keccak256\":\"0xade69f92466289876ebcf455bfa7750b21f4ff422d4fcd361d21e422f234535c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://950ccfbc0fc0e4d70cd2fef689ad9b02e6db1299a98ae581659d2cb4aa1dca84\",\"dweb:/ipfs/QmYmPeio1S3XwgCHC5s13h1rbtkLFWZZkM5KFMMtgfCzwd\"]},\"packages/contracts/src/dnssec-oracle/Owned.sol\":{\"keccak256\":\"0x1f7ffdc6603cc0e410efcfb147d2fcdb4ae58e6a0960961c218702221e89d693\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5c8540c45075bc58891eee1dd5b4563e485fbba3e5a5e7e599a621c95e26b2dc\",\"dweb:/ipfs/QmZAskqk9YMoq4dBBtk9NKpGdPjioQWNboAAKFPKF6ZnKU\"]},\"packages/contracts/src/dnssec-oracle/RRUtils.sol\":{\"keccak256\":\"0xfc95bcfeaca73cf42eb3c9b7408038c983aa46ac2126599c7f05722a6367bf06\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da6b2d9294e363f33a7f263c758751b9ebf80680a4204e92ea6c2adccd605c48\",\"dweb:/ipfs/QmTvLo6jFDi1YnVRiLBu13E2dUZHAPTp2ut2SmcoMYPKuS\"]},\"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol\":{\"keccak256\":\"0x195a322cf3d415715736b5d1584b595affe6c971c34dd7ffe8fb2137127dd7c8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8518832950cf128b57d5ddeafe6d662beb00e65b5afb395f8ffc8a43bcbc0cf4\",\"dweb:/ipfs/QmUnW1f8j8gXMPxRTtHBkMr8mA8R2VAsh78bFjXfnni4ka\"]},\"packages/contracts/src/dnssec-oracle/digests/Digest.sol\":{\"keccak256\":\"0xaef2af7905ae4f9860191c0a0ce34037768efa1f31170381e4229ad00f405d9e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://72f6b874be8cd8d21a0c817f01b4c5f26dcb98bf83bf4612f8f26ecd3cc457c6\",\"dweb:/ipfs/QmPpfiXoVjkZ4hFp8qYFmu2g2atkHJW87cGd2VLZwzzTsY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1243,
								"contract": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol:DNSSECImpl",
								"label": "anchors",
								"offset": 0,
								"slot": "0",
								"type": "t_bytes_storage"
							},
							{
								"astId": 2220,
								"contract": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol:DNSSECImpl",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1375,
								"contract": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol:DNSSECImpl",
								"label": "algorithms",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint8,t_contract(Algorithm)3367)"
							},
							{
								"astId": 1380,
								"contract": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol:DNSSECImpl",
								"label": "digests",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint8,t_contract(Digest)3381)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_contract(Algorithm)3367": {
								"encoding": "inplace",
								"label": "contract Algorithm",
								"numberOfBytes": "20"
							},
							"t_contract(Digest)3381": {
								"encoding": "inplace",
								"label": "contract Digest",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint8,t_contract(Algorithm)3367)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => contract Algorithm)",
								"numberOfBytes": "32",
								"value": "t_contract(Algorithm)3367"
							},
							"t_mapping(t_uint8,t_contract(Digest)3381)": {
								"encoding": "mapping",
								"key": "t_uint8",
								"label": "mapping(uint8 => contract Digest)",
								"numberOfBytes": "32",
								"value": "t_contract(Digest)3381"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/Owned.sol": {
				"Owned": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract mixin for 'owned' contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":123:421  contract Owned {... */\n  mstore(0x40, 0x80)\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":263:321  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:300  owner */\n  0x00\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:313  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":303:313  msg.sender */\n  caller\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":295:313  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":123:421  contract Owned {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":123:421  contract Owned {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":329:418  function setOwner(address newOwner) public owner_only {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":145:165  address public owner */\n    tag_4:\n      sload(0x00)\n      tag_9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":469:501   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":451:502   */\n      dup2\n      mstore\n        /* \"#utility.yul\":439:441   */\n      0x20\n        /* \"#utility.yul\":424:442   */\n      add\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":145:165  address public owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":329:418  function setOwner(address newOwner) public owner_only {... */\n    tag_8:\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":229:234  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:225  msg.sender */\n      caller\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":215:234  msg.sender == owner */\n      eq\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":207:235  require(msg.sender == owner) */\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":394:399  owner */\n      0x00\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":394:410  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"packages/contracts/src/dnssec-oracle/Owned.sol\":329:418  function setOwner(address newOwner) public owner_only {... */\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_18\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_18:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_19\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_19:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205507f6c2b613c230762fbd05340aa97873e430649c9dd74cb10b6a042f5031b864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2240": {
									"entryPoint": null,
									"id": 2240,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610112806100326000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806313af40351460375780638da5cb5b146048575b600080fd5b6046604236600460ae565b6076565b005b600054605a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b03163314608c57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121560bf57600080fd5b81356001600160a01b038116811460d557600080fd5b939250505056fea26469706673582212205507f6c2b613c230762fbd05340aa97873e430649c9dd74cb10b6a042f5031b864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x112 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x48 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x46 PUSH1 0x42 CALLDATASIZE PUSH1 0x4 PUSH1 0xAE JUMP JUMPDEST PUSH1 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE SMOD 0xF6 0xC2 0xB6 SGT 0xC2 ADDRESS PUSH23 0x2FBD05340AA97873E430649C9DD74CB10B6A042F5031B8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "123:298:4:-:0;;;263:58;;;;;;;;;-1:-1:-1;295:5:4;:18;;-1:-1:-1;;;;;;295:18:4;303:10;295:18;;;123:298;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@owner_2220": {
									"entryPoint": null,
									"id": 2220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOwner_2252": {
									"entryPoint": 118,
									"id": 2252,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:510:8",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:8"
															},
															"nodeType": "YulIf",
															"src": "94:52:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:8"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:8"
															},
															"nodeType": "YulIf",
															"src": "200:70:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:8",
														"type": ""
													}
												],
												"src": "14:286:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "406:102:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "416:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "428:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "439:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "424:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "424:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "416:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "458:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "473:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "489:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "494:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "485:11:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "498:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "469:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "469:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "451:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "375:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "386:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "397:4:8",
														"type": ""
													}
												],
												"src": "305:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060325760003560e01c806313af40351460375780638da5cb5b146048575b600080fd5b6046604236600460ae565b6076565b005b600054605a906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b03163314608c57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121560bf57600080fd5b81356001600160a01b038116811460d557600080fd5b939250505056fea26469706673582212205507f6c2b613c230762fbd05340aa97873e430649c9dd74cb10b6a042f5031b864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH1 0x48 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x46 PUSH1 0x42 CALLDATASIZE PUSH1 0x4 PUSH1 0xAE JUMP JUMPDEST PUSH1 0x76 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x5A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH1 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE SMOD 0xF6 0xC2 0xB6 SGT 0xC2 ADDRESS PUSH23 0x2FBD05340AA97873E430649C9DD74CB10B6A042F5031B8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "123:298:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:89;;;;;;:::i;:::-;;:::i;:::-;;145:20;;;;;-1:-1:-1;;;;;145:20:4;;;;;;-1:-1:-1;;;;;469:32:8;;;451:51;;439:2;424:18;145:20:4;;;;;;;329:89;229:5;;-1:-1:-1;;;;;229:5:4;215:10;:19;207:28;;;;;;394:5:::1;:16:::0;;-1:-1:-1;;;;;;394:16:4::1;-1:-1:-1::0;;;;;394:16:4;;;::::1;::::0;;;::::1;::::0;;329:89::o;14:286:8:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:8;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:8:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "54800",
								"executionCost": "24340",
								"totalCost": "79140"
							},
							"external": {
								"owner()": "2325",
								"setOwner(address)": "26654"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 123,
									"end": 421,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 123,
									"end": 421,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 123,
									"end": 421,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 321,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 263,
									"end": 321,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 263,
									"end": 321,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 263,
									"end": 321,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 295,
									"end": 300,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 313,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 295,
									"end": 313,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 303,
									"end": 313,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 123,
									"end": 421,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 421,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 123,
									"end": 421,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 123,
									"end": 421,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 421,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 123,
									"end": 421,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 123,
									"end": 421,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205507f6c2b613c230762fbd05340aa97873e430649c9dd74cb10b6a042f5031b864736f6c63430008110033",
									".code": [
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "13AF4035"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 421,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 123,
											"end": 421,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 329,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 145,
											"end": 165,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 469,
											"end": 501,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 469,
											"end": 501,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 451,
											"end": 502,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 451,
											"end": 502,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 439,
											"end": 441,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 145,
											"end": 165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 145,
											"end": 165,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 229,
											"end": 234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 229,
											"end": 234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 229,
											"end": 234,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 215,
											"end": 225,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 215,
											"end": 234,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 207,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 207,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 394,
											"end": 410,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 394,
											"end": 410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 410,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 329,
											"end": 418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/buffer/contracts/Buffer.sol",
								"packages/contracts/src/dnssec-oracle/BytesUtils.sol",
								"packages/contracts/src/dnssec-oracle/DNSSEC.sol",
								"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
								"packages/contracts/src/dnssec-oracle/Owned.sol",
								"packages/contracts/src/dnssec-oracle/RRUtils.sol",
								"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
								"packages/contracts/src/dnssec-oracle/digests/Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract mixin for 'owned' contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/Owned.sol\":\"Owned\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/dnssec-oracle/Owned.sol\":{\"keccak256\":\"0x1f7ffdc6603cc0e410efcfb147d2fcdb4ae58e6a0960961c218702221e89d693\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5c8540c45075bc58891eee1dd5b4563e485fbba3e5a5e7e599a621c95e26b2dc\",\"dweb:/ipfs/QmZAskqk9YMoq4dBBtk9NKpGdPjioQWNboAAKFPKF6ZnKU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2220,
								"contract": "packages/contracts/src/dnssec-oracle/Owned.sol:Owned",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/RRUtils.sol": {
				"RRUtils": {
					"abi": [],
					"devdoc": {
						"details": "RRUtils is a library that provides utilities for parsing DNS resource records.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":245:14577  library RRUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"packages/contracts/src/dnssec-oracle/RRUtils.sol\":245:14577  library RRUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207ec0dffd4e6c8cdcca09748b3c5f991290e961cbdff89bc425dc860a2382b1fa64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ec0dffd4e6c8cdcca09748b3c5f991290e961cbdff89bc425dc860a2382b1fa64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xC0DFFD4E6C8CDCCA09748B3C5F991290E961CBDFF89BC425DC860A2382B1FA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "245:14332:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:14332:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ec0dffd4e6c8cdcca09748b3c5f991290e961cbdff89bc425dc860a2382b1fa64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xC0DFFD4E6C8CDCCA09748B3C5F991290E961CBDFF89BC425DC860A2382B1FA PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "245:14332:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"compareNames(bytes memory,bytes memory)": "infinite",
								"computeKeytag(bytes memory)": "infinite",
								"done(struct RRUtils.RRIterator memory)": "infinite",
								"isSubdomainOf(bytes memory,bytes memory)": "infinite",
								"iterateRRs(bytes memory,uint256)": "infinite",
								"labelCount(bytes memory,uint256)": "infinite",
								"name(struct RRUtils.RRIterator memory)": "infinite",
								"nameLength(bytes memory,uint256)": "infinite",
								"next(struct RRUtils.RRIterator memory)": "infinite",
								"progress(bytes memory,uint256)": "infinite",
								"rdata(struct RRUtils.RRIterator memory)": "infinite",
								"readDNSKEY(bytes memory,uint256,uint256)": "infinite",
								"readDS(bytes memory,uint256,uint256)": "infinite",
								"readName(bytes memory,uint256)": "infinite",
								"readSignedSet(bytes memory)": "infinite",
								"rrs(struct RRUtils.SignedSet memory)": "infinite",
								"serialNumberGte(uint32,uint32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 245,
									"end": 14577,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ec0dffd4e6c8cdcca09748b3c5f991290e961cbdff89bc425dc860a2382b1fa64736f6c63430008110033",
									".code": [
										{
											"begin": 245,
											"end": 14577,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 245,
											"end": 14577,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@ensdomains/buffer/contracts/Buffer.sol",
								"packages/contracts/src/dnssec-oracle/BytesUtils.sol",
								"packages/contracts/src/dnssec-oracle/DNSSEC.sol",
								"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
								"packages/contracts/src/dnssec-oracle/Owned.sol",
								"packages/contracts/src/dnssec-oracle/RRUtils.sol",
								"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
								"packages/contracts/src/dnssec-oracle/digests/Digest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"RRUtils is a library that provides utilities for parsing DNS resource records.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/RRUtils.sol\":\"RRUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/buffer/contracts/Buffer.sol\":{\"keccak256\":\"0xd6dd3b0b327288f8e1b711a609f4040fea602e2ad4bba9febdf2f33b4e56eb0c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://78a722152d40d778a97595e5224fac1d138f4e659dcb1a926148909ef4c4bdca\",\"dweb:/ipfs/QmRxScF53x5ywsChLNpMUCdg2TSoCWTfo8G65Mo3sGY55b\"]},\"packages/contracts/src/dnssec-oracle/BytesUtils.sol\":{\"keccak256\":\"0x7362a411f1cf9462eabb40847e7dfe6ffb2a9039ec996f6f9e7335f2c1e69290\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d371e4a35657aadec9c397b7cea8a5b86df3b5103d8e477bb9b4f3af4764d140\",\"dweb:/ipfs/QmYVw3XwgsRQhb6nr6szegPPnnXwp2Zm8wESHzXA2Ka5yy\"]},\"packages/contracts/src/dnssec-oracle/RRUtils.sol\":{\"keccak256\":\"0xfc95bcfeaca73cf42eb3c9b7408038c983aa46ac2126599c7f05722a6367bf06\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://da6b2d9294e363f33a7f263c758751b9ebf80680a4204e92ea6c2adccd605c48\",\"dweb:/ipfs/QmTvLo6jFDi1YnVRiLBu13E2dUZHAPTp2ut2SmcoMYPKuS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol": {
				"Algorithm": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "key",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An interface for contracts implementing a DNSSEC (signing) algorithm.",
						"kind": "dev",
						"methods": {
							"verify(bytes,bytes,bytes)": {
								"details": "Verifies a signature.",
								"params": {
									"data": "The signed data to verify.",
									"key": "The public key to verify with.",
									"signature": "The signature to verify."
								},
								"returns": {
									"_0": "True iff the signature is valid."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verify(bytes,bytes,bytes)": "de8f50a1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An interface for contracts implementing a DNSSEC (signing) algorithm.\",\"kind\":\"dev\",\"methods\":{\"verify(bytes,bytes,bytes)\":{\"details\":\"Verifies a signature.\",\"params\":{\"data\":\"The signed data to verify.\",\"key\":\"The public key to verify with.\",\"signature\":\"The signature to verify.\"},\"returns\":{\"_0\":\"True iff the signature is valid.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol\":\"Algorithm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol\":{\"keccak256\":\"0x195a322cf3d415715736b5d1584b595affe6c971c34dd7ffe8fb2137127dd7c8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8518832950cf128b57d5ddeafe6d662beb00e65b5afb395f8ffc8a43bcbc0cf4\",\"dweb:/ipfs/QmUnW1f8j8gXMPxRTtHBkMr8mA8R2VAsh78bFjXfnni4ka\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"packages/contracts/src/dnssec-oracle/digests/Digest.sol": {
				"Digest": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "hash",
									"type": "bytes"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An interface for contracts implementing a DNSSEC digest.",
						"kind": "dev",
						"methods": {
							"verify(bytes,bytes)": {
								"details": "Verifies a cryptographic hash.",
								"params": {
									"data": "The data to hash.",
									"hash": "The hash to compare to."
								},
								"returns": {
									"_0": "True iff the hashed data matches the provided hash value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verify(bytes,bytes)": "f7e83aee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"hash\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An interface for contracts implementing a DNSSEC digest.\",\"kind\":\"dev\",\"methods\":{\"verify(bytes,bytes)\":{\"details\":\"Verifies a cryptographic hash.\",\"params\":{\"data\":\"The data to hash.\",\"hash\":\"The hash to compare to.\"},\"returns\":{\"_0\":\"True iff the hashed data matches the provided hash value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"packages/contracts/src/dnssec-oracle/digests/Digest.sol\":\"Digest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"packages/contracts/src/dnssec-oracle/digests/Digest.sol\":{\"keccak256\":\"0xaef2af7905ae4f9860191c0a0ce34037768efa1f31170381e4229ad00f405d9e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://72f6b874be8cd8d21a0c817f01b4c5f26dcb98bf83bf4612f8f26ecd3cc457c6\",\"dweb:/ipfs/QmPpfiXoVjkZ4hFp8qYFmu2g2atkHJW87cGd2VLZwzzTsY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2319",
				"formattedMessage": "Warning: This declaration shadows a builtin symbol.\n   --> packages/contracts/src/dnssec-oracle/DNSSECImpl.sol:109:9:\n    |\n109 |         uint256 now\n    |         ^^^^^^^^^^^\n\n",
				"message": "This declaration shadows a builtin symbol.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4276,
					"file": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
					"start": 4265
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2319",
				"formattedMessage": "Warning: This declaration shadows a builtin symbol.\n   --> packages/contracts/src/dnssec-oracle/DNSSECImpl.sol:143:9:\n    |\n143 |         uint256 now\n    |         ^^^^^^^^^^^\n\n",
				"message": "This declaration shadows a builtin symbol.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5424,
					"file": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
					"start": 5413
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> packages/contracts/src/dnssec-oracle/Owned.sol:15:5:\n   |\n15 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 321,
					"file": "packages/contracts/src/dnssec-oracle/Owned.sol",
					"start": 263
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5815",
				"formattedMessage": "Warning: Interface functions are implicitly \"virtual\"\n  --> packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol:15:5:\n   |\n15 |     function verify(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Interface functions are implicitly \"virtual\"",
				"severity": "warning",
				"sourceLocation": {
					"end": 585,
					"file": "packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
					"start": 431
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5815",
				"formattedMessage": "Warning: Interface functions are implicitly \"virtual\"\n  --> packages/contracts/src/dnssec-oracle/digests/Digest.sol:14:5:\n   |\n14 |     function verify(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Interface functions are implicitly \"virtual\"",
				"severity": "warning",
				"sourceLocation": {
					"end": 504,
					"file": "packages/contracts/src/dnssec-oracle/digests/Digest.sol",
					"start": 384
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@ensdomains/buffer/contracts/Buffer.sol": {
				"ast": {
					"absolutePath": "@ensdomains/buffer/contracts/Buffer.sol",
					"exportedSymbols": {
						"Buffer": [
							420
						]
					},
					"id": 421,
					"license": "BSD-2-Clause",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "41:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Buffer",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "66:378:0",
								"text": " @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for appending to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "Buffer",
							"nameLocation": "453:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Buffer.buffer",
									"id": 7,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "buf",
											"nameLocation": "750:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "744:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 3,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "744:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "capacity",
											"nameLocation": "768:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "763:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 5,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "763:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "buffer",
									"nameLocation": "727:6:0",
									"nodeType": "StructDefinition",
									"scope": 420,
									"src": "720:63:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1105:470:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 19,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1119:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3332",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1130:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "1119:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1136:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1119:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "IfStatement",
												"src": "1115:81:0",
												"trueBody": {
													"id": 33,
													"nodeType": "Block",
													"src": "1139:57:0",
													"statements": [
														{
															"expression": {
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 24,
																	"name": "capacity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1153:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3332",
																		"id": 25,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1165:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 26,
																					"name": "capacity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "1171:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "3332",
																					"id": 27,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1182:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_32_by_1",
																						"typeString": "int_const 32"
																					},
																					"value": "32"
																				},
																				"src": "1171:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1170:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1165:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1153:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 32,
															"nodeType": "ExpressionStatement",
															"src": "1153:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 35,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1251:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1255:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "1251:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 38,
														"name": "capacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1266:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1251:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "1251:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1293:256:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1307:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1324:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1318:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1311:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "1349:3:0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1354:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:16:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1378:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1383:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1371:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:14:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1371:14:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1398:38:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1413:2:0",
																		"type": "",
																		"value": "32"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1421:3:0"
																			},
																			{
																				"name": "capacity",
																				"nodeType": "YulIdentifier",
																				"src": "1426:8:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:18:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:27:0"
															},
															"variables": [
																{
																	"name": "fpm",
																	"nodeType": "YulTypedName",
																	"src": "1402:3:0",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1465:44:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1490:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:12:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:12:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "fpm",
																		"nodeType": "YulIdentifier",
																		"src": "1455:3:0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1460:3:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1452:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1452:12:0"
															},
															"nodeType": "YulIf",
															"src": "1449:60:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1529:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "fpm",
																		"nodeType": "YulIdentifier",
																		"src": "1535:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1522:17:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1522:17:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1349:3:0",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "1426:8:0",
														"valueSize": 1
													}
												],
												"id": 41,
												"nodeType": "InlineAssembly",
												"src": "1284:265:0"
											},
											{
												"expression": {
													"id": 42,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "1565:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 18,
												"id": 43,
												"nodeType": "Return",
												"src": "1558:10:0"
											}
										]
									},
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "789:226:0",
										"text": " @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."
									},
									"id": 45,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "1029:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "1048:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1034:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 10,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 9,
														"name": "buffer",
														"nameLocations": [
															"1034:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "1034:6:0"
													},
													"referencedDeclaration": 7,
													"src": "1034:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "capacity",
												"nameLocation": "1058:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1053:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:34:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "1090:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 16,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 15,
														"name": "buffer",
														"nameLocations": [
															"1090:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "1090:6:0"
													},
													"referencedDeclaration": 7,
													"src": "1090:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:15:0"
									},
									"scope": 420,
									"src": "1020:555:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1890:108:0",
										"statements": [
											{
												"assignments": [
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "buf",
														"nameLocation": "1914:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "1900:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
															"typeString": "struct Buffer.buffer"
														},
														"typeName": {
															"id": 55,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 54,
																"name": "buffer",
																"nameLocations": [
																	"1900:6:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 7,
																"src": "1900:6:0"
															},
															"referencedDeclaration": 7,
															"src": "1900:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
																"typeString": "struct Buffer.buffer"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 57,
												"nodeType": "VariableDeclarationStatement",
												"src": "1900:17:0"
											},
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 58,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1927:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1931:3:0",
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "1927:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1927:11:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 64,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1948:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1952:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "1948:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 67,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "1963:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1965:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1963:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1948:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1948:23:0"
											},
											{
												"expression": {
													"id": 71,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 56,
													"src": "1988:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 53,
												"id": 72,
												"nodeType": "Return",
												"src": "1981:10:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1581:232:0",
										"text": " @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fromBytes",
									"nameLocation": "1827:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1850:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1837:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 47,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1837:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:16:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "1875:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 51,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 50,
														"name": "buffer",
														"nameLocations": [
															"1875:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "1875:6:0"
													},
													"referencedDeclaration": 7,
													"src": "1875:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1874:15:0"
									},
									"scope": 420,
									"src": "1818:180:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2067:104:0",
										"statements": [
											{
												"assignments": [
													83
												],
												"declarations": [
													{
														"constant": false,
														"id": 83,
														"mutability": "mutable",
														"name": "oldbuf",
														"nameLocation": "2090:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 97,
														"src": "2077:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 82,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"expression": {
														"id": 84,
														"name": "buf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "2099:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
															"typeString": "struct Buffer.buffer memory"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2103:3:0",
													"memberName": "buf",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "2099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2077:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2121:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 89,
															"name": "capacity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2126:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 87,
														"name": "init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "2116:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$7_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "2116:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 93,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2152:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 94,
															"name": "oldbuf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2157:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 92,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															220,
															326
														],
														"referencedDeclaration": 220,
														"src": "2145:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$7_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2145:19:0"
											}
										]
									},
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "resize",
									"nameLocation": "2013:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2034:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2020:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 76,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 75,
														"name": "buffer",
														"nameLocations": [
															"2020:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "2020:6:0"
													},
													"referencedDeclaration": 7,
													"src": "2020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "capacity",
												"nameLocation": "2044:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "2039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2019:34:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:0:0"
									},
									"scope": 420,
									"src": "2004:167:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "2394:123:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2413:78:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2427:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "2447:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2441:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2441:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "2431:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nodeType": "YulIdentifier",
																		"src": "2471:6:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2479:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:17:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2464:17:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 102,
														"isOffset": false,
														"isSlot": false,
														"src": "2447:3:0",
														"valueSize": 1
													}
												],
												"id": 108,
												"nodeType": "InlineAssembly",
												"src": "2404:87:0"
											},
											{
												"expression": {
													"id": 109,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 102,
													"src": "2507:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 107,
												"id": 110,
												"nodeType": "Return",
												"src": "2500:10:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2177:137:0",
										"text": " @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "truncate",
									"nameLocation": "2328:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2351:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2337:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 100,
														"name": "buffer",
														"nameLocations": [
															"2337:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "2337:6:0"
													},
													"referencedDeclaration": 7,
													"src": "2337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2336:19:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2379:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 105,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 104,
														"name": "buffer",
														"nameLocations": [
															"2379:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "2379:6:0"
													},
													"referencedDeclaration": 7,
													"src": "2379:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2378:15:0"
									},
									"scope": 420,
									"src": "2319:198:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2945:1326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 127,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "2963:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 128,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2970:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2975:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2970:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2963:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2955:27:0"
											},
											{
												"assignments": [
													134
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "2998:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "2993:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 133,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2993:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 135,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3004:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3008:3:0",
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "3004:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3012:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3004:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2993:25:0"
											},
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"mutability": "mutable",
														"name": "newCapacity",
														"nameLocation": "3033:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "3028:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 139,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3028:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 144,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 141,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "3047:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 142,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3053:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3047:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3028:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 145,
														"name": "newCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "3070:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 146,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3084:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3088:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "3084:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3070:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 157,
												"nodeType": "IfStatement",
												"src": "3066:85:0",
												"trueBody": {
													"id": 156,
													"nodeType": "Block",
													"src": "3098:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 150,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "3119:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 151,
																			"name": "newCapacity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 140,
																			"src": "3124:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3138:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "3124:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 149,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "3112:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3112:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "3112:28:0"
														}
													]
												}
											},
											{
												"assignments": [
													159
												],
												"declarations": [
													{
														"constant": false,
														"id": 159,
														"mutability": "mutable",
														"name": "dest",
														"nameLocation": "3166:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "3161:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 158,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3161:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 160,
												"nodeType": "VariableDeclarationStatement",
												"src": "3161:9:0"
											},
											{
												"assignments": [
													162
												],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "3185:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "3180:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 161,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3180:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"nodeType": "VariableDeclarationStatement",
												"src": "3180:8:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3207:498:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3270:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "3290:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3284:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "3274:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3353:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3367:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3367:13:0"
															},
															"variables": [
																{
																	"name": "buflen",
																	"nodeType": "YulTypedName",
																	"src": "3357:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3472:33:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "3488:6:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3496:2:0",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:15:0"
																	},
																	{
																		"name": "off",
																		"nodeType": "YulIdentifier",
																		"src": "3501:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:25:0"
															},
															"variableNames": [
																{
																	"name": "dest",
																	"nodeType": "YulIdentifier",
																	"src": "3472:4:0"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3603:59:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nodeType": "YulIdentifier",
																					"src": "3628:6:0"
																				},
																				{
																					"name": "newCapacity",
																					"nodeType": "YulIdentifier",
																					"src": "3636:11:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3621:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3621:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3621:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newCapacity",
																		"nodeType": "YulIdentifier",
																		"src": "3582:11:0"
																	},
																	{
																		"name": "buflen",
																		"nodeType": "YulIdentifier",
																		"src": "3595:6:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3579:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:23:0"
															},
															"nodeType": "YulIf",
															"src": "3576:86:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3675:20:0",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3686:4:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3692:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:13:0"
															},
															"variableNames": [
																{
																	"name": "src",
																	"nodeType": "YulIdentifier",
																	"src": "3675:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 116,
														"isOffset": false,
														"isSlot": false,
														"src": "3290:3:0",
														"valueSize": 1
													},
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": false,
														"src": "3686:4:0",
														"valueSize": 1
													},
													{
														"declaration": 159,
														"isOffset": false,
														"isSlot": false,
														"src": "3472:4:0",
														"valueSize": 1
													},
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": false,
														"src": "3582:11:0",
														"valueSize": 1
													},
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": false,
														"src": "3636:11:0",
														"valueSize": 1
													},
													{
														"declaration": 134,
														"isOffset": false,
														"isSlot": false,
														"src": "3501:3:0",
														"valueSize": 1
													},
													{
														"declaration": 162,
														"isOffset": false,
														"isSlot": false,
														"src": "3675:3:0",
														"valueSize": 1
													}
												],
												"id": 164,
												"nodeType": "InlineAssembly",
												"src": "3198:507:0"
											},
											{
												"body": {
													"id": 181,
													"nodeType": "Block",
													"src": "3794:136:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "3817:56:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "3842:4:0"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3854:3:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3848:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3848:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3835:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3835:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3835:24:0"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 159,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3842:4:0",
																	"valueSize": 1
																},
																{
																	"declaration": 162,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "3854:3:0",
																	"valueSize": 1
																}
															],
															"id": 172,
															"nodeType": "InlineAssembly",
															"src": "3808:65:0"
														},
														{
															"expression": {
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 173,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "3886:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3894:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3886:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 176,
															"nodeType": "ExpressionStatement",
															"src": "3886:10:0"
														},
														{
															"expression": {
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 177,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 162,
																	"src": "3910:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3917:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3910:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 180,
															"nodeType": "ExpressionStatement",
															"src": "3910:9:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3772:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3332",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3779:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3772:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"loopExpression": {
													"expression": {
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 168,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "3783:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "3332",
															"id": 169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3790:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "3783:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 171,
													"nodeType": "ExpressionStatement",
													"src": "3783:9:0"
												},
												"nodeType": "ForStatement",
												"src": "3765:165:0"
											},
											{
												"id": 196,
												"nodeType": "UncheckedBlock",
												"src": "3972:272:0",
												"statements": [
													{
														"assignments": [
															184
														],
														"declarations": [
															{
																"constant": false,
																"id": 184,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "4001:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 196,
																"src": "3996:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 183,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "3996:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 194,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4009:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3332",
																						"id": 186,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4017:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 187,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 120,
																						"src": "4022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4017:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 189,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4016:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4009:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4008:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4030:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "4008:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3996:35:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4054:180:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:41:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "src",
																						"nodeType": "YulIdentifier",
																						"src": "4097:3:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "4091:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4091:10:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mask",
																						"nodeType": "YulIdentifier",
																						"src": "4107:4:0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4103:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4103:9:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4087:26:0"
																	},
																	"variables": [
																		{
																			"name": "srcpart",
																			"nodeType": "YulTypedName",
																			"src": "4076:7:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4130:38:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "dest",
																						"nodeType": "YulIdentifier",
																						"src": "4156:4:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "4150:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4150:11:0"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4163:4:0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4146:22:0"
																	},
																	"variables": [
																		{
																			"name": "destpart",
																			"nodeType": "YulTypedName",
																			"src": "4134:8:0",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "4192:4:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "destpart",
																						"nodeType": "YulIdentifier",
																						"src": "4201:8:0"
																					},
																					{
																						"name": "srcpart",
																						"nodeType": "YulIdentifier",
																						"src": "4211:7:0"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "4198:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4198:21:0"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4185:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:35:0"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4185:35:0"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 159,
																"isOffset": false,
																"isSlot": false,
																"src": "4156:4:0",
																"valueSize": 1
															},
															{
																"declaration": 159,
																"isOffset": false,
																"isSlot": false,
																"src": "4192:4:0",
																"valueSize": 1
															},
															{
																"declaration": 184,
																"isOffset": false,
																"isSlot": false,
																"src": "4107:4:0",
																"valueSize": 1
															},
															{
																"declaration": 184,
																"isOffset": false,
																"isSlot": false,
																"src": "4163:4:0",
																"valueSize": 1
															},
															{
																"declaration": 162,
																"isOffset": false,
																"isSlot": false,
																"src": "4097:3:0",
																"valueSize": 1
															}
														],
														"id": 195,
														"nodeType": "InlineAssembly",
														"src": "4045:189:0"
													}
												]
											},
											{
												"expression": {
													"id": 197,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 116,
													"src": "4261:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 125,
												"id": 198,
												"nodeType": "Return",
												"src": "4254:10:0"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "2523:316:0",
										"text": " @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "2853:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "2874:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2860:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 114,
														"name": "buffer",
														"nameLocations": [
															"2860:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "2860:6:0"
													},
													"referencedDeclaration": 7,
													"src": "2860:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2892:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2879:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "2903:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2898:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2859:48:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2930:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 122,
														"name": "buffer",
														"nameLocations": [
															"2930:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "2930:6:0"
													},
													"referencedDeclaration": 7,
													"src": "2930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2929:15:0"
									},
									"scope": 420,
									"src": "2844:1427:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "4631:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 213,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "4655:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 214,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "4660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 215,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "4666:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4671:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4666:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															220,
															326
														],
														"referencedDeclaration": 200,
														"src": "4648:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$7_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4648:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 211,
												"id": 218,
												"nodeType": "Return",
												"src": "4641:37:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "4277:257:0",
										"text": " @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "4548:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "4569:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "4555:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 202,
														"name": "buffer",
														"nameLocations": [
															"4555:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "4555:6:0"
													},
													"referencedDeclaration": 7,
													"src": "4555:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4587:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "4574:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4574:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:38:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "4616:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 209,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 208,
														"name": "buffer",
														"nameLocations": [
															"4616:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "4616:6:0"
													},
													"referencedDeclaration": 7,
													"src": "4616:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4615:15:0"
									},
									"scope": 420,
									"src": "4539:146:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "5037:610:0",
										"statements": [
											{
												"assignments": [
													233
												],
												"declarations": [
													{
														"constant": false,
														"id": 233,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "5052:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "5047:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 232,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5047:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 234,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "5058:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 235,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5062:3:0",
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "5058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5066:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "5058:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5047:25:0"
											},
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "offPlusOne",
														"nameLocation": "5087:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "5082:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 238,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 240,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "5100:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5106:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5082:25:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 244,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "5121:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 245,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "5128:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 246,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5132:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "5128:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5121:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 256,
												"nodeType": "IfStatement",
												"src": "5117:77:0",
												"trueBody": {
													"id": 255,
													"nodeType": "Block",
													"src": "5142:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 249,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5163:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "offPlusOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 239,
																			"src": "5168:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5181:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "5168:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 248,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "5156:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5156:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 254,
															"nodeType": "ExpressionStatement",
															"src": "5156:27:0"
														}
													]
												}
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5213:407:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5276:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "5296:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5290:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5290:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "5280:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5383:37:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "5403:6:0"
																			},
																			{
																				"name": "off",
																				"nodeType": "YulIdentifier",
																				"src": "5411:3:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5399:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5399:16:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:2:0",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:25:0"
															},
															"variables": [
																{
																	"name": "dest",
																	"nodeType": "YulTypedName",
																	"src": "5387:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "5441:4:0"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5447:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore8",
																	"nodeType": "YulIdentifier",
																	"src": "5433:7:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5433:19:0"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5552:58:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nodeType": "YulIdentifier",
																					"src": "5577:6:0"
																				},
																				{
																					"name": "offPlusOne",
																					"nodeType": "YulIdentifier",
																					"src": "5585:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5570:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5570:26:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5570:26:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offPlusOne",
																		"nodeType": "YulIdentifier",
																		"src": "5525:10:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "5543:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5537:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5537:13:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5522:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:29:0"
															},
															"nodeType": "YulIf",
															"src": "5519:91:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 224,
														"isOffset": false,
														"isSlot": false,
														"src": "5296:3:0",
														"valueSize": 1
													},
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": false,
														"src": "5447:4:0",
														"valueSize": 1
													},
													{
														"declaration": 233,
														"isOffset": false,
														"isSlot": false,
														"src": "5411:3:0",
														"valueSize": 1
													},
													{
														"declaration": 239,
														"isOffset": false,
														"isSlot": false,
														"src": "5525:10:0",
														"valueSize": 1
													},
													{
														"declaration": 239,
														"isOffset": false,
														"isSlot": false,
														"src": "5585:10:0",
														"valueSize": 1
													}
												],
												"id": 257,
												"nodeType": "InlineAssembly",
												"src": "5204:416:0"
											},
											{
												"expression": {
													"id": 258,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 224,
													"src": "5637:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 231,
												"id": 259,
												"nodeType": "Return",
												"src": "5630:10:0"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "4691:252:0",
										"text": " @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendUint8",
									"nameLocation": "4957:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "4983:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4969:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 222,
														"name": "buffer",
														"nameLocations": [
															"4969:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "4969:6:0"
													},
													"referencedDeclaration": 7,
													"src": "4969:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4994:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "4988:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 225,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:31:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "5022:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 229,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 228,
														"name": "buffer",
														"nameLocations": [
															"5022:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "5022:6:0"
													},
													"referencedDeclaration": 7,
													"src": "5022:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5021:15:0"
									},
									"scope": 420,
									"src": "4948:699:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "6079:854:0",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "6094:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "6089:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 277,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "6100:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6104:3:0",
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "6100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6108:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6100:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6089:25:0"
											},
											{
												"assignments": [
													282
												],
												"declarations": [
													{
														"constant": false,
														"id": 282,
														"mutability": "mutable",
														"name": "newCapacity",
														"nameLocation": "6129:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "6124:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 281,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "6124:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 283,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "6143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 284,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6149:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6143:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6124:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 287,
														"name": "newCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "6166:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 288,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 265,
															"src": "6180:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6184:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6180:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6166:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 299,
												"nodeType": "IfStatement",
												"src": "6162:85:0",
												"trueBody": {
													"id": 298,
													"nodeType": "Block",
													"src": "6194:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 292,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "6215:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 293,
																			"name": "newCapacity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "6220:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6234:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "6220:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 291,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "6208:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6208:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 297,
															"nodeType": "ExpressionStatement",
															"src": "6208:28:0"
														}
													]
												}
											},
											{
												"id": 322,
												"nodeType": "UncheckedBlock",
												"src": "6257:650:0",
												"statements": [
													{
														"assignments": [
															301
														],
														"declarations": [
															{
																"constant": false,
																"id": 301,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "6286:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 322,
																"src": "6281:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 300,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "6281:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 308,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6294:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"id": 303,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 269,
																			"src": "6301:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6294:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6293:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6308:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "6293:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6281:28:0"
													},
													{
														"expression": {
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 309,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6355:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 310,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "6362:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "38",
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6371:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "3332",
																							"id": 312,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6376:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_32_by_1",
																								"typeString": "int_const 32"
																							},
																							"value": "32"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 313,
																							"name": "len",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 269,
																							"src": "6381:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6376:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 315,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6375:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6371:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6370:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6362:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "6355:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 320,
														"nodeType": "ExpressionStatement",
														"src": "6355:31:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6409:488:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:24:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buf",
																				"nodeType": "YulIdentifier",
																				"src": "6500:3:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6494:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6494:10:0"
																	},
																	"variables": [
																		{
																			"name": "bufptr",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6603:36:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "6619:6:0"
																			},
																			{
																				"name": "newCapacity",
																				"nodeType": "YulIdentifier",
																				"src": "6627:11:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6615:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6615:24:0"
																	},
																	"variables": [
																		{
																			"name": "dest",
																			"nodeType": "YulTypedName",
																			"src": "6607:4:0",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "6663:4:0"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "dest",
																										"nodeType": "YulIdentifier",
																										"src": "6682:4:0"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6676:5:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6676:11:0"
																							},
																							{
																								"arguments": [
																									{
																										"name": "mask",
																										"nodeType": "YulIdentifier",
																										"src": "6693:4:0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "6689:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6689:9:0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "6672:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6672:27:0"
																					},
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "6701:4:0"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "6669:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6669:37:0"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "6656:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:51:0"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6656:51:0"
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6816:67:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "bufptr",
																							"nodeType": "YulIdentifier",
																							"src": "6845:6:0"
																						},
																						{
																							"name": "newCapacity",
																							"nodeType": "YulIdentifier",
																							"src": "6853:11:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "6838:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6838:27:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6838:27:0"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "newCapacity",
																				"nodeType": "YulIdentifier",
																				"src": "6788:11:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "bufptr",
																						"nodeType": "YulIdentifier",
																						"src": "6807:6:0"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "6801:5:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6801:13:0"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6785:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6785:30:0"
																	},
																	"nodeType": "YulIf",
																	"src": "6782:101:0"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 265,
																"isOffset": false,
																"isSlot": false,
																"src": "6500:3:0",
																"valueSize": 1
															},
															{
																"declaration": 267,
																"isOffset": false,
																"isSlot": false,
																"src": "6701:4:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "6693:4:0",
																"valueSize": 1
															},
															{
																"declaration": 282,
																"isOffset": false,
																"isSlot": false,
																"src": "6627:11:0",
																"valueSize": 1
															},
															{
																"declaration": 282,
																"isOffset": false,
																"isSlot": false,
																"src": "6788:11:0",
																"valueSize": 1
															},
															{
																"declaration": 282,
																"isOffset": false,
																"isSlot": false,
																"src": "6853:11:0",
																"valueSize": 1
															}
														],
														"id": 321,
														"nodeType": "InlineAssembly",
														"src": "6400:497:0"
													}
												]
											},
											{
												"expression": {
													"id": 323,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "6923:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 274,
												"id": 324,
												"nodeType": "Return",
												"src": "6916:10:0"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "5653:326:0",
										"text": " @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "append",
									"nameLocation": "5993:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "6014:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6000:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 263,
														"name": "buffer",
														"nameLocations": [
															"6000:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "6000:6:0"
													},
													"referencedDeclaration": 7,
													"src": "6000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6027:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6019:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "6038:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6033:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6033:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:43:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "6064:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 272,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 271,
														"name": "buffer",
														"nameLocations": [
															"6064:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "6064:6:0"
													},
													"referencedDeclaration": 7,
													"src": "6064:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6063:15:0"
									},
									"scope": 420,
									"src": "5984:949:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "7294:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 339,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "7318:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 342,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "7331:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes20",
																		"typeString": "bytes20"
																	}
																],
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 340,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7323:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7323:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3230",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7338:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"id": 338,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															220,
															326
														],
														"referencedDeclaration": 326,
														"src": "7311:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$7_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7311:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 337,
												"id": 346,
												"nodeType": "Return",
												"src": "7304:37:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "6939:256:0",
										"text": " @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendBytes20",
									"nameLocation": "7209:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "7237:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "7223:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 328,
														"name": "buffer",
														"nameLocations": [
															"7223:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "7223:6:0"
													},
													"referencedDeclaration": 7,
													"src": "7223:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7250:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "7242:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 331,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7222:33:0"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "7279:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 334,
														"name": "buffer",
														"nameLocations": [
															"7279:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "7279:6:0"
													},
													"referencedDeclaration": 7,
													"src": "7279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7278:15:0"
									},
									"scope": 420,
									"src": "7200:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "7708:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "7732:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														{
															"id": 362,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "7737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "3332",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7743:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 360,
														"name": "append",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															200,
															220,
															326
														],
														"referencedDeclaration": 326,
														"src": "7725:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$7_memory_ptr_$",
															"typeString": "function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7725:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 359,
												"id": 365,
												"nodeType": "Return",
												"src": "7718:28:0"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "7354:255:0",
										"text": " @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendBytes32",
									"nameLocation": "7623:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "7651:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7637:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 351,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 350,
														"name": "buffer",
														"nameLocations": [
															"7637:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "7637:6:0"
													},
													"referencedDeclaration": 7,
													"src": "7637:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7664:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7656:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 353,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7636:33:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "7693:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 357,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 356,
														"name": "buffer",
														"nameLocations": [
															"7693:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "7693:6:0"
													},
													"referencedDeclaration": 7,
													"src": "7693:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7692:15:0"
									},
									"scope": 420,
									"src": "7614:139:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "8179:699:0",
										"statements": [
											{
												"assignments": [
													382
												],
												"declarations": [
													{
														"constant": false,
														"id": 382,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "8194:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "8189:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 381,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8189:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 386,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 383,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "8200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8204:3:0",
														"memberName": "buf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "8200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8208:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "8200:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8189:25:0"
											},
											{
												"assignments": [
													388
												],
												"declarations": [
													{
														"constant": false,
														"id": 388,
														"mutability": "mutable",
														"name": "newCapacity",
														"nameLocation": "8229:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "8224:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 387,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8224:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 389,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "8243:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 390,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "8249:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8243:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8224:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "newCapacity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "8266:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 394,
															"name": "buf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "8280:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																"typeString": "struct Buffer.buffer memory"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8284:8:0",
														"memberName": "capacity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "8280:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8266:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "IfStatement",
												"src": "8262:85:0",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "8294:53:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 398,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "8315:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 399,
																			"name": "newCapacity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "8320:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 400,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8334:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8320:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 397,
																	"name": "resize",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "8308:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8308:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 403,
															"nodeType": "ExpressionStatement",
															"src": "8308:28:0"
														}
													]
												}
											},
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "mask",
														"nameLocation": "8362:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "8357:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8357:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "323536",
																	"id": 408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8370:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 409,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "8377:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8370:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 411,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8369:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8384:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8369:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8357:28:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8404:448:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8467:24:0",
															"value": {
																"arguments": [
																	{
																		"name": "buf",
																		"nodeType": "YulIdentifier",
																		"src": "8487:3:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8481:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8481:10:0"
															},
															"variables": [
																{
																	"name": "bufptr",
																	"nodeType": "YulTypedName",
																	"src": "8471:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8582:36:0",
															"value": {
																"arguments": [
																	{
																		"name": "bufptr",
																		"nodeType": "YulIdentifier",
																		"src": "8598:6:0"
																	},
																	{
																		"name": "newCapacity",
																		"nodeType": "YulIdentifier",
																		"src": "8606:11:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8594:24:0"
															},
															"variables": [
																{
																	"name": "dest",
																	"nodeType": "YulTypedName",
																	"src": "8586:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dest",
																		"nodeType": "YulIdentifier",
																		"src": "8638:4:0"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "dest",
																								"nodeType": "YulIdentifier",
																								"src": "8657:4:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8651:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8651:11:0"
																					},
																					{
																						"arguments": [
																							{
																								"name": "mask",
																								"nodeType": "YulIdentifier",
																								"src": "8668:4:0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8664:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8664:9:0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8647:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8647:27:0"
																			},
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "8676:4:0"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8644:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8644:37:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8631:51:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8631:51:0"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8783:59:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "bufptr",
																					"nodeType": "YulIdentifier",
																					"src": "8808:6:0"
																				},
																				{
																					"name": "newCapacity",
																					"nodeType": "YulIdentifier",
																					"src": "8816:11:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8801:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8801:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8801:27:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newCapacity",
																		"nodeType": "YulIdentifier",
																		"src": "8755:11:0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "bufptr",
																				"nodeType": "YulIdentifier",
																				"src": "8774:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8768:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8768:13:0"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8752:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8752:30:0"
															},
															"nodeType": "YulIf",
															"src": "8749:93:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 371,
														"isOffset": false,
														"isSlot": false,
														"src": "8487:3:0",
														"valueSize": 1
													},
													{
														"declaration": 373,
														"isOffset": false,
														"isSlot": false,
														"src": "8676:4:0",
														"valueSize": 1
													},
													{
														"declaration": 407,
														"isOffset": false,
														"isSlot": false,
														"src": "8668:4:0",
														"valueSize": 1
													},
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:11:0",
														"valueSize": 1
													},
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "8755:11:0",
														"valueSize": 1
													},
													{
														"declaration": 388,
														"isOffset": false,
														"isSlot": false,
														"src": "8816:11:0",
														"valueSize": 1
													}
												],
												"id": 415,
												"nodeType": "InlineAssembly",
												"src": "8395:457:0"
											},
											{
												"expression": {
													"id": 416,
													"name": "buf",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 371,
													"src": "8868:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
														"typeString": "struct Buffer.buffer memory"
													}
												},
												"functionReturnParameters": 380,
												"id": 417,
												"nodeType": "Return",
												"src": "8861:10:0"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "7759:319:0",
										"text": " @dev Appends a byte to the end of the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer."
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "appendInt",
									"nameLocation": "8092:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "buf",
												"nameLocation": "8116:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8102:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 369,
														"name": "buffer",
														"nameLocations": [
															"8102:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "8102:6:0"
													},
													"referencedDeclaration": 7,
													"src": "8102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8126:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "8137:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8132:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8101:40:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "8164:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
													"typeString": "struct Buffer.buffer"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "buffer",
														"nameLocations": [
															"8164:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 7,
														"src": "8164:6:0"
													},
													"referencedDeclaration": 7,
													"src": "8164:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
														"typeString": "struct Buffer.buffer"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8163:15:0"
									},
									"scope": 420,
									"src": "8083:795:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 421,
							"src": "445:8435:0",
							"usedErrors": []
						}
					],
					"src": "41:8840:0"
				},
				"id": 0
			},
			"packages/contracts/src/dnssec-oracle/BytesUtils.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/BytesUtils.sol",
					"exportedSymbols": {
						"BytesUtils": [
							1238
						]
					},
					"id": 1239,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 422,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BytesUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1238,
							"linearizedBaseContracts": [
								1238
							],
							"name": "BytesUtils",
							"nameLocation": "74:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "8a3c1cfb",
									"id": 428,
									"name": "OffsetOutOfBoundsError",
									"nameLocation": "98:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "129:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "121:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "137:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "120:32:1"
									},
									"src": "92:61:1"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "563:149:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 440,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "582:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 441,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "591:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "582:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 443,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "598:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "603:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "598:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "582:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 439,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "574:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "574:36:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "630:75:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "645:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "670:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "676:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:13:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "681:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:26:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "690:3:1"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "652:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "652:42:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "645:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 434,
														"isOffset": false,
														"isSlot": false,
														"src": "690:3:1",
														"valueSize": 1
													},
													{
														"declaration": 432,
														"isOffset": false,
														"isSlot": false,
														"src": "681:6:1",
														"valueSize": 1
													},
													{
														"declaration": 437,
														"isOffset": false,
														"isSlot": false,
														"src": "645:3:1",
														"valueSize": 1
													},
													{
														"declaration": 430,
														"isOffset": false,
														"isSlot": false,
														"src": "670:4:1",
														"valueSize": 1
													}
												],
												"id": 448,
												"nodeType": "InlineAssembly",
												"src": "621:84:1"
											}
										]
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keccak",
									"nameLocation": "438:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "468:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "455:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "491:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "483:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "516:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "508:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:82:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "558:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "550:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 436,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "549:13:1"
									},
									"scope": 1238,
									"src": "429:283:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "1197:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 460,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1223:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 462,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "1232:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1237:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1232:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 464,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "1245:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1252:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 466,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "1255:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1261:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1255:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 459,
														"name": "compare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															642
														],
														"referencedDeclaration": 642,
														"src": "1215:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$",
															"typeString": "function (bytes memory,uint256,uint256,bytes memory,uint256,uint256) pure returns (int256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1215:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 458,
												"id": 469,
												"nodeType": "Return",
												"src": "1208:60:1"
											}
										]
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compare",
									"nameLocation": "1094:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1125:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1112:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1112:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "1153:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1140:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1140:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:64:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1189:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1188:8:1"
									},
									"scope": 1238,
									"src": "1085:191:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "2132:1356:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 488,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "2147:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 489,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "2156:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2147:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 491,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "2162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2167:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2162:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2147:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "2143:115:1",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "2175:83:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 495,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 475,
																			"src": "2220:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 496,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "2229:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2220:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 498,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "2234:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2239:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2234:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 494,
																	"name": "OffsetOutOfBoundsError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "2197:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2197:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "RevertStatement",
															"src": "2190:56:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 504,
															"name": "otheroffset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "2272:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 505,
															"name": "otherlen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2286:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2272:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 507,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "2297:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2303:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2297:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2272:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "2268:137:1",
												"trueBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "2311:94:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 511,
																			"name": "otheroffset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 481,
																			"src": "2356:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 512,
																			"name": "otherlen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 483,
																			"src": "2370:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2356:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 514,
																			"name": "other",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 479,
																			"src": "2380:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2386:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2380:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 510,
																	"name": "OffsetOutOfBoundsError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "2333:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2333:60:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 517,
															"nodeType": "RevertStatement",
															"src": "2326:67:1"
														}
													]
												}
											},
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "shortest",
														"nameLocation": "2425:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "2417:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2417:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"id": 522,
													"name": "len",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 477,
													"src": "2436:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2417:22:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 524,
														"name": "otherlen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "2454:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 525,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "2465:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2454:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "2450:39:1",
												"trueBody": {
													"expression": {
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 527,
															"name": "shortest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "2470:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 528,
															"name": "otherlen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2481:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2470:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 530,
													"nodeType": "ExpressionStatement",
													"src": "2470:19:1"
												}
											},
											{
												"assignments": [
													533
												],
												"declarations": [
													{
														"constant": false,
														"id": 533,
														"mutability": "mutable",
														"name": "selfptr",
														"nameLocation": "2510:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "2502:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 532,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2502:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 534,
												"nodeType": "VariableDeclarationStatement",
												"src": "2502:15:1"
											},
											{
												"assignments": [
													536
												],
												"declarations": [
													{
														"constant": false,
														"id": 536,
														"mutability": "mutable",
														"name": "otherptr",
														"nameLocation": "2536:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "2528:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2528:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 537,
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:16:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2566:121:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2581:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "self",
																		"nodeType": "YulIdentifier",
																		"src": "2596:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2606:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2614:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2602:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2602:15:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:26:1"
															},
															"variableNames": [
																{
																	"name": "selfptr",
																	"nodeType": "YulIdentifier",
																	"src": "2581:7:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2632:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "other",
																		"nodeType": "YulIdentifier",
																		"src": "2648:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "otheroffset",
																				"nodeType": "YulIdentifier",
																				"src": "2659:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2672:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2655:20:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:32:1"
															},
															"variableNames": [
																{
																	"name": "otherptr",
																	"nodeType": "YulIdentifier",
																	"src": "2632:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 475,
														"isOffset": false,
														"isSlot": false,
														"src": "2606:6:1",
														"valueSize": 1
													},
													{
														"declaration": 479,
														"isOffset": false,
														"isSlot": false,
														"src": "2648:5:1",
														"valueSize": 1
													},
													{
														"declaration": 481,
														"isOffset": false,
														"isSlot": false,
														"src": "2659:11:1",
														"valueSize": 1
													},
													{
														"declaration": 536,
														"isOffset": false,
														"isSlot": false,
														"src": "2632:8:1",
														"valueSize": 1
													},
													{
														"declaration": 473,
														"isOffset": false,
														"isSlot": false,
														"src": "2596:4:1",
														"valueSize": 1
													},
													{
														"declaration": 533,
														"isOffset": false,
														"isSlot": false,
														"src": "2581:7:1",
														"valueSize": 1
													}
												],
												"id": 538,
												"nodeType": "InlineAssembly",
												"src": "2557:130:1"
											},
											{
												"body": {
													"id": 629,
													"nodeType": "Block",
													"src": "2746:685:1",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "a",
																	"nameLocation": "2769:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 629,
																	"src": "2761:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 552,
															"nodeType": "VariableDeclarationStatement",
															"src": "2761:9:1"
														},
														{
															"assignments": [
																554
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 554,
																	"mutability": "mutable",
																	"name": "b",
																	"nameLocation": "2793:1:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 629,
																	"src": "2785:9:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2785:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"nodeType": "VariableDeclarationStatement",
															"src": "2785:9:1"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2818:91:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2837:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "selfptr",
																					"nodeType": "YulIdentifier",
																					"src": "2848:7:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2842:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2842:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "a",
																				"nodeType": "YulIdentifier",
																				"src": "2837:1:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2874:20:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "otherptr",
																					"nodeType": "YulIdentifier",
																					"src": "2885:8:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2879:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2879:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "b",
																				"nodeType": "YulIdentifier",
																				"src": "2874:1:1"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 551,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2837:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 554,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2874:1:1",
																	"valueSize": 1
																},
																{
																	"declaration": 536,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2885:8:1",
																	"valueSize": 1
																},
																{
																	"declaration": 533,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2848:7:1",
																	"valueSize": 1
																}
															],
															"id": 556,
															"nodeType": "InlineAssembly",
															"src": "2809:100:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 557,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "2927:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 558,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "2932:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2927:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 620,
															"nodeType": "IfStatement",
															"src": "2923:440:1",
															"trueBody": {
																"id": 619,
																"nodeType": "Block",
																"src": "2935:428:1",
																"statements": [
																	{
																		"assignments": [
																			561
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 561,
																				"mutability": "mutable",
																				"name": "mask",
																				"nameLocation": "3024:4:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 619,
																				"src": "3016:12:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3016:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 562,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3016:12:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 563,
																					"name": "shortest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 521,
																					"src": "3051:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 564,
																					"name": "idx",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 540,
																					"src": "3062:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3051:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3069:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3051:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 595,
																			"nodeType": "Block",
																			"src": "3146:89:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 593,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 577,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 561,
																							"src": "3169:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 592,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "3176:39:1",
																							"subExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 590,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 588,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"hexValue": "32",
																												"id": 578,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "3178:1:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_2_by_1",
																													"typeString": "int_const 2"
																												},
																												"value": "2"
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "**",
																											"rightExpression": {
																												"components": [
																													{
																														"commonType": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														"id": 586,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"hexValue": "38",
																															"id": 579,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "3184:1:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_8_by_1",
																																"typeString": "int_const 8"
																															},
																															"value": "8"
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "*",
																														"rightExpression": {
																															"components": [
																																{
																																	"commonType": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	},
																																	"id": 584,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"leftExpression": {
																																		"commonType": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		},
																																		"id": 582,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"leftExpression": {
																																			"id": 580,
																																			"name": "idx",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 540,
																																			"src": "3189:3:1",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_uint256",
																																				"typeString": "uint256"
																																			}
																																		},
																																		"nodeType": "BinaryOperation",
																																		"operator": "+",
																																		"rightExpression": {
																																			"hexValue": "3332",
																																			"id": 581,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": true,
																																			"kind": "number",
																																			"lValueRequested": false,
																																			"nodeType": "Literal",
																																			"src": "3195:2:1",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_rational_32_by_1",
																																				"typeString": "int_const 32"
																																			},
																																			"value": "32"
																																		},
																																		"src": "3189:8:1",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"nodeType": "BinaryOperation",
																																	"operator": "-",
																																	"rightExpression": {
																																		"id": 583,
																																		"name": "shortest",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 521,
																																		"src": "3200:8:1",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"src": "3189:19:1",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_uint256",
																																		"typeString": "uint256"
																																	}
																																}
																															],
																															"id": 585,
																															"isConstant": false,
																															"isInlineArray": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "TupleExpression",
																															"src": "3188:21:1",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"src": "3184:25:1",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"id": 587,
																												"isConstant": false,
																												"isInlineArray": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "TupleExpression",
																												"src": "3183:27:1",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "3178:32:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 589,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "3213:1:1",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"src": "3178:36:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 591,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "3177:38:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3169:46:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 594,
																					"nodeType": "ExpressionStatement",
																					"src": "3169:46:1"
																				}
																			]
																		},
																		"id": 596,
																		"nodeType": "IfStatement",
																		"src": "3047:188:1",
																		"trueBody": {
																			"id": 576,
																			"nodeType": "Block",
																			"src": "3073:67:1",
																			"statements": [
																				{
																					"expression": {
																						"id": 574,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 568,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 561,
																							"src": "3096:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"expression": {
																								"arguments": [
																									{
																										"id": 571,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "3108:7:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 570,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "3108:7:1",
																											"typeDescriptions": {}
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										}
																									],
																									"id": 569,
																									"name": "type",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967269,
																									"src": "3103:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																										"typeString": "function () pure"
																									}
																								},
																								"id": 572,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3103:13:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_meta_type_t_uint256",
																									"typeString": "type(uint256)"
																								}
																							},
																							"id": 573,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "3117:3:1",
																							"memberName": "max",
																							"nodeType": "MemberAccess",
																							"src": "3103:17:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3096:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 575,
																					"nodeType": "ExpressionStatement",
																					"src": "3096:24:1"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			598
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 598,
																				"mutability": "mutable",
																				"name": "diff",
																				"nameLocation": "3260:4:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 619,
																				"src": "3253:11:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"typeName": {
																					"id": 597,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "3253:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 612,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 603,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 601,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 551,
																							"src": "3274:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"id": 602,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 561,
																							"src": "3278:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3274:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 600,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3267:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 599,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3267:6:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3267:16:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 609,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 607,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 554,
																							"src": "3293:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"id": 608,
																							"name": "mask",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 561,
																							"src": "3297:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3293:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3286:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_int256_$",
																						"typeString": "type(int256)"
																					},
																					"typeName": {
																						"id": 605,
																						"name": "int256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3286:6:1",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3286:16:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "3267:35:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3253:49:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 613,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "3325:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3333:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3325:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 618,
																		"nodeType": "IfStatement",
																		"src": "3321:26:1",
																		"trueBody": {
																			"expression": {
																				"id": 616,
																				"name": "diff",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "3343:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"functionReturnParameters": 487,
																			"id": 617,
																			"nodeType": "Return",
																			"src": "3336:11:1"
																		}
																	}
																]
															}
														},
														{
															"expression": {
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 621,
																	"name": "selfptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3377:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3388:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3377:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "3377:13:1"
														},
														{
															"expression": {
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 625,
																	"name": "otherptr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "3405:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3417:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "3405:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "3405:14:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 544,
														"name": "shortest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2725:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2719:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"initializationExpression": {
													"assignments": [
														540
													],
													"declarations": [
														{
															"constant": false,
															"id": 540,
															"mutability": "mutable",
															"name": "idx",
															"nameLocation": "2710:3:1",
															"nodeType": "VariableDeclaration",
															"scope": 630,
															"src": "2702:11:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 539,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2702:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 542,
													"initialValue": {
														"hexValue": "30",
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2702:15:1"
												},
												"loopExpression": {
													"expression": {
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 546,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "2735:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "3332",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2742:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "2735:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 549,
													"nodeType": "ExpressionStatement",
													"src": "2735:9:1"
												},
												"nodeType": "ForStatement",
												"src": "2697:734:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 633,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "3457:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3450:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 631,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "3450:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3450:11:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [
															{
																"id": 637,
																"name": "otherlen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "3471:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3464:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 635,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "3464:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3464:16:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3450:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 487,
												"id": 640,
												"nodeType": "Return",
												"src": "3443:37:1"
											}
										]
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compare",
									"nameLocation": "1925:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1956:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1943:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1943:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1979:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1971:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "2004:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1996:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "2031:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2018:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2018:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "otheroffset",
												"nameLocation": "2055:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2047:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2047:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "otherlen",
												"nameLocation": "2085:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2077:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2077:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1932:168:1"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "2124:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 485,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "2124:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2123:8:1"
									},
									"scope": 1238,
									"src": "1916:1572:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "4111:86:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 658,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "4136:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 659,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "4142:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 660,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "4150:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 657,
															"name": "keccak",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4129:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes32)"
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4129:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 663,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "4165:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 664,
																"name": "otherOffset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "4172:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 665,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "4185:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 662,
															"name": "keccak",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4158:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes32)"
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4158:31:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4129:60:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 656,
												"id": 668,
												"nodeType": "Return",
												"src": "4122:67:1"
											}
										]
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "3934:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "3964:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3951:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3951:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "3987:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "3979:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3979:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "4017:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4004:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4004:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "otherOffset",
												"nameLocation": "4041:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4033:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4033:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "4071:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4063:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:141:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4105:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4105:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:6:1"
									},
									"scope": 1238,
									"src": "3925:272:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "4761:152:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 684,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "4799:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 685,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "4805:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 686,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4813:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4818:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4813:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 688,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "4827:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4813:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 683,
															"name": "keccak",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4792:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes32)"
															}
														},
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4792:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 692,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4858:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 693,
																"name": "otherOffset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "4865:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 694,
																		"name": "other",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "4878:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4884:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4878:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 696,
																	"name": "otherOffset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "4893:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4878:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 691,
															"name": "keccak",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "4851:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes32)"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4851:54:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4792:113:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 700,
												"nodeType": "Return",
												"src": "4772:133:1"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "4606:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4636:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "4623:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 671,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4623:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "4659:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "4651:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "4689:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "4676:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4676:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "otherOffset",
												"nameLocation": "4713:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "4705:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4612:119:1"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "4755:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4755:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4754:6:1"
									},
									"scope": 1238,
									"src": "4597:316:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "5416:136:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 713,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "5447:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5452:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5447:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 715,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5462:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 716,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "5471:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5477:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5471:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5462:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5447:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 721,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "5507:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 722,
																"name": "offset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "5513:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 723,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "5521:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"hexValue": "30",
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 725,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "5531:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5537:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5531:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 720,
															"name": "equals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																670,
																702,
																731,
																756
															],
															"referencedDeclaration": 670,
															"src": "5500:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (bytes memory,uint256,bytes memory,uint256,uint256) pure returns (bool)"
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5500:44:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5447:97:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 712,
												"id": 729,
												"nodeType": "Return",
												"src": "5427:117:1"
											}
										]
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "5291:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "5321:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5308:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5308:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "5344:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5336:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "5374:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5361:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5361:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5297:89:1"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "5410:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 710,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5410:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5409:6:1"
									},
									"scope": 1238,
									"src": "5282:270:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "5922:121:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 740,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "5953:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5958:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5953:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 742,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "5968:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5974:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5968:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5953:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"id": 746,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "6004:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"hexValue": "30",
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6010:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 748,
																"name": "other",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "6013:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6020:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"expression": {
																	"id": 750,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "6023:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6028:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6023:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 745,
															"name": "equals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																670,
																702,
																731,
																756
															],
															"referencedDeclaration": 670,
															"src": "5997:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (bytes memory,uint256,bytes memory,uint256,uint256) pure returns (bool)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5997:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5953:82:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 739,
												"id": 754,
												"nodeType": "Return",
												"src": "5933:102:1"
											}
										]
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "5822:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "5852:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "5839:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "5880:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "5867:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 734,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5867:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5828:64:1"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "5916:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 737,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5916:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5915:6:1"
									},
									"scope": 1238,
									"src": "5813:230:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "6408:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 767,
																"name": "self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "6432:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 769,
															"indexExpression": {
																"id": 768,
																"name": "idx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 760,
																"src": "6437:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6432:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														],
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6426:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 765,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "6426:5:1",
															"typeDescriptions": {}
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6426:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 764,
												"id": 771,
												"nodeType": "Return",
												"src": "6419:23:1"
											}
										]
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint8",
									"nameLocation": "6307:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "6340:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "6327:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 757,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6327:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "idx",
												"nameLocation": "6363:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "6355:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6316:57:1"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "6403:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "6397:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 762,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6397:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6396:11:1"
									},
									"scope": 1238,
									"src": "6298:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "6819:144:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 783,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 777,
																	"src": "6838:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6844:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "6838:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 786,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "6849:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6854:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6849:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6838:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6830:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "6830:31:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6881:75:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6896:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "self",
																								"nodeType": "YulIdentifier",
																								"src": "6921:4:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6927:1:1",
																								"type": "",
																								"value": "2"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6917:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6917:12:1"
																					},
																					{
																						"name": "idx",
																						"nodeType": "YulIdentifier",
																						"src": "6931:3:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6913:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6913:22:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6907:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6907:29:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6938:6:1",
																		"type": "",
																		"value": "0xFFFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6903:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6903:42:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6896:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 777,
														"isOffset": false,
														"isSlot": false,
														"src": "6931:3:1",
														"valueSize": 1
													},
													{
														"declaration": 780,
														"isOffset": false,
														"isSlot": false,
														"src": "6896:3:1",
														"valueSize": 1
													},
													{
														"declaration": 775,
														"isOffset": false,
														"isSlot": false,
														"src": "6921:4:1",
														"valueSize": 1
													}
												],
												"id": 791,
												"nodeType": "InlineAssembly",
												"src": "6872:84:1"
											}
										]
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint16",
									"nameLocation": "6716:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "6750:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "6737:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "idx",
												"nameLocation": "6773:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "6765:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6726:57:1"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "6814:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "6807:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 779,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6807:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6806:12:1"
									},
									"scope": 1238,
									"src": "6707:256:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "7332:148:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 803,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "7351:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7357:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "7351:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 806,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "7362:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7367:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7362:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7351:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7343:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7343:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7343:31:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7394:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7409:53:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "self",
																								"nodeType": "YulIdentifier",
																								"src": "7434:4:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7440:1:1",
																								"type": "",
																								"value": "4"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7430:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7430:12:1"
																					},
																					{
																						"name": "idx",
																						"nodeType": "YulIdentifier",
																						"src": "7444:3:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7426:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7426:22:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7420:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7420:29:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7451:10:1",
																		"type": "",
																		"value": "0xFFFFFFFF"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7416:46:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7409:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 797,
														"isOffset": false,
														"isSlot": false,
														"src": "7444:3:1",
														"valueSize": 1
													},
													{
														"declaration": 800,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:3:1",
														"valueSize": 1
													},
													{
														"declaration": 795,
														"isOffset": false,
														"isSlot": false,
														"src": "7434:4:1",
														"valueSize": 1
													}
												],
												"id": 811,
												"nodeType": "InlineAssembly",
												"src": "7385:88:1"
											}
										]
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readUint32",
									"nameLocation": "7229:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "7263:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "7250:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 794,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7250:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "idx",
												"nameLocation": "7286:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "7278:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:57:1"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "7327:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "7320:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 799,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "7320:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7319:12:1"
									},
									"scope": 1238,
									"src": "7220:260:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 832,
										"nodeType": "Block",
										"src": "7825:133:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 823,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "7844:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7850:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "7844:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 826,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "7856:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7861:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7856:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7844:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7836:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7836:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "7836:32:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7888:63:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7903:37:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "self",
																						"nodeType": "YulIdentifier",
																						"src": "7924:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7930:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7920:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7920:13:1"
																			},
																			{
																				"name": "idx",
																				"nodeType": "YulIdentifier",
																				"src": "7935:3:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7916:23:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7910:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7910:30:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7903:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "7935:3:1",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:3:1",
														"valueSize": 1
													},
													{
														"declaration": 815,
														"isOffset": false,
														"isSlot": false,
														"src": "7924:4:1",
														"valueSize": 1
													}
												],
												"id": 831,
												"nodeType": "InlineAssembly",
												"src": "7879:72:1"
											}
										]
									},
									"id": 833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytes32",
									"nameLocation": "7720:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "7755:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "7742:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7742:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "idx",
												"nameLocation": "7778:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "7770:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7731:57:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "7820:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "7812:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7812:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7811:13:1"
									},
									"scope": 1238,
									"src": "7711:247:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "8303:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 843,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "8322:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8328:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "8322:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 846,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "8334:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8339:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8334:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8322:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8314:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8314:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "8314:32:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8366:185:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8381:159:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "self",
																								"nodeType": "YulIdentifier",
																								"src": "8424:4:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8430:2:1",
																								"type": "",
																								"value": "32"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8420:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8420:13:1"
																					},
																					{
																						"name": "idx",
																						"nodeType": "YulIdentifier",
																						"src": "8435:3:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8416:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8416:23:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "8410:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8410:30:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8459:66:1",
																		"type": "",
																		"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:152:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8381:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 837,
														"isOffset": false,
														"isSlot": false,
														"src": "8435:3:1",
														"valueSize": 1
													},
													{
														"declaration": 840,
														"isOffset": false,
														"isSlot": false,
														"src": "8381:3:1",
														"valueSize": 1
													},
													{
														"declaration": 835,
														"isOffset": false,
														"isSlot": false,
														"src": "8424:4:1",
														"valueSize": 1
													}
												],
												"id": 851,
												"nodeType": "InlineAssembly",
												"src": "8357:194:1"
											}
										]
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytes20",
									"nameLocation": "8198:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "8233:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8220:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8220:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "idx",
												"nameLocation": "8256:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8248:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8248:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8209:57:1"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "8298:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "8290:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 839,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "8290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8289:13:1"
									},
									"scope": 1238,
									"src": "8189:369:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "8964:235:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 865,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "8983:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3332",
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8990:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_32_by_1",
																	"typeString": "int_const 32"
																},
																"value": "32"
															},
															"src": "8983:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8975:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "8975:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 871,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "9012:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 872,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "9018:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9012:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 874,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "9025:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9030:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9025:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9012:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9004:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9004:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "9004:33:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "9057:135:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9072:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9096:3:1",
																						"type": "",
																						"value": "256"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9105:2:1",
																								"type": "",
																								"value": "32"
																							},
																							{
																								"name": "len",
																								"nodeType": "YulIdentifier",
																								"src": "9109:3:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "9101:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9101:12:1"
																					}
																				],
																				"functionName": {
																					"name": "exp",
																					"nodeType": "YulIdentifier",
																					"src": "9092:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9092:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9116:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9088:30:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "9084:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9084:35:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "9076:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9133:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "self",
																								"nodeType": "YulIdentifier",
																								"src": "9158:4:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9164:2:1",
																								"type": "",
																								"value": "32"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9154:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9154:13:1"
																					},
																					{
																						"name": "idx",
																						"nodeType": "YulIdentifier",
																						"src": "9169:3:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9150:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9150:23:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "9144:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9144:30:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "9176:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9140:41:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 857,
														"isOffset": false,
														"isSlot": false,
														"src": "9169:3:1",
														"valueSize": 1
													},
													{
														"declaration": 859,
														"isOffset": false,
														"isSlot": false,
														"src": "9109:3:1",
														"valueSize": 1
													},
													{
														"declaration": 862,
														"isOffset": false,
														"isSlot": false,
														"src": "9133:3:1",
														"valueSize": 1
													},
													{
														"declaration": 855,
														"isOffset": false,
														"isSlot": false,
														"src": "9158:4:1",
														"valueSize": 1
													}
												],
												"id": 879,
												"nodeType": "InlineAssembly",
												"src": "9048:144:1"
											}
										]
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readBytesN",
									"nameLocation": "8838:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "8872:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8859:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8859:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "idx",
												"nameLocation": "8895:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8887:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "8917:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8909:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:79:1"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "8959:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "8951:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 861,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8951:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:13:1"
									},
									"scope": 1238,
									"src": "8829:370:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9276:567:1",
										"statements": [
											{
												"body": {
													"id": 906,
													"nodeType": "Block",
													"src": "9367:142:1",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9391:58:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dest",
																					"nodeType": "YulIdentifier",
																					"src": "9417:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "9429:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9423:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9423:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9410:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9410:24:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9410:24:1"
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 883,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9417:4:1",
																	"valueSize": 1
																},
																{
																	"declaration": 885,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9429:3:1",
																	"valueSize": 1
																}
															],
															"id": 897,
															"nodeType": "InlineAssembly",
															"src": "9382:67:1"
														},
														{
															"expression": {
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 898,
																	"name": "dest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "9463:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9471:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "9463:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 901,
															"nodeType": "ExpressionStatement",
															"src": "9463:10:1"
														},
														{
															"expression": {
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 902,
																	"name": "src",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "9488:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9495:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "9488:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 905,
															"nodeType": "ExpressionStatement",
															"src": "9488:9:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "9345:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3332",
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9352:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "9345:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 907,
												"loopExpression": {
													"expression": {
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 893,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "9356:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "3332",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9363:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														},
														"src": "9356:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 896,
													"nodeType": "ExpressionStatement",
													"src": "9356:9:1"
												},
												"nodeType": "ForStatement",
												"src": "9338:171:1"
											},
											{
												"id": 921,
												"nodeType": "UncheckedBlock",
												"src": "9554:282:1",
												"statements": [
													{
														"assignments": [
															909
														],
														"declarations": [
															{
																"constant": false,
																"id": 909,
																"mutability": "mutable",
																"name": "mask",
																"nameLocation": "9587:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 921,
																"src": "9579:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9579:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 919,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9595:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 913,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3332",
																						"id": 911,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9603:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_32_by_1",
																							"typeString": "int_const 32"
																						},
																						"value": "32"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 912,
																						"name": "len",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 887,
																						"src": "9608:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9603:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 914,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9602:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9595:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 916,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9594:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9594:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9579:38:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "9641:184:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9660:41:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "src",
																						"nodeType": "YulIdentifier",
																						"src": "9685:3:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9679:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9679:10:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mask",
																						"nodeType": "YulIdentifier",
																						"src": "9695:4:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "9691:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9691:9:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9675:26:1"
																	},
																	"variables": [
																		{
																			"name": "srcpart",
																			"nodeType": "YulTypedName",
																			"src": "9664:7:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9719:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "dest",
																						"nodeType": "YulIdentifier",
																						"src": "9745:4:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9739:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9739:11:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "9752:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9735:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9735:22:1"
																	},
																	"variables": [
																		{
																			"name": "destpart",
																			"nodeType": "YulTypedName",
																			"src": "9723:8:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "dest",
																				"nodeType": "YulIdentifier",
																				"src": "9782:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "destpart",
																						"nodeType": "YulIdentifier",
																						"src": "9791:8:1"
																					},
																					{
																						"name": "srcpart",
																						"nodeType": "YulIdentifier",
																						"src": "9801:7:1"
																					}
																				],
																				"functionName": {
																					"name": "or",
																					"nodeType": "YulIdentifier",
																					"src": "9788:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9788:21:1"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "9775:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9775:35:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "9775:35:1"
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 883,
																"isOffset": false,
																"isSlot": false,
																"src": "9745:4:1",
																"valueSize": 1
															},
															{
																"declaration": 883,
																"isOffset": false,
																"isSlot": false,
																"src": "9782:4:1",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "9695:4:1",
																"valueSize": 1
															},
															{
																"declaration": 909,
																"isOffset": false,
																"isSlot": false,
																"src": "9752:4:1",
																"valueSize": 1
															},
															{
																"declaration": 885,
																"isOffset": false,
																"isSlot": false,
																"src": "9685:3:1",
																"valueSize": 1
															}
														],
														"id": 920,
														"nodeType": "InlineAssembly",
														"src": "9632:193:1"
													}
												]
											}
										]
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "memcpy",
									"nameLocation": "9216:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "9231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "9245:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9237:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9237:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "9258:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9250:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9250:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9222:40:1"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9276:0:1"
									},
									"scope": 1238,
									"src": "9207:636:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "10214:316:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "10233:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 936,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "10242:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10233:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 938,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "10249:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10254:6:1",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10249:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10233:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10225:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10225:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "10225:36:1"
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "ret",
														"nameLocation": "10287:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "10274:16:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 943,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10274:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"initialValue": {
													"arguments": [
														{
															"id": 947,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "10303:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "10293:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 945,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10297:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10293:14:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10274:33:1"
											},
											{
												"assignments": [
													951
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "dest",
														"nameLocation": "10326:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "10318:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 950,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10318:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 952,
												"nodeType": "VariableDeclarationStatement",
												"src": "10318:12:1"
											},
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "src",
														"nameLocation": "10349:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "10341:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10341:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"nodeType": "VariableDeclarationStatement",
												"src": "10341:11:1"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10374:93:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10389:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "10401:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10406:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10397:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10397:12:1"
															},
															"variableNames": [
																{
																	"name": "dest",
																	"nodeType": "YulIdentifier",
																	"src": "10389:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10423:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "self",
																				"nodeType": "YulIdentifier",
																				"src": "10438:4:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10444:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10434:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10434:13:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:26:1"
															},
															"variableNames": [
																{
																	"name": "src",
																	"nodeType": "YulIdentifier",
																	"src": "10423:3:1"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 951,
														"isOffset": false,
														"isSlot": false,
														"src": "10389:4:1",
														"valueSize": 1
													},
													{
														"declaration": 927,
														"isOffset": false,
														"isSlot": false,
														"src": "10449:6:1",
														"valueSize": 1
													},
													{
														"declaration": 944,
														"isOffset": false,
														"isSlot": false,
														"src": "10401:3:1",
														"valueSize": 1
													},
													{
														"declaration": 925,
														"isOffset": false,
														"isSlot": false,
														"src": "10438:4:1",
														"valueSize": 1
													},
													{
														"declaration": 954,
														"isOffset": false,
														"isSlot": false,
														"src": "10423:3:1",
														"valueSize": 1
													}
												],
												"id": 956,
												"nodeType": "InlineAssembly",
												"src": "10365:102:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10484:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 959,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "10490:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 960,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "10495:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "memcpy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "10477:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10477:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "10477:22:1"
											},
											{
												"expression": {
													"id": 963,
													"name": "ret",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 944,
													"src": "10519:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 933,
												"id": 964,
												"nodeType": "Return",
												"src": "10512:10:1"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substring",
									"nameLocation": "10085:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "10118:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "10105:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10105:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "10141:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "10133:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10133:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "10166:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "10158:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10158:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10094:82:1"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "10200:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10200:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10199:14:1"
									},
									"scope": 1238,
									"src": "10076:454:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 969,
									"mutability": "constant",
									"name": "base32HexTable",
									"nameLocation": "10677:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1238,
									"src": "10662:188:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 967,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "10662:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"value": {
										"hexValue": "00010203040506070809ffffffffffffff0a0b0c0d0e0f101112131415161718191a1b1c1d1e1fffffffffffffffffffff0a0b0c0d0e0f101112131415161718191a1b1c1d1e1f",
										"id": 968,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "hexString",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10703:147:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_9e82410dbf01e63aa72c1e18aee3deb28d15751fdce22e55714ad62f7fde606a",
											"typeString": "literal_string hex\"00010203040506070809ffffffffffffff0a0b0c0d0e0f101112131415161718191a1b1c1d1e1fffffffffffffffffffff0a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\""
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "11282:1359:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "11301:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3532",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11308:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_52_by_1",
																	"typeString": "int_const 52"
																},
																"value": "52"
															},
															"src": "11301:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11293:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "11293:18:1"
											},
											{
												"assignments": [
													988
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "ret",
														"nameLocation": "11332:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "11324:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 987,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11324:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"hexValue": "30",
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11338:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11324:15:1"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "decoded",
														"nameLocation": "11356:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "11350:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 991,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "11350:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"nodeType": "VariableDeclarationStatement",
												"src": "11350:13:1"
											},
											{
												"body": {
													"id": 1062,
													"nodeType": "Block",
													"src": "11408:333:1",
													"statements": [
														{
															"assignments": [
																1005
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1005,
																	"mutability": "mutable",
																	"name": "char",
																	"nameLocation": "11430:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1062,
																	"src": "11423:11:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "bytes1",
																		"nodeType": "ElementaryTypeName",
																		"src": "11423:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes1",
																			"typeString": "bytes1"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1011,
															"initialValue": {
																"baseExpression": {
																	"id": 1006,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "11437:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1010,
																"indexExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1007,
																		"name": "off",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 974,
																		"src": "11442:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1008,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "11448:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11442:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11437:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11423:27:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			},
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1013,
																				"name": "char",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "11473:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"hexValue": "30783330",
																				"id": 1014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11481:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_48_by_1",
																					"typeString": "int_const 48"
																				},
																				"value": "0x30"
																			},
																			"src": "11473:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			},
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1016,
																				"name": "char",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "11489:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes1",
																					"typeString": "bytes1"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "30783741",
																				"id": 1017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11497:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_122_by_1",
																					"typeString": "int_const 122"
																				},
																				"value": "0x7A"
																			},
																			"src": "11489:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "11473:28:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1012,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11465:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11465:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1021,
															"nodeType": "ExpressionStatement",
															"src": "11465:37:1"
														},
														{
															"expression": {
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1022,
																	"name": "decoded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "11517:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1025,
																				"name": "base32HexTable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "11533:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1035,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"id": 1030,
																									"name": "char",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1005,
																									"src": "11562:4:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes1",
																										"typeString": "bytes1"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes1",
																										"typeString": "bytes1"
																									}
																								],
																								"id": 1029,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "11556:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint8_$",
																									"typeString": "type(uint8)"
																								},
																								"typeName": {
																									"id": 1028,
																									"name": "uint8",
																									"nodeType": "ElementaryTypeName",
																									"src": "11556:5:1",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1031,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "11556:11:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						],
																						"id": 1027,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11548:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1026,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "11548:7:1",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11548:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "30783330",
																					"id": 1033,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11571:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_48_by_1",
																						"typeString": "int_const 48"
																					},
																					"value": "0x30"
																				},
																				"src": "11548:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11533:43:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes1",
																				"typeString": "bytes1"
																			}
																		],
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11527:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1023,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "11527:5:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11527:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "11517:60:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1038,
															"nodeType": "ExpressionStatement",
															"src": "11517:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1040,
																			"name": "decoded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "11600:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30783230",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11611:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "0x20"
																		},
																		"src": "11600:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1039,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11592:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11592:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1044,
															"nodeType": "ExpressionStatement",
															"src": "11592:24:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1045,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "11635:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1046,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "11640:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11646:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "11640:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11635:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1052,
															"nodeType": "IfStatement",
															"src": "11631:58:1",
															"trueBody": {
																"id": 1051,
																"nodeType": "Block",
																"src": "11649:40:1",
																"statements": [
																	{
																		"id": 1050,
																		"nodeType": "Break",
																		"src": "11668:5:1"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1053,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "11703:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1054,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11710:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1055,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11717:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "11710:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1057,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11709:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"id": 1058,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "11722:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "11709:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11703:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1061,
															"nodeType": "ExpressionStatement",
															"src": "11703:26:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "11394:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 999,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "11398:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1063,
												"initializationExpression": {
													"assignments": [
														995
													],
													"declarations": [
														{
															"constant": false,
															"id": 995,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11387:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 1063,
															"src": "11379:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 994,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11379:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 997,
													"initialValue": {
														"hexValue": "30",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11391:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11379:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11403:3:1",
														"subExpression": {
															"id": 1001,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "11403:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1003,
													"nodeType": "ExpressionStatement",
													"src": "11403:3:1"
												},
												"nodeType": "ForStatement",
												"src": "11374:367:1"
											},
											{
												"assignments": [
													1065
												],
												"declarations": [
													{
														"constant": false,
														"id": 1065,
														"mutability": "mutable",
														"name": "bitlen",
														"nameLocation": "11761:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "11753:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1064,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11753:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1069,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1066,
														"name": "len",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "11770:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "35",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11776:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "11770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11753:24:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1070,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "11792:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "38",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11798:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "8"
														},
														"src": "11792:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11803:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11792:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "len",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "11922:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"hexValue": "38",
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11928:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8_by_1",
																	"typeString": "int_const 8"
																},
																"value": "8"
															},
															"src": "11922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "32",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11933:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "11922:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1107,
																	"name": "len",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "12078:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12084:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12078:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "34",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12089:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "12078:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1129,
																		"name": "len",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "12236:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12242:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "12236:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12247:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "12236:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1151,
																			"name": "len",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "12394:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12400:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12394:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "37",
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12405:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_7_by_1",
																			"typeString": "int_const 7"
																		},
																		"value": "7"
																	},
																	"src": "12394:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 1176,
																	"nodeType": "Block",
																	"src": "12549:35:1",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1173,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "12564:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12564:8:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 1175,
																			"nodeType": "ExpressionStatement",
																			"src": "12564:8:1"
																		}
																	]
																},
																"id": 1177,
																"nodeType": "IfStatement",
																"src": "12390:194:1",
																"trueBody": {
																	"id": 1172,
																	"nodeType": "Block",
																	"src": "12408:135:1",
																	"statements": [
																		{
																			"expression": {
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1156,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "12472:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1159,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1157,
																									"name": "ret",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 988,
																									"src": "12479:3:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "32",
																									"id": 1158,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12486:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_2_by_1",
																										"typeString": "int_const 2"
																									},
																									"value": "2"
																								},
																								"src": "12479:8:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1160,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12478:10:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1163,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1161,
																									"name": "decoded",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 992,
																									"src": "12492:7:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">>",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1162,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12503:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12492:12:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"id": 1164,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12491:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "12478:27:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12472:33:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1167,
																			"nodeType": "ExpressionStatement",
																			"src": "12472:33:1"
																		},
																		{
																			"expression": {
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 1168,
																					"name": "bitlen",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1065,
																					"src": "12520:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"hexValue": "33",
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12530:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "12520:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1171,
																			"nodeType": "ExpressionStatement",
																			"src": "12520:11:1"
																		}
																	]
																}
															},
															"id": 1178,
															"nodeType": "IfStatement",
															"src": "12232:352:1",
															"trueBody": {
																"id": 1150,
																"nodeType": "Block",
																"src": "12250:134:1",
																"statements": [
																	{
																		"expression": {
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1134,
																				"name": "ret",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 988,
																				"src": "12313:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1137,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1135,
																								"name": "ret",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 988,
																								"src": "12320:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "34",
																								"id": 1136,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "12327:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4_by_1",
																									"typeString": "int_const 4"
																								},
																								"value": "4"
																							},
																							"src": "12320:8:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1138,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "12319:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "|",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1141,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1139,
																								"name": "decoded",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 992,
																								"src": "12333:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">>",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 1140,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "12344:1:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "12333:12:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "12332:14:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12319:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12313:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1145,
																		"nodeType": "ExpressionStatement",
																		"src": "12313:33:1"
																	},
																	{
																		"expression": {
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1146,
																				"name": "bitlen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1065,
																				"src": "12361:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12371:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "12361:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1149,
																		"nodeType": "ExpressionStatement",
																		"src": "12361:11:1"
																	}
																]
															}
														},
														"id": 1179,
														"nodeType": "IfStatement",
														"src": "12074:510:1",
														"trueBody": {
															"id": 1128,
															"nodeType": "Block",
															"src": "12092:134:1",
															"statements": [
																{
																	"expression": {
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1112,
																			"name": "ret",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 988,
																			"src": "12155:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1113,
																							"name": "ret",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 988,
																							"src": "12162:3:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12169:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "12162:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1116,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12161:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 1119,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1117,
																							"name": "decoded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 992,
																							"src": "12175:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"hexValue": "34",
																							"id": 1118,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12186:1:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_4_by_1",
																								"typeString": "int_const 4"
																							},
																							"value": "4"
																						},
																						"src": "12175:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 1120,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12174:14:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "12161:27:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12155:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1123,
																	"nodeType": "ExpressionStatement",
																	"src": "12155:33:1"
																},
																{
																	"expression": {
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1124,
																			"name": "bitlen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "12203:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12213:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12203:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1127,
																	"nodeType": "ExpressionStatement",
																	"src": "12203:11:1"
																}
															]
														}
													},
													"id": 1180,
													"nodeType": "IfStatement",
													"src": "11918:666:1",
													"trueBody": {
														"id": 1106,
														"nodeType": "Block",
														"src": "11936:132:1",
														"statements": [
															{
																"expression": {
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1090,
																		"name": "ret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "11997:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1093,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1091,
																						"name": "ret",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 988,
																						"src": "12004:3:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"hexValue": "33",
																						"id": 1092,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12011:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "12004:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1094,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12003:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1097,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1095,
																						"name": "decoded",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 992,
																						"src": "12017:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">>",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 1096,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12028:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "12017:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 1098,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "12016:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "12003:27:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11997:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1101,
																"nodeType": "ExpressionStatement",
																"src": "11997:33:1"
															},
															{
																"expression": {
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1102,
																		"name": "bitlen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "12045:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"hexValue": "32",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12055:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "12045:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1105,
																"nodeType": "ExpressionStatement",
																"src": "12045:11:1"
															}
														]
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "11788:796:1",
												"trueBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "11806:106:1",
													"statements": [
														{
															"expression": {
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1075,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "11874:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1076,
																					"name": "ret",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11881:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "35",
																					"id": 1077,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11888:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_5_by_1",
																						"typeString": "int_const 5"
																					},
																					"value": "5"
																				},
																				"src": "11881:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1079,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11880:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"id": 1080,
																		"name": "decoded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "11893:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "11880:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11874:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1083,
															"nodeType": "ExpressionStatement",
															"src": "11874:26:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "ret",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "12611:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "323536",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12619:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_256_by_1",
																				"typeString": "int_const 256"
																			},
																			"value": "256"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1186,
																			"name": "bitlen",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1065,
																			"src": "12625:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12619:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1188,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12618:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12611:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12603:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes32_$",
															"typeString": "type(bytes32)"
														},
														"typeName": {
															"id": 1182,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "12603:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12603:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 980,
												"id": 1191,
												"nodeType": "Return",
												"src": "12596:37:1"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "10859:277:1",
										"text": " @dev Decodes unpadded base32 data of up to one word in length.\n @param self The data to decode.\n @param off Offset into the string to start at.\n @param len Number of characters to decode.\n @return The decoded data, left aligned."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "base32HexDecodeWord",
									"nameLocation": "11151:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "11194:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "11181:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11181:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "11217:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "11209:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "11239:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "11231:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11231:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:79:1"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "11273:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 978,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11273:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11272:9:1"
									},
									"scope": 1238,
									"src": "11142:1499:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "13158:197:1",
										"statements": [
											{
												"body": {
													"id": 1228,
													"nodeType": "Block",
													"src": "13217:96:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1219,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "13236:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1221,
																	"indexExpression": {
																		"id": 1220,
																		"name": "idx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "13241:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13236:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1222,
																	"name": "needle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "13249:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "13236:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1227,
															"nodeType": "IfStatement",
															"src": "13232:70:1",
															"trueBody": {
																"id": 1226,
																"nodeType": "Block",
																"src": "13257:45:1",
																"statements": [
																	{
																		"expression": {
																			"id": 1224,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1208,
																			"src": "13283:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1206,
																		"id": 1225,
																		"nodeType": "Return",
																		"src": "13276:10:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1211,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "13193:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1212,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "13199:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1213,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "13205:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13199:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13193:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1229,
												"initializationExpression": {
													"assignments": [
														1208
													],
													"declarations": [
														{
															"constant": false,
															"id": 1208,
															"mutability": "mutable",
															"name": "idx",
															"nameLocation": "13182:3:1",
															"nodeType": "VariableDeclaration",
															"scope": 1229,
															"src": "13174:11:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1207,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13174:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1210,
													"initialValue": {
														"id": 1209,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "13188:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13174:17:1"
												},
												"loopExpression": {
													"expression": {
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13210:5:1",
														"subExpression": {
															"id": 1216,
															"name": "idx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "13210:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1218,
													"nodeType": "ExpressionStatement",
													"src": "13210:5:1"
												},
												"nodeType": "ForStatement",
												"src": "13169:144:1"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13335:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1231,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13335:7:1",
																	"typeDescriptions": {}
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																}
															],
															"id": 1230,
															"name": "type",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967269,
															"src": "13330:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13330:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_magic_meta_type_t_uint256",
															"typeString": "type(uint256)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "13344:3:1",
													"memberName": "max",
													"nodeType": "MemberAccess",
													"src": "13330:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1235,
												"nodeType": "Return",
												"src": "13323:24:1"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "12649:354:1",
										"text": " @dev Finds the first occurrence of the byte `needle` in `self`.\n @param self The string to search\n @param off The offset to start searching at\n @param len The number of bytes to search\n @param needle The byte to search for\n @return The offset of `needle` in `self`, or 2**256-1 if it was not found."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "find",
									"nameLocation": "13018:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "13046:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13033:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13033:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "13069:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13061:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13061:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "len",
												"nameLocation": "13091:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13083:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "needle",
												"nameLocation": "13112:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13105:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "13105:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13022:103:1"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "13149:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13148:9:1"
									},
									"scope": 1238,
									"src": "13009:346:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1239,
							"src": "66:13292:1",
							"usedErrors": [
								428
							]
						}
					],
					"src": "39:13321:1"
				},
				"id": 1
			},
			"packages/contracts/src/dnssec-oracle/DNSSEC.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/DNSSEC.sol",
					"exportedSymbols": {
						"DNSSEC": [
							1285
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1240,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"id": 1241,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "58:33:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "DNSSEC",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "DNSSEC",
							"nameLocation": "113:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "98d35f20",
									"id": 1243,
									"mutability": "mutable",
									"name": "anchors",
									"nameLocation": "140:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1285,
									"src": "127:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 1242,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "127:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DNSSEC.RRSetWithSignature",
									"id": 1248,
									"members": [
										{
											"constant": false,
											"id": 1245,
											"mutability": "mutable",
											"name": "rrset",
											"nameLocation": "199:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1248,
											"src": "193:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1244,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "193:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1247,
											"mutability": "mutable",
											"name": "sig",
											"nameLocation": "221:3:2",
											"nodeType": "VariableDeclaration",
											"scope": 1248,
											"src": "215:9:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1246,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "215:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RRSetWithSignature",
									"nameLocation": "163:18:2",
									"nodeType": "StructDefinition",
									"scope": 1285,
									"src": "156:76:2",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "f73c3c226af96b7f1ba666a21b3ceaf2be3ee6a365e3178fd9cd1eaae0075aa8",
									"id": 1254,
									"name": "AlgorithmUpdated",
									"nameLocation": "246:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "269:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "263:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1249,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "263:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"indexed": false,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "281:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "273:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "262:24:2"
									},
									"src": "240:47:2"
								},
								{
									"anonymous": false,
									"eventSelector": "2fcc274c3b72dd483ab201bfa87295e3817e8b9b10693219873b722ca1af00c7",
									"id": 1260,
									"name": "DigestUpdated",
									"nameLocation": "299:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "319:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "313:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "313:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "331:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "323:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "323:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "312:24:2"
									},
									"src": "293:44:2"
								},
								{
									"functionSelector": "bdf95fef",
									"id": 1271,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRRSet",
									"nameLocation": "354:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "404:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "376:33:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature[]"
												},
												"typeName": {
													"baseType": {
														"id": 1262,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1261,
															"name": "RRSetWithSignature",
															"nameLocations": [
																"376:18:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1248,
															"src": "376:18:2"
														},
														"referencedDeclaration": 1248,
														"src": "376:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
															"typeString": "struct DNSSEC.RRSetWithSignature"
														}
													},
													"id": 1263,
													"nodeType": "ArrayTypeName",
													"src": "376:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_storage_$dyn_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:51:2"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "rrs",
												"nameLocation": "461:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "448:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "448:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "inception",
												"nameLocation": "473:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "466:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1268,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "466:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:36:2"
									},
									"scope": 1285,
									"src": "345:139:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "440f3d42",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRRSet",
									"nameLocation": "501:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "523:33:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature[]"
												},
												"typeName": {
													"baseType": {
														"id": 1273,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1272,
															"name": "RRSetWithSignature",
															"nameLocations": [
																"523:18:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1248,
															"src": "523:18:2"
														},
														"referencedDeclaration": 1248,
														"src": "523:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
															"typeString": "struct DNSSEC.RRSetWithSignature"
														}
													},
													"id": 1274,
													"nodeType": "ArrayTypeName",
													"src": "523:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_storage_$dyn_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "now",
												"nameLocation": "575:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "567:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:73:2"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "rrs",
												"nameLocation": "628:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "615:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "615:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "inception",
												"nameLocation": "640:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "633:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1281,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "633:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:36:2"
									},
									"scope": 1285,
									"src": "492:159:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1286,
							"src": "95:559:2",
							"usedErrors": []
						}
					],
					"src": "33:623:2"
				},
				"id": 2
			},
			"packages/contracts/src/dnssec-oracle/DNSSECImpl.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/DNSSECImpl.sol",
					"exportedSymbols": {
						"Algorithm": [
							3367
						],
						"Buffer": [
							420
						],
						"BytesUtils": [
							1238
						],
						"DNSSEC": [
							1285
						],
						"DNSSECImpl": [
							2215
						],
						"Digest": [
							3381
						],
						"Owned": [
							2253
						],
						"RRUtils": [
							3351
						]
					},
					"id": 2216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"id": 1288,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "59:33:3"
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/Owned.sol",
							"file": "./Owned.sol",
							"id": 1289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 2254,
							"src": "96:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/BytesUtils.sol",
							"file": "./BytesUtils.sol",
							"id": 1290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 1239,
							"src": "119:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/RRUtils.sol",
							"file": "./RRUtils.sol",
							"id": 1291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 3352,
							"src": "147:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/DNSSEC.sol",
							"file": "./DNSSEC.sol",
							"id": 1292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 1286,
							"src": "172:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
							"file": "./algorithms/Algorithm.sol",
							"id": 1293,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 3368,
							"src": "196:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/digests/Digest.sol",
							"file": "./digests/Digest.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 3382,
							"src": "234:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/buffer/contracts/Buffer.sol",
							"file": "@ensdomains/buffer/contracts/Buffer.sol",
							"id": 1295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2216,
							"sourceUnit": 421,
							"src": "266:49:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1296,
										"name": "DNSSEC",
										"nameLocations": [
											"951:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1285,
										"src": "951:6:3"
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "951:6:3"
								},
								{
									"baseName": {
										"id": 1298,
										"name": "Owned",
										"nameLocations": [
											"959:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2253,
										"src": "959:5:3"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "959:5:3"
								}
							],
							"canonicalName": "DNSSECImpl",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2215,
							"linearizedBaseContracts": [
								2215,
								2253,
								1285
							],
							"name": "DNSSECImpl",
							"nameLocation": "937:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1303,
									"libraryName": {
										"id": 1300,
										"name": "Buffer",
										"nameLocations": [
											"978:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "978:6:3"
									},
									"nodeType": "UsingForDirective",
									"src": "972:31:3",
									"typeName": {
										"id": 1302,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1301,
											"name": "Buffer.buffer",
											"nameLocations": [
												"989:6:3",
												"996:6:3"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 7,
											"src": "989:13:3"
										},
										"referencedDeclaration": 7,
										"src": "989:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
											"typeString": "struct Buffer.buffer"
										}
									}
								},
								{
									"global": false,
									"id": 1306,
									"libraryName": {
										"id": 1304,
										"name": "BytesUtils",
										"nameLocations": [
											"1015:10:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1238,
										"src": "1015:10:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1009:27:3",
									"typeName": {
										"id": 1305,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1030:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"global": false,
									"id": 1308,
									"libraryName": {
										"id": 1307,
										"name": "RRUtils",
										"nameLocations": [
											"1048:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3351,
										"src": "1048:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "1042:20:3"
								},
								{
									"constant": true,
									"id": 1311,
									"mutability": "constant",
									"name": "DNSCLASS_IN",
									"nameLocation": "1086:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1070:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1309,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1070:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1100:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1314,
									"mutability": "constant",
									"name": "DNSTYPE_DS",
									"nameLocation": "1126:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1110:31:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1312,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1110:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3433",
										"id": 1313,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1139:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_43_by_1",
											"typeString": "int_const 43"
										},
										"value": "43"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1317,
									"mutability": "constant",
									"name": "DNSTYPE_DNSKEY",
									"nameLocation": "1164:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1148:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1315,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "1148:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3438",
										"id": 1316,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1181:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_48_by_1",
											"typeString": "int_const 48"
										},
										"value": "48"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1320,
									"mutability": "constant",
									"name": "DNSKEY_FLAG_ZONEKEY",
									"nameLocation": "1209:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1192:44:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1318,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1192:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3078313030",
										"id": 1319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1231:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_256_by_1",
											"typeString": "int_const 256"
										},
										"value": "0x100"
									},
									"visibility": "internal"
								},
								{
									"errorSelector": "e861b2bd",
									"id": 1326,
									"name": "InvalidLabelCount",
									"nameLocation": "1251:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1275:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1269:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1269:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "labelsExpected",
												"nameLocation": "1289:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "1281:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:36:3"
									},
									"src": "1245:60:3"
								},
								{
									"errorSelector": "bd41036a",
									"id": 1332,
									"name": "SignatureNotValidYet",
									"nameLocation": "1317:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "inception",
												"nameLocation": "1345:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1338:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1327,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1338:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "now",
												"nameLocation": "1363:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "1356:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1329,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1356:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1337:30:3"
									},
									"src": "1311:57:3"
								},
								{
									"errorSelector": "a784f87e",
									"id": 1338,
									"name": "SignatureExpired",
									"nameLocation": "1380:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1404:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1397:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1333,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1397:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "now",
												"nameLocation": "1423:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1416:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1335,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:31:3"
									},
									"src": "1374:54:3"
								},
								{
									"errorSelector": "98a5f31a",
									"id": 1342,
									"name": "InvalidClass",
									"nameLocation": "1440:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1460:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1339,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1453:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:14:3"
									},
									"src": "1434:33:3"
								},
								{
									"errorSelector": "cbceee6f",
									"id": 1344,
									"name": "InvalidRRSet",
									"nameLocation": "1479:12:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1491:2:3"
									},
									"src": "1473:21:3"
								},
								{
									"errorSelector": "a6ff8a8a",
									"id": 1350,
									"name": "SignatureTypeMismatch",
									"nameLocation": "1506:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "rrsetType",
												"nameLocation": "1535:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1528:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1345,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1528:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "sigType",
												"nameLocation": "1553:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "1546:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1347,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1546:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1527:34:3"
									},
									"src": "1500:62:3"
								},
								{
									"errorSelector": "eaafc59b",
									"id": 1356,
									"name": "InvalidSignerName",
									"nameLocation": "1574:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "rrsetName",
												"nameLocation": "1598:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "1592:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1592:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "signerName",
												"nameLocation": "1615:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "1609:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1609:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:35:3"
									},
									"src": "1568:59:3"
								},
								{
									"errorSelector": "61529e87",
									"id": 1360,
									"name": "InvalidProofType",
									"nameLocation": "1639:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "proofType",
												"nameLocation": "1663:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1656:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1357,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1656:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:18:3"
									},
									"src": "1633:41:3"
								},
								{
									"errorSelector": "d700ae7e",
									"id": 1366,
									"name": "ProofNameMismatch",
									"nameLocation": "1686:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "signerName",
												"nameLocation": "1710:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1704:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1704:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "proofName",
												"nameLocation": "1728:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "1722:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1363,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1722:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:35:3"
									},
									"src": "1680:59:3"
								},
								{
									"errorSelector": "06cde0f3",
									"id": 1370,
									"name": "NoMatchingProof",
									"nameLocation": "1751:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "signerName",
												"nameLocation": "1773:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "1767:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1767:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:18:3"
									},
									"src": "1745:40:3"
								},
								{
									"constant": false,
									"functionSelector": "c327deef",
									"id": 1375,
									"mutability": "mutable",
									"name": "algorithms",
									"nameLocation": "1828:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1793:45:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Algorithm_$3367_$",
										"typeString": "mapping(uint8 => contract Algorithm)"
									},
									"typeName": {
										"id": 1374,
										"keyType": {
											"id": 1371,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "1801:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "1793:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Algorithm_$3367_$",
											"typeString": "mapping(uint8 => contract Algorithm)"
										},
										"valueType": {
											"id": 1373,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1372,
												"name": "Algorithm",
												"nameLocations": [
													"1810:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3367,
												"src": "1810:9:3"
											},
											"referencedDeclaration": 3367,
											"src": "1810:9:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_Algorithm_$3367",
												"typeString": "contract Algorithm"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73cc48a6",
									"id": 1380,
									"mutability": "mutable",
									"name": "digests",
									"nameLocation": "1877:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "1845:39:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Digest_$3381_$",
										"typeString": "mapping(uint8 => contract Digest)"
									},
									"typeName": {
										"id": 1379,
										"keyType": {
											"id": 1376,
											"name": "uint8",
											"nodeType": "ElementaryTypeName",
											"src": "1853:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											}
										},
										"nodeType": "Mapping",
										"src": "1845:24:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Digest_$3381_$",
											"typeString": "mapping(uint8 => contract Digest)"
										},
										"valueType": {
											"id": 1378,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1377,
												"name": "Digest",
												"nameLocations": [
													"1862:6:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3381,
												"src": "1862:6:3"
											},
											"referencedDeclaration": 3381,
											"src": "1862:6:3",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_Digest_$3381",
												"typeString": "contract Digest"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "2050:158:3",
										"statements": [
											{
												"expression": {
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1386,
														"name": "anchors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1243,
														"src": "2182:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage",
															"typeString": "bytes storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1387,
														"name": "_anchors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "2192:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "2182:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "2182:18:3"
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "1893:116:3",
										"text": " @dev Constructor.\n @param _anchors The binary format RR entries for the root DS records."
									},
									"id": 1391,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "_anchors",
												"nameLocation": "2040:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "2027:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2027:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:23:3"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:0:3"
									},
									"scope": 2215,
									"src": "2015:193:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "2514:91:3",
										"statements": [
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1402,
															"name": "algorithms",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "2525:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Algorithm_$3367_$",
																"typeString": "mapping(uint8 => contract Algorithm)"
															}
														},
														"id": 1404,
														"indexExpression": {
															"id": 1403,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "2536:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2525:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Algorithm_$3367",
															"typeString": "contract Algorithm"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1405,
														"name": "algo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "2542:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Algorithm_$3367",
															"typeString": "contract Algorithm"
														}
													},
													"src": "2525:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Algorithm_$3367",
														"typeString": "contract Algorithm"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "2525:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1409,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "2579:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"id": 1412,
																	"name": "algo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1397,
																	"src": "2591:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Algorithm_$3367",
																		"typeString": "contract Algorithm"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Algorithm_$3367",
																		"typeString": "contract Algorithm"
																	}
																],
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2583:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1410,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2583:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2583:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1408,
														"name": "AlgorithmUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "2562:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
															"typeString": "function (uint8,address)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1415,
												"nodeType": "EmitStatement",
												"src": "2557:40:3"
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "2216:226:3",
										"text": " @dev Sets the contract address for a signature verification algorithm.\n      Callable only by the owner.\n @param id The algorithm ID\n @param algo The address of the algorithm contract."
									},
									"functionSelector": "020ed8d3",
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1400,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1399,
												"name": "owner_only",
												"nameLocations": [
													"2503:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2231,
												"src": "2503:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2503:10:3"
										}
									],
									"name": "setAlgorithm",
									"nameLocation": "2457:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2476:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2470:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1393,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2470:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "algo",
												"nameLocation": "2490:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2480:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Algorithm_$3367",
													"typeString": "contract Algorithm"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "Algorithm",
														"nameLocations": [
															"2480:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3367,
														"src": "2480:9:3"
													},
													"referencedDeclaration": 3367,
													"src": "2480:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Algorithm_$3367",
														"typeString": "contract Algorithm"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:26:3"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:0:3"
									},
									"scope": 2215,
									"src": "2448:157:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1442,
										"nodeType": "Block",
										"src": "2900:89:3",
										"statements": [
											{
												"expression": {
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1428,
															"name": "digests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "2911:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Digest_$3381_$",
																"typeString": "mapping(uint8 => contract Digest)"
															}
														},
														"id": 1430,
														"indexExpression": {
															"id": 1429,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "2919:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2911:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Digest_$3381",
															"typeString": "contract Digest"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1431,
														"name": "digest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2925:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Digest_$3381",
															"typeString": "contract Digest"
														}
													},
													"src": "2911:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Digest_$3381",
														"typeString": "contract Digest"
													}
												},
												"id": 1433,
												"nodeType": "ExpressionStatement",
												"src": "2911:20:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1435,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "2961:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"arguments": [
																{
																	"id": 1438,
																	"name": "digest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1423,
																	"src": "2973:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Digest_$3381",
																		"typeString": "contract Digest"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Digest_$3381",
																		"typeString": "contract Digest"
																	}
																],
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2965:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2965:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2965:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1434,
														"name": "DigestUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "2947:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_address_$returns$__$",
															"typeString": "function (uint8,address)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2947:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "EmitStatement",
												"src": "2942:39:3"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2613:219:3",
										"text": " @dev Sets the contract address for a digest verification algorithm.\n      Callable only by the owner.\n @param id The digest ID\n @param digest The address of the digest contract."
									},
									"functionSelector": "28e7677d",
									"id": 1443,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1425,
												"name": "owner_only",
												"nameLocations": [
													"2889:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2231,
												"src": "2889:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2889:10:3"
										}
									],
									"name": "setDigest",
									"nameLocation": "2847:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2863:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2857:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1419,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "2874:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "2867:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Digest_$3381",
													"typeString": "contract Digest"
												},
												"typeName": {
													"id": 1422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1421,
														"name": "Digest",
														"nameLocations": [
															"2867:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3381,
														"src": "2867:6:3"
													},
													"referencedDeclaration": 3381,
													"src": "2867:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Digest_$3381",
														"typeString": "contract Digest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2856:25:3"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2900:0:3"
									},
									"scope": 2215,
									"src": "2838:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1271
									],
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "3625:61:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1457,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "3655:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DNSSEC.RRSetWithSignature memory[] memory"
															}
														},
														{
															"expression": {
																"id": 1458,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3662:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3668:9:3",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3662:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DNSSEC.RRSetWithSignature memory[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1456,
														"name": "verifyRRSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1523
														],
														"referencedDeclaration": 1523,
														"src": "3643:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint32_$",
															"typeString": "function (struct DNSSEC.RRSetWithSignature memory[] memory,uint256) view returns (bytes memory,uint32)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3643:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint32_$",
														"typeString": "tuple(bytes memory,uint32)"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1461,
												"nodeType": "Return",
												"src": "3636:42:3"
											}
										]
									},
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "2997:424:3",
										"text": " @dev Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.\n      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.\n @param input A list of signed RRSets.\n @return rrs The RRData from the last RRSet in the chain.\n @return inception The inception time of the signed record set."
									},
									"functionSelector": "bdf95fef",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRRSet",
									"nameLocation": "3436:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1450,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3557:8:3"
									},
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "3486:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "3458:33:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature[]"
												},
												"typeName": {
													"baseType": {
														"id": 1446,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1445,
															"name": "RRSetWithSignature",
															"nameLocations": [
																"3458:18:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1248,
															"src": "3458:18:3"
														},
														"referencedDeclaration": 1248,
														"src": "3458:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
															"typeString": "struct DNSSEC.RRSetWithSignature"
														}
													},
													"id": 1447,
													"nodeType": "ArrayTypeName",
													"src": "3458:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_storage_$dyn_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3447:51:3"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "rrs",
												"nameLocation": "3597:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "3584:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3584:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "inception",
												"nameLocation": "3609:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "3602:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1453,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3602:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3583:36:3"
									},
									"scope": 2215,
									"src": "3427:259:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1284
									],
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "4408:376:3",
										"statements": [
											{
												"assignments": [
													1479
												],
												"declarations": [
													{
														"constant": false,
														"id": 1479,
														"mutability": "mutable",
														"name": "proof",
														"nameLocation": "4432:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 1522,
														"src": "4419:18:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1478,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4419:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"id": 1480,
													"name": "anchors",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1243,
													"src": "4440:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage",
														"typeString": "bytes storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4419:28:3"
											},
											{
												"body": {
													"id": 1516,
													"nodeType": "Block",
													"src": "4501:240:3",
													"statements": [
														{
															"assignments": [
																1497
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1497,
																	"mutability": "mutable",
																	"name": "rrset",
																	"nameLocation": "4541:5:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1516,
																	"src": "4516:30:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																		"typeString": "struct RRUtils.SignedSet"
																	},
																	"typeName": {
																		"id": 1496,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1495,
																			"name": "RRUtils.SignedSet",
																			"nameLocations": [
																				"4516:7:3",
																				"4524:9:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2429,
																			"src": "4516:17:3"
																		},
																		"referencedDeclaration": 2429,
																		"src": "4516:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
																			"typeString": "struct RRUtils.SignedSet"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1505,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1499,
																			"name": "input",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1468,
																			"src": "4585:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct DNSSEC.RRSetWithSignature memory[] memory"
																			}
																		},
																		"id": 1501,
																		"indexExpression": {
																			"id": 1500,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "4591:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4585:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		}
																	},
																	{
																		"id": 1502,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "4612:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1503,
																		"name": "now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "4636:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1498,
																	"name": "validateSignedSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "4549:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_SignedSet_$2429_memory_ptr_$",
																		"typeString": "function (struct DNSSEC.RRSetWithSignature memory,bytes memory,uint256) view returns (struct RRUtils.SignedSet memory)"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4549:105:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4516:138:3"
														},
														{
															"expression": {
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1506,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "4669:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1507,
																		"name": "rrset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "4677:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		}
																	},
																	"id": 1508,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4683:4:3",
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2426,
																	"src": "4677:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"src": "4669:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1510,
															"nodeType": "ExpressionStatement",
															"src": "4669:18:3"
														},
														{
															"expression": {
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1511,
																	"name": "inception",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "4702:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1512,
																		"name": "rrset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "4714:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		}
																	},
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4720:9:3",
																	"memberName": "inception",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2420,
																	"src": "4714:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "4702:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "4702:27:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "4478:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1487,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4482:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct DNSSEC.RRSetWithSignature memory[] memory"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4488:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4482:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4478:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"initializationExpression": {
													"assignments": [
														1483
													],
													"declarations": [
														{
															"constant": false,
															"id": 1483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4471:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 1517,
															"src": "4463:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4463:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1485,
													"initialValue": {
														"hexValue": "30",
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4475:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4463:13:3"
												},
												"loopExpression": {
													"expression": {
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4496:3:3",
														"subExpression": {
															"id": 1490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "4496:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1492,
													"nodeType": "ExpressionStatement",
													"src": "4496:3:3"
												},
												"nodeType": "ForStatement",
												"src": "4458:283:3"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1518,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "4759:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1519,
															"name": "inception",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "4766:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														}
													],
													"id": 1520,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4758:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes_memory_ptr_$_t_uint32_$",
														"typeString": "tuple(bytes memory,uint32)"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1521,
												"nodeType": "Return",
												"src": "4751:25:3"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "3694:490:3",
										"text": " @dev Takes a chain of signed DNS records, verifies them, and returns the data from the last record set in the chain.\n      Reverts if the records do not form an unbroken chain of trust to the DNSSEC anchor records.\n @param input A list of signed RRSets.\n @param now The Unix timestamp to validate the records at.\n @return rrs The RRData from the last RRSet in the chain.\n @return inception The inception time of the signed record set."
									},
									"functionSelector": "440f3d42",
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyRRSet",
									"nameLocation": "4199:11:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1472,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4340:8:3"
									},
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "4249:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4221:33:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature[]"
												},
												"typeName": {
													"baseType": {
														"id": 1466,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1465,
															"name": "RRSetWithSignature",
															"nameLocations": [
																"4221:18:3"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1248,
															"src": "4221:18:3"
														},
														"referencedDeclaration": 1248,
														"src": "4221:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
															"typeString": "struct DNSSEC.RRSetWithSignature"
														}
													},
													"id": 1467,
													"nodeType": "ArrayTypeName",
													"src": "4221:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RRSetWithSignature_$1248_storage_$dyn_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "now",
												"nameLocation": "4273:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4265:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4265:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4210:73:3"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "rrs",
												"nameLocation": "4380:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4367:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4367:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "inception",
												"nameLocation": "4392:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "4385:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1475,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4385:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4366:36:3"
									},
									"scope": 2215,
									"src": "4190:594:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1624,
										"nodeType": "Block",
										"src": "5487:1245:3",
										"statements": [
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1537,
														"name": "rrset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "5498:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
															"typeString": "struct RRUtils.SignedSet memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"expression": {
																	"id": 1538,
																	"name": "input",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1527,
																	"src": "5506:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																		"typeString": "struct DNSSEC.RRSetWithSignature memory"
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5512:5:3",
																"memberName": "rrset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1245,
																"src": "5506:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5518:13:3",
															"memberName": "readSignedSet",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2531,
															"src": "5506:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_SignedSet_$2429_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) pure returns (struct RRUtils.SignedSet memory)"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5506:27:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
															"typeString": "struct RRUtils.SignedSet memory"
														}
													},
													"src": "5498:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
														"typeString": "struct RRUtils.SignedSet memory"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "5498:35:3"
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "name",
														"nameLocation": "5624:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1624,
														"src": "5611:17:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1544,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5611:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1551,
												"initialValue": {
													"arguments": [
														{
															"id": 1547,
															"name": "rrset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "5643:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														{
															"expression": {
																"id": 1548,
																"name": "rrset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "5650:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5656:11:3",
															"memberName": "typeCovered",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2410,
															"src": "5650:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1546,
														"name": "validateRRs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "5631:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_SignedSet_$2429_memory_ptr_$_t_uint16_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (struct RRUtils.SignedSet memory,uint16) pure returns (bytes memory)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5631:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5611:57:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5699:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 1552,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "5683:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5688:10:3",
															"memberName": "labelCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2384,
															"src": "5683:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint256)"
															}
														},
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5683:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1556,
															"name": "rrset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "5705:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5711:6:3",
														"memberName": "labels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2414,
														"src": "5705:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5683:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1566,
												"nodeType": "IfStatement",
												"src": "5679:111:3",
												"trueBody": {
													"id": 1565,
													"nodeType": "Block",
													"src": "5719:71:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1560,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "5759:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"expression": {
																			"id": 1561,
																			"name": "rrset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "5765:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5771:6:3",
																		"memberName": "labels",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2414,
																		"src": "5765:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1559,
																	"name": "InvalidLabelCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "5741:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (bytes memory,uint256) pure"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5741:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1564,
															"nodeType": "RevertStatement",
															"src": "5734:44:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1567,
															"name": "rrset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "5800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 1569,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5806:4:3",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2428,
														"src": "5800:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1570,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "5813:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "5800:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 1572,
												"nodeType": "ExpressionStatement",
												"src": "5800:17:3"
											},
											{
												"condition": {
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6159:55:3",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1575,
																	"name": "rrset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "6184:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																		"typeString": "struct RRUtils.SignedSet memory"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6190:10:3",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2418,
																"src": "6184:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1579,
																		"name": "now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "6209:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6202:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 1577,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6202:6:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6202:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"id": 1573,
																"name": "RRUtils",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3351,
																"src": "6160:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_RRUtils_$3351_$",
																	"typeString": "type(library RRUtils)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6168:15:3",
															"memberName": "serialNumberGte",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3147,
															"src": "6160:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																"typeString": "function (uint32,uint32) pure returns (bool)"
															}
														},
														"id": 1581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6160:54:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1593,
												"nodeType": "IfStatement",
												"src": "6155:142:3",
												"trueBody": {
													"id": 1592,
													"nodeType": "Block",
													"src": "6216:81:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1584,
																			"name": "rrset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "6255:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6261:10:3",
																		"memberName": "expiration",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2418,
																		"src": "6255:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1588,
																				"name": "now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1531,
																				"src": "6280:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6273:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 1586,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6273:6:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6273:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 1583,
																	"name": "SignatureExpired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "6238:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint32_$_t_uint32_$returns$__$",
																		"typeString": "function (uint32,uint32) pure"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6238:47:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1591,
															"nodeType": "RevertStatement",
															"src": "6231:54:3"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6470:54:3",
													"subExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1598,
																		"name": "now",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1531,
																		"src": "6502:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6495:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 1596,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6495:6:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6495:11:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															{
																"expression": {
																	"id": 1600,
																	"name": "rrset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "6508:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																		"typeString": "struct RRUtils.SignedSet memory"
																	}
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6514:9:3",
																"memberName": "inception",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2420,
																"src": "6508:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																{
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															],
															"expression": {
																"id": 1594,
																"name": "RRUtils",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3351,
																"src": "6471:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_RRUtils_$3351_$",
																	"typeString": "type(library RRUtils)"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6479:15:3",
															"memberName": "serialNumberGte",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3147,
															"src": "6471:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint32_$returns$_t_bool_$",
																"typeString": "function (uint32,uint32) pure returns (bool)"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6471:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "6466:144:3",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "6526:84:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1605,
																			"name": "rrset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "6569:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6575:9:3",
																		"memberName": "inception",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2420,
																		"src": "6569:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1609,
																				"name": "now",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1531,
																				"src": "6593:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6586:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": {
																				"id": 1607,
																				"name": "uint32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6586:6:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6586:11:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"id": 1604,
																	"name": "SignatureNotValidYet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "6548:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint32_$_t_uint32_$returns$__$",
																		"typeString": "function (uint32,uint32) pure"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6548:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1612,
															"nodeType": "RevertStatement",
															"src": "6541:57:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "6673:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1617,
															"name": "rrset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "6679:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														{
															"id": 1618,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "6686:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																"typeString": "struct DNSSEC.RRSetWithSignature memory"
															}
														},
														{
															"id": 1619,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6693:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															},
															{
																"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																"typeString": "struct DNSSEC.RRSetWithSignature memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1615,
														"name": "verifySignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "6657:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_struct$_SignedSet_$2429_memory_ptr_$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory,struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory,bytes memory) view"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6657:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "6657:42:3"
											},
											{
												"expression": {
													"id": 1622,
													"name": "rrset",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1535,
													"src": "6719:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
														"typeString": "struct RRUtils.SignedSet memory"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1623,
												"nodeType": "Return",
												"src": "6712:12:3"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "4792:507:3",
										"text": " @dev Validates an RRSet against the already trusted RR provided in `proof`.\n @param input The signed RR set. This is in the format described in section\n        5.3.2 of RFC4035: The RRDATA section from the RRSIG without the signature\n        data, followed by a series of canonicalised RR records that the signature\n        applies to.\n @param proof The DNSKEY or DS to validate the signature against.\n @param now The current timestamp."
									},
									"id": 1625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateSignedSet",
									"nameLocation": "5314:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "5368:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5342:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature"
												},
												"typeName": {
													"id": 1526,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1525,
														"name": "RRSetWithSignature",
														"nameLocations": [
															"5342:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1248,
														"src": "5342:18:3"
													},
													"referencedDeclaration": 1248,
													"src": "5342:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "5397:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5384:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5384:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "now",
												"nameLocation": "5421:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5413:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5331:100:3"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "5480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "5455:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 1534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1533,
														"name": "RRUtils.SignedSet",
														"nameLocations": [
															"5455:7:3",
															"5463:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "5455:17:3"
													},
													"referencedDeclaration": 2429,
													"src": "5455:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:32:3"
									},
									"scope": 2215,
									"src": "5305:1427:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "7033:1079:3",
										"statements": [
											{
												"body": {
													"id": 1715,
													"nodeType": "Block",
													"src": "7209:896:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1653,
																		"name": "iter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7280:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 1654,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7285:5:3",
																	"memberName": "class",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2555,
																	"src": "7280:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1655,
																	"name": "DNSCLASS_IN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "7294:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "7280:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1663,
															"nodeType": "IfStatement",
															"src": "7276:97:3",
															"trueBody": {
																"id": 1662,
																"nodeType": "Block",
																"src": "7307:66:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1658,
																						"name": "iter",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1640,
																						"src": "7346:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																							"typeString": "struct RRUtils.RRIterator memory"
																						}
																					},
																					"id": 1659,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7351:5:3",
																					"memberName": "class",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2555,
																					"src": "7346:10:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 1657,
																				"name": "InvalidClass",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "7333:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint16_$returns$__$",
																					"typeString": "function (uint16) pure"
																				}
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7333:24:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1661,
																		"nodeType": "RevertStatement",
																		"src": "7326:31:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1664,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "7393:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7398:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7393:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7408:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7393:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1701,
																"nodeType": "Block",
																"src": "7470:403:3",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1695,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1675,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1634,
																						"src": "7649:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1676,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7654:6:3",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "7649:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1680,
																								"name": "iter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1640,
																								"src": "7685:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																									"typeString": "struct RRUtils.RRIterator memory"
																								}
																							},
																							"id": 1681,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7690:6:3",
																							"memberName": "offset",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2551,
																							"src": "7685:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1677,
																								"name": "iter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1640,
																								"src": "7664:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																									"typeString": "struct RRUtils.RRIterator memory"
																								}
																							},
																							"id": 1678,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7669:4:3",
																							"memberName": "data",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2549,
																							"src": "7664:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1679,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7674:10:3",
																						"memberName": "nameLength",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2310,
																						"src": "7664:20:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																							"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1682,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7664:33:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:48:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"id": 1694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "!",
																				"prefix": true,
																				"src": "7722:52:3",
																				"subExpression": {
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1686,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7735:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						{
																							"expression": {
																								"id": 1687,
																								"name": "iter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1640,
																								"src": "7738:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																									"typeString": "struct RRUtils.RRIterator memory"
																								}
																							},
																							"id": 1688,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7743:4:3",
																							"memberName": "data",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2549,
																							"src": "7738:9:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						{
																							"expression": {
																								"id": 1689,
																								"name": "iter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1640,
																								"src": "7749:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																									"typeString": "struct RRUtils.RRIterator memory"
																								}
																							},
																							"id": 1690,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7754:6:3",
																							"memberName": "offset",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2551,
																							"src": "7749:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"expression": {
																								"id": 1691,
																								"name": "name",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1634,
																								"src": "7762:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							},
																							"id": 1692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7767:6:3",
																							"memberName": "length",
																							"nodeType": "MemberAccess",
																							"src": "7762:11:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1684,
																							"name": "name",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1634,
																							"src": "7723:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1685,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "7728:6:3",
																						"memberName": "equals",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 670,
																						"src": "7723:11:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																							"typeString": "function (bytes memory,uint256,bytes memory,uint256,uint256) pure returns (bool)"
																						}
																					},
																					"id": 1693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7723:51:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "7649:125:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1700,
																		"nodeType": "IfStatement",
																		"src": "7623:235:3",
																		"trueBody": {
																			"id": 1699,
																			"nodeType": "Block",
																			"src": "7794:64:3",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1696,
																							"name": "InvalidRRSet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1344,
																							"src": "7824:12:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 1697,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7824:14:3",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1698,
																					"nodeType": "RevertStatement",
																					"src": "7817:21:3"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1702,
															"nodeType": "IfStatement",
															"src": "7389:484:3",
															"trueBody": {
																"id": 1674,
																"nodeType": "Block",
																"src": "7411:53:3",
																"statements": [
																	{
																		"expression": {
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1668,
																				"name": "name",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1634,
																				"src": "7430:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1669,
																						"name": "iter",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1640,
																						"src": "7437:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																							"typeString": "struct RRUtils.RRIterator memory"
																						}
																					},
																					"id": 1670,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "7442:4:3",
																					"memberName": "name",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2734,
																					"src": "7437:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																						"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 1671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7437:11:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "7430:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1673,
																		"nodeType": "ExpressionStatement",
																		"src": "7430:18:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1703,
																		"name": "iter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "7975:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7980:7:3",
																	"memberName": "dnstype",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2553,
																	"src": "7975:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1705,
																	"name": "typecovered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "7991:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "7975:27:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1714,
															"nodeType": "IfStatement",
															"src": "7971:123:3",
															"trueBody": {
																"id": 1713,
																"nodeType": "Block",
																"src": "8004:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1708,
																						"name": "iter",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1640,
																						"src": "8052:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																							"typeString": "struct RRUtils.RRIterator memory"
																						}
																					},
																					"id": 1709,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "8057:7:3",
																					"memberName": "dnstype",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2553,
																					"src": "8052:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				},
																				{
																					"id": 1710,
																					"name": "typecovered",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1631,
																					"src": "8066:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 1707,
																				"name": "SignatureTypeMismatch",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "8030:21:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint16_$_t_uint16_$returns$__$",
																					"typeString": "function (uint16,uint16) pure"
																				}
																			},
																			"id": 1711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8030:48:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1712,
																		"nodeType": "RevertStatement",
																		"src": "8023:55:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7159:12:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1645,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7160:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7165:4:3",
															"memberName": "done",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2607,
															"src": "7160:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bool)"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7160:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"initializationExpression": {
													"assignments": [
														1640
													],
													"declarations": [
														{
															"constant": false,
															"id": 1640,
															"mutability": "mutable",
															"name": "iter",
															"nameLocation": "7126:4:3",
															"nodeType": "VariableDeclaration",
															"scope": 1716,
															"src": "7100:30:3",
															"stateVariable": false,
															"storageLocation": "memory",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator"
															},
															"typeName": {
																"id": 1639,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1638,
																	"name": "RRUtils.RRIterator",
																	"nameLocations": [
																		"7100:7:3",
																		"7108:10:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2562,
																	"src": "7100:18:3"
																},
																"referencedDeclaration": 2562,
																"src": "7100:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
																	"typeString": "struct RRUtils.RRIterator"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1644,
													"initialValue": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1641,
																"name": "rrset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "7133:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7139:3:3",
															"memberName": "rrs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2547,
															"src": "7133:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_SignedSet_$2429_memory_ptr_$returns$_t_struct$_RRIterator_$2562_memory_ptr_$bound_to$_t_struct$_SignedSet_$2429_memory_ptr_$",
																"typeString": "function (struct RRUtils.SignedSet memory) pure returns (struct RRUtils.RRIterator memory)"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7133:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
															"typeString": "struct RRUtils.RRIterator memory"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7100:44:3"
												},
												"loopExpression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1649,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "7186:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7191:4:3",
															"memberName": "next",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2711,
															"src": "7186:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7186:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1652,
													"nodeType": "ExpressionStatement",
													"src": "7186:11:3"
												},
												"nodeType": "ForStatement",
												"src": "7081:1024:3"
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "6740:147:3",
										"text": " @dev Validates a set of RRs.\n @param rrset The RR set.\n @param typecovered The type covered by the RRSIG record."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateRRs",
									"nameLocation": "6902:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "6949:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "6924:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 1628,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1627,
														"name": "RRUtils.SignedSet",
														"nameLocations": [
															"6924:7:3",
															"6932:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "6924:17:3"
													},
													"referencedDeclaration": 2429,
													"src": "6924:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "typecovered",
												"nameLocation": "6972:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "6965:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1630,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6965:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6913:77:3"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "7027:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "7014:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7014:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7013:19:3"
									},
									"scope": 2215,
									"src": "6893:1219:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "8654:642:3",
										"statements": [
											{
												"condition": {
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8788:37:3",
													"subExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1734,
																	"name": "rrset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1724,
																	"src": "8808:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																		"typeString": "struct RRUtils.SignedSet memory"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8814:10:3",
																"memberName": "signerName",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2424,
																"src": "8808:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1732,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "8789:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8794:13:3",
															"memberName": "isSubdomainOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2968,
															"src": "8789:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,bytes memory) pure returns (bool)"
															}
														},
														"id": 1736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8789:36:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "8784:118:3",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "8827:75:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1739,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "8867:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"expression": {
																			"id": 1740,
																			"name": "rrset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "8873:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8879:10:3",
																		"memberName": "signerName",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2424,
																		"src": "8873:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1738,
																	"name": "InvalidSignerName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "8849:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,bytes memory) pure"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8849:41:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1743,
															"nodeType": "RevertStatement",
															"src": "8842:48:3"
														}
													]
												}
											},
											{
												"assignments": [
													1750
												],
												"declarations": [
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "proofRR",
														"nameLocation": "8940:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 1786,
														"src": "8914:33:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
															"typeString": "struct RRUtils.RRIterator"
														},
														"typeName": {
															"id": 1749,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1748,
																"name": "RRUtils.RRIterator",
																"nameLocations": [
																	"8914:7:3",
																	"8922:10:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2562,
																"src": "8914:18:3"
															},
															"referencedDeclaration": 2562,
															"src": "8914:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
																"typeString": "struct RRUtils.RRIterator"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1755,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8967:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1751,
															"name": "proof",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "8950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8956:10:3",
														"memberName": "iterateRRs",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2590,
														"src": "8950:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_RRIterator_$2562_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256) pure returns (struct RRUtils.RRIterator memory)"
														}
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8950:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
														"typeString": "struct RRUtils.RRIterator memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8914:55:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1756,
															"name": "proofRR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1750,
															"src": "9012:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 1757,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9020:7:3",
														"memberName": "dnstype",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2553,
														"src": "9012:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1758,
														"name": "DNSTYPE_DS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "9031:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "9012:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1767,
																"name": "proofRR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "9114:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9122:7:3",
															"memberName": "dnstype",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2553,
															"src": "9114:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1769,
															"name": "DNSTYPE_DNSKEY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "9133:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "9114:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1783,
														"nodeType": "Block",
														"src": "9222:67:3",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1779,
																				"name": "proofRR",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1750,
																				"src": "9261:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																					"typeString": "struct RRUtils.RRIterator memory"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9269:7:3",
																			"memberName": "dnstype",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2553,
																			"src": "9261:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		],
																		"id": 1778,
																		"name": "InvalidProofType",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "9244:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_uint16_$returns$__$",
																			"typeString": "function (uint16) pure"
																		}
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9244:33:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1782,
																"nodeType": "RevertStatement",
																"src": "9237:40:3"
															}
														]
													},
													"id": 1784,
													"nodeType": "IfStatement",
													"src": "9110:179:3",
													"trueBody": {
														"id": 1777,
														"nodeType": "Block",
														"src": "9149:67:3",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1772,
																			"name": "rrset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1724,
																			"src": "9183:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		{
																			"id": 1773,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1727,
																			"src": "9190:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																				"typeString": "struct DNSSEC.RRSetWithSignature memory"
																			}
																		},
																		{
																			"id": 1774,
																			"name": "proofRR",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "9196:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																				"typeString": "struct RRUtils.RRIterator memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			},
																			{
																				"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																				"typeString": "struct DNSSEC.RRSetWithSignature memory"
																			},
																			{
																				"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																				"typeString": "struct RRUtils.RRIterator memory"
																			}
																		],
																		"id": 1771,
																		"name": "verifyWithKnownKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "9164:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_SignedSet_$2429_memory_ptr_$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$",
																			"typeString": "function (struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory,struct RRUtils.RRIterator memory) view"
																		}
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9164:40:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1776,
																"nodeType": "ExpressionStatement",
																"src": "9164:40:3"
															}
														]
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "9008:281:3",
												"trueBody": {
													"id": 1766,
													"nodeType": "Block",
													"src": "9043:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1761,
																		"name": "rrset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "9071:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		}
																	},
																	{
																		"id": 1762,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "9078:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		}
																	},
																	{
																		"id": 1763,
																		"name": "proofRR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1750,
																		"src": "9084:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	],
																	"id": 1760,
																	"name": "verifyWithDS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "9058:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_SignedSet_$2429_memory_ptr_$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$",
																		"typeString": "function (struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory,struct RRUtils.RRIterator memory) view"
																	}
																},
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9058:34:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1765,
															"nodeType": "ExpressionStatement",
															"src": "9058:34:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "8120:343:3",
										"text": " @dev Performs signature verification.\n Throws or reverts if unable to verify the record.\n @param name The name of the RRSIG record, in DNS label-sequence format.\n @param data The original data to verify.\n @param proof A DS or DNSKEY record that's already verified by the oracle."
									},
									"id": 1787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignature",
									"nameLocation": "8478:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "8517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "8504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1720,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "8557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "8532:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 1723,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1722,
														"name": "RRUtils.SignedSet",
														"nameLocations": [
															"8532:7:3",
															"8540:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "8532:17:3"
													},
													"referencedDeclaration": 2429,
													"src": "8532:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8599:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "8573:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature"
												},
												"typeName": {
													"id": 1726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1725,
														"name": "RRSetWithSignature",
														"nameLocations": [
															"8573:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1248,
														"src": "8573:18:3"
													},
													"referencedDeclaration": 1248,
													"src": "8573:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "8627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "8614:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8614:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8493:146:3"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8654:0:3"
									},
									"scope": 2215,
									"src": "8469:827:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "9767:693:3",
										"statements": [
											{
												"body": {
													"id": 1855,
													"nodeType": "Block",
													"src": "9893:509:3",
													"statements": [
														{
															"assignments": [
																1809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1809,
																	"mutability": "mutable",
																	"name": "proofName",
																	"nameLocation": "9921:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1855,
																	"src": "9908:22:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1808,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "9908:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1813,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1810,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "9933:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9939:4:3",
																	"memberName": "name",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2734,
																	"src": "9933:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																		"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bytes memory)"
																	}
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9933:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9908:37:3"
														},
														{
															"condition": {
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9964:35:3",
																"subExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1816,
																				"name": "rrset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1791,
																				"src": "9982:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																					"typeString": "struct RRUtils.SignedSet memory"
																				}
																			},
																			"id": 1817,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9988:10:3",
																			"memberName": "signerName",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2424,
																			"src": "9982:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 1814,
																			"name": "proofName",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "9965:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9975:6:3",
																		"memberName": "equals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 756,
																		"src": "9965:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory,bytes memory) pure returns (bool)"
																		}
																	},
																	"id": 1818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9965:34:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1827,
															"nodeType": "IfStatement",
															"src": "9960:129:3",
															"trueBody": {
																"id": 1826,
																"nodeType": "Block",
																"src": "10001:88:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1821,
																						"name": "rrset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1791,
																						"src": "10045:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																							"typeString": "struct RRUtils.SignedSet memory"
																						}
																					},
																					"id": 1822,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10051:10:3",
																					"memberName": "signerName",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2424,
																					"src": "10045:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"id": 1823,
																					"name": "proofName",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1809,
																					"src": "10063:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 1820,
																				"name": "ProofNameMismatch",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1366,
																				"src": "10027:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (bytes memory,bytes memory) pure"
																				}
																			},
																			"id": 1824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10027:46:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1825,
																		"nodeType": "RevertStatement",
																		"src": "10020:53:3"
																	}
																]
															}
														},
														{
															"assignments": [
																1829
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1829,
																	"mutability": "mutable",
																	"name": "keyrdata",
																	"nameLocation": "10118:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1855,
																	"src": "10105:21:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1828,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10105:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1833,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1830,
																		"name": "proof",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "10129:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10135:5:3",
																	"memberName": "rdata",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2756,
																	"src": "10129:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																		"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bytes memory)"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10129:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10105:37:3"
														},
														{
															"assignments": [
																1838
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1838,
																	"mutability": "mutable",
																	"name": "dnskey",
																	"nameLocation": "10179:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1855,
																	"src": "10157:28:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																		"typeString": "struct RRUtils.DNSKEY"
																	},
																	"typeName": {
																		"id": 1837,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1836,
																			"name": "RRUtils.DNSKEY",
																			"nameLocations": [
																				"10157:7:3",
																				"10165:6:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2777,
																			"src": "10157:14:3"
																		},
																		"referencedDeclaration": 2777,
																		"src": "10157:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_storage_ptr",
																			"typeString": "struct RRUtils.DNSKEY"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1845,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10226:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"expression": {
																			"id": 1842,
																			"name": "keyrdata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1829,
																			"src": "10246:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10255:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10246:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1839,
																		"name": "keyrdata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "10188:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10197:10:3",
																	"memberName": "readDNSKEY",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2837,
																	"src": "10188:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_DNSKEY_$2777_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory,uint256,uint256) pure returns (struct RRUtils.DNSKEY memory)"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10188:88:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																	"typeString": "struct RRUtils.DNSKEY memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10157:119:3"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"id": 1847,
																		"name": "dnskey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1838,
																		"src": "10318:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																			"typeString": "struct RRUtils.DNSKEY memory"
																		}
																	},
																	{
																		"id": 1848,
																		"name": "keyrdata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "10326:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1849,
																		"name": "rrset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "10336:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		}
																	},
																	{
																		"id": 1850,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "10343:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																			"typeString": "struct RRUtils.DNSKEY memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		}
																	],
																	"id": 1846,
																	"name": "verifySignatureWithKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "10295:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_DNSKEY_$2777_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_SignedSet_$2429_memory_ptr_$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$returns$_t_bool_$",
																		"typeString": "function (struct RRUtils.DNSKEY memory,bytes memory,struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory) view returns (bool)"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10295:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1854,
															"nodeType": "IfStatement",
															"src": "10291:100:3",
															"trueBody": {
																"id": 1853,
																"nodeType": "Block",
																"src": "10350:41:3",
																"statements": [
																	{
																		"functionReturnParameters": 1799,
																		"id": 1852,
																		"nodeType": "Return",
																		"src": "10369:7:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9864:13:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1800,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "9865:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9871:4:3",
															"memberName": "done",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2607,
															"src": "9865:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bool)"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9865:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1856,
												"loopExpression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1804,
																"name": "proof",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "9879:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9885:4:3",
															"memberName": "next",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2711,
															"src": "9879:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure"
															}
														},
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9879:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1807,
													"nodeType": "ExpressionStatement",
													"src": "9879:12:3"
												},
												"nodeType": "ForStatement",
												"src": "9857:545:3"
											},
											{
												"errorCall": {
													"arguments": [
														{
															"expression": {
																"id": 1858,
																"name": "rrset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "10435:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10441:10:3",
															"memberName": "signerName",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2424,
															"src": "10435:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1857,
														"name": "NoMatchingProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "10419:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory) pure"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10419:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "RevertStatement",
												"src": "10412:40:3"
											}
										]
									},
									"documentation": {
										"id": 1788,
										"nodeType": "StructuredDocumentation",
										"src": "9304:284:3",
										"text": " @dev Attempts to verify a signed RRSET against an already known public key.\n @param rrset The signed set to verify.\n @param data The original data the signed set was read from.\n @param proof The serialized DS or DNSKEY record to use as proof."
									},
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyWithKnownKey",
									"nameLocation": "9603:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "9657:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "9632:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 1790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1789,
														"name": "RRUtils.SignedSet",
														"nameLocations": [
															"9632:7:3",
															"9640:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "9632:17:3"
													},
													"referencedDeclaration": 2429,
													"src": "9632:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9699:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "9673:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature"
												},
												"typeName": {
													"id": 1793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1792,
														"name": "RRSetWithSignature",
														"nameLocations": [
															"9673:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1248,
														"src": "9673:18:3"
													},
													"referencedDeclaration": 1248,
													"src": "9673:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "9714:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 1796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1795,
														"name": "RRUtils.RRIterator",
														"nameLocations": [
															"9714:7:3",
															"9722:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "9714:18:3"
													},
													"referencedDeclaration": 2562,
													"src": "9714:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9621:131:3"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9767:0:3"
									},
									"scope": 2215,
									"src": "9594:866:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "11033:1149:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1880,
															"name": "dnskey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "11185:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11192:8:3",
														"memberName": "protocol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2772,
														"src": "11185:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "33",
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11204:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "11185:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1887,
												"nodeType": "IfStatement",
												"src": "11181:65:3",
												"trueBody": {
													"id": 1886,
													"nodeType": "Block",
													"src": "11207:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11229:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1879,
															"id": 1885,
															"nodeType": "Return",
															"src": "11222:12:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1888,
															"name": "dnskey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "11466:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 1889,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11473:9:3",
														"memberName": "algorithm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2774,
														"src": "11466:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1890,
															"name": "rrset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "11486:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11492:9:3",
														"memberName": "algorithm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2412,
														"src": "11486:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11466:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1896,
												"nodeType": "IfStatement",
												"src": "11462:80:3",
												"trueBody": {
													"id": 1895,
													"nodeType": "Block",
													"src": "11503:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11525:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1879,
															"id": 1894,
															"nodeType": "Return",
															"src": "11518:12:3"
														}
													]
												}
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "computedkeytag",
														"nameLocation": "11559:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "11552:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1897,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "11552:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1899,
															"name": "keyrdata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "11576:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11585:13:3",
														"memberName": "computeKeytag",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3350,
														"src": "11576:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (uint16)"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11576:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11552:48:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1903,
														"name": "computedkeytag",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "11615:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1904,
															"name": "rrset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1872,
															"src": "11633:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 1905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11639:6:3",
														"memberName": "keytag",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2422,
														"src": "11633:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "11615:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "11611:75:3",
												"trueBody": {
													"id": 1909,
													"nodeType": "Block",
													"src": "11647:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11669:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1879,
															"id": 1908,
															"nodeType": "Return",
															"src": "11662:12:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1911,
																"name": "dnskey",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1867,
																"src": "11879:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																	"typeString": "struct RRUtils.DNSKEY memory"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11886:5:3",
															"memberName": "flags",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2770,
															"src": "11879:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"id": 1913,
															"name": "DNSKEY_FLAG_ZONEKEY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "11894:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11879:34:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11917:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11879:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1920,
												"nodeType": "IfStatement",
												"src": "11875:84:3",
												"trueBody": {
													"id": 1919,
													"nodeType": "Block",
													"src": "11920:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11942:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1879,
															"id": 1918,
															"nodeType": "Return",
															"src": "11935:12:3"
														}
													]
												}
											},
											{
												"assignments": [
													1923
												],
												"declarations": [
													{
														"constant": false,
														"id": 1923,
														"mutability": "mutable",
														"name": "algorithm",
														"nameLocation": "11981:9:3",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "11971:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Algorithm_$3367",
															"typeString": "contract Algorithm"
														},
														"typeName": {
															"id": 1922,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1921,
																"name": "Algorithm",
																"nameLocations": [
																	"11971:9:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3367,
																"src": "11971:9:3"
															},
															"referencedDeclaration": 3367,
															"src": "11971:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Algorithm_$3367",
																"typeString": "contract Algorithm"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"baseExpression": {
														"id": 1924,
														"name": "algorithms",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "11993:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Algorithm_$3367_$",
															"typeString": "mapping(uint8 => contract Algorithm)"
														}
													},
													"id": 1927,
													"indexExpression": {
														"expression": {
															"id": 1925,
															"name": "dnskey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "12004:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12011:9:3",
														"memberName": "algorithm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2774,
														"src": "12004:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11993:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Algorithm_$3367",
														"typeString": "contract Algorithm"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11971:50:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1931,
																"name": "algorithm",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "12044:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Algorithm_$3367",
																	"typeString": "contract Algorithm"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Algorithm_$3367",
																	"typeString": "contract Algorithm"
																}
															],
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12036:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1929,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12036:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12036:18:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12066:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12058:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1933,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12058:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12058:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12036:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "IfStatement",
												"src": "12032:77:3",
												"trueBody": {
													"id": 1940,
													"nodeType": "Block",
													"src": "12070:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12092:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1879,
															"id": 1939,
															"nodeType": "Return",
															"src": "12085:12:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1944,
															"name": "keyrdata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "12143:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 1945,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "12153:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																	"typeString": "struct DNSSEC.RRSetWithSignature memory"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12158:5:3",
															"memberName": "rrset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1245,
															"src": "12153:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 1947,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1875,
																"src": "12165:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																	"typeString": "struct DNSSEC.RRSetWithSignature memory"
																}
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12170:3:3",
															"memberName": "sig",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1247,
															"src": "12165:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1942,
															"name": "algorithm",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "12126:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Algorithm_$3367",
																"typeString": "contract Algorithm"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12136:6:3",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3366,
														"src": "12126:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view external returns (bool)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12126:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1950,
												"nodeType": "Return",
												"src": "12119:55:3"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "10468:338:3",
										"text": " @dev Attempts to verify some data using a provided key and a signature.\n @param dnskey The dns key record to verify the signature with.\n @param rrset The signed RRSET being verified.\n @param data The original data `rrset` was decoded from.\n @return True iff the key verifies the signature."
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifySignatureWithKey",
									"nameLocation": "10821:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "dnskey",
												"nameLocation": "10876:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "10854:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
													"typeString": "struct RRUtils.DNSKEY"
												},
												"typeName": {
													"id": 1866,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1865,
														"name": "RRUtils.DNSKEY",
														"nameLocations": [
															"10854:7:3",
															"10862:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2777,
														"src": "10854:14:3"
													},
													"referencedDeclaration": 2777,
													"src": "10854:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DNSKEY_$2777_storage_ptr",
														"typeString": "struct RRUtils.DNSKEY"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "keyrdata",
												"nameLocation": "10906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "10893:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10893:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "10950:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "10925:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 1871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1870,
														"name": "RRUtils.SignedSet",
														"nameLocations": [
															"10925:7:3",
															"10933:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "10925:17:3"
													},
													"referencedDeclaration": 2429,
													"src": "10925:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10992:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "10966:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature"
												},
												"typeName": {
													"id": 1874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1873,
														"name": "RRSetWithSignature",
														"nameLocations": [
															"10966:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1248,
														"src": "10966:18:3"
													},
													"referencedDeclaration": 1248,
													"src": "10966:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10843:160:3"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "11027:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11027:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11026:6:3"
									},
									"scope": 2215,
									"src": "10812:1370:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "12692:1061:3",
										"statements": [
											{
												"assignments": [
													1966
												],
												"declarations": [
													{
														"constant": false,
														"id": 1966,
														"mutability": "mutable",
														"name": "proofOffset",
														"nameLocation": "12711:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 2052,
														"src": "12703:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12703:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1969,
												"initialValue": {
													"expression": {
														"id": 1967,
														"name": "proof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "12725:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
															"typeString": "struct RRUtils.RRIterator memory"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12731:6:3",
													"memberName": "offset",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2551,
													"src": "12725:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12703:34:3"
											},
											{
												"body": {
													"id": 2045,
													"nodeType": "Block",
													"src": "12876:819:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 1990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1987,
																		"name": "iter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "12895:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12900:7:3",
																	"memberName": "dnstype",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2553,
																	"src": "12895:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1989,
																	"name": "DNSTYPE_DNSKEY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "12911:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "12895:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1997,
															"nodeType": "IfStatement",
															"src": "12891:108:3",
															"trueBody": {
																"id": 1996,
																"nodeType": "Block",
																"src": "12927:72:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1992,
																						"name": "iter",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1974,
																						"src": "12970:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																							"typeString": "struct RRUtils.RRIterator memory"
																						}
																					},
																					"id": 1993,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12975:7:3",
																					"memberName": "dnstype",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2553,
																					"src": "12970:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				],
																				"id": 1991,
																				"name": "InvalidProofType",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1360,
																				"src": "12953:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint16_$returns$__$",
																					"typeString": "function (uint16) pure"
																				}
																			},
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12953:30:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1995,
																		"nodeType": "RevertStatement",
																		"src": "12946:37:3"
																	}
																]
															}
														},
														{
															"assignments": [
																1999
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1999,
																	"mutability": "mutable",
																	"name": "keyrdata",
																	"nameLocation": "13028:8:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2045,
																	"src": "13015:21:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1998,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "13015:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2003,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2000,
																		"name": "iter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "13039:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13044:5:3",
																	"memberName": "rdata",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2756,
																	"src": "13039:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																		"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bytes memory)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13039:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13015:36:3"
														},
														{
															"assignments": [
																2008
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2008,
																	"mutability": "mutable",
																	"name": "dnskey",
																	"nameLocation": "13088:6:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2045,
																	"src": "13066:28:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																		"typeString": "struct RRUtils.DNSKEY"
																	},
																	"typeName": {
																		"id": 2007,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2006,
																			"name": "RRUtils.DNSKEY",
																			"nameLocations": [
																				"13066:7:3",
																				"13074:6:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2777,
																			"src": "13066:14:3"
																		},
																		"referencedDeclaration": 2777,
																		"src": "13066:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_storage_ptr",
																			"typeString": "struct RRUtils.DNSKEY"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2015,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13135:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"expression": {
																			"id": 2012,
																			"name": "keyrdata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1999,
																			"src": "13155:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13164:6:3",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "13155:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2009,
																		"name": "keyrdata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "13097:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13106:10:3",
																	"memberName": "readDNSKEY",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2837,
																	"src": "13097:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_DNSKEY_$2777_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory,uint256,uint256) pure returns (struct RRUtils.DNSKEY memory)"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13097:88:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																	"typeString": "struct RRUtils.DNSKEY memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "13066:119:3"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "dnskey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "13227:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																			"typeString": "struct RRUtils.DNSKEY memory"
																		}
																	},
																	{
																		"id": 2018,
																		"name": "keyrdata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "13235:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2019,
																		"name": "rrset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1956,
																		"src": "13245:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		}
																	},
																	{
																		"id": 2020,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "13252:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																			"typeString": "struct RRUtils.DNSKEY memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																			"typeString": "struct RRUtils.SignedSet memory"
																		},
																		{
																			"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
																			"typeString": "struct DNSSEC.RRSetWithSignature memory"
																		}
																	],
																	"id": 2016,
																	"name": "verifySignatureWithKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "13204:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_DNSKEY_$2777_memory_ptr_$_t_bytes_memory_ptr_$_t_struct$_SignedSet_$2429_memory_ptr_$_t_struct$_RRSetWithSignature_$1248_memory_ptr_$returns$_t_bool_$",
																		"typeString": "function (struct RRUtils.DNSKEY memory,bytes memory,struct RRUtils.SignedSet memory,struct DNSSEC.RRSetWithSignature memory) view returns (bool)"
																	}
																},
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13204:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2044,
															"nodeType": "IfStatement",
															"src": "13200:484:3",
															"trueBody": {
																"id": 2043,
																"nodeType": "Block",
																"src": "13259:425:3",
																"statements": [
																	{
																		"condition": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2023,
																						"name": "rrset",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1956,
																						"src": "13394:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																							"typeString": "struct RRUtils.SignedSet memory"
																						}
																					},
																					"id": 2024,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13400:10:3",
																					"memberName": "signerName",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2424,
																					"src": "13394:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"id": 2025,
																					"name": "proof",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "13412:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																						"typeString": "struct RRUtils.RRIterator memory"
																					}
																				},
																				{
																					"id": 2026,
																					"name": "dnskey",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2008,
																					"src": "13419:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																						"typeString": "struct RRUtils.DNSKEY memory"
																					}
																				},
																				{
																					"id": 2027,
																					"name": "keyrdata",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1999,
																					"src": "13427:8:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																						"typeString": "struct RRUtils.RRIterator memory"
																					},
																					{
																						"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																						"typeString": "struct RRUtils.DNSKEY memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2022,
																				"name": "verifyKeyWithDS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2178,
																				"src": "13378:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_struct$_RRIterator_$2562_memory_ptr_$_t_struct$_DNSKEY_$2777_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																					"typeString": "function (bytes memory,struct RRUtils.RRIterator memory,struct RRUtils.DNSKEY memory,bytes memory) view returns (bool)"
																				}
																			},
																			"id": 2028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13378:58:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2031,
																		"nodeType": "IfStatement",
																		"src": "13352:153:3",
																		"trueBody": {
																			"id": 2030,
																			"nodeType": "Block",
																			"src": "13456:49:3",
																			"statements": [
																				{
																					"functionReturnParameters": 1964,
																					"id": 2029,
																					"nodeType": "Return",
																					"src": "13479:7:3"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2032,
																					"name": "proof",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "13607:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																						"typeString": "struct RRUtils.RRIterator memory"
																					}
																				},
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "13613:10:3",
																				"memberName": "nextOffset",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2561,
																				"src": "13607:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2035,
																				"name": "proofOffset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1966,
																				"src": "13626:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13607:30:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2037,
																		"nodeType": "ExpressionStatement",
																		"src": "13607:30:3"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2038,
																					"name": "proof",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "13656:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																						"typeString": "struct RRUtils.RRIterator memory"
																					}
																				},
																				"id": 2040,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13662:4:3",
																				"memberName": "next",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2711,
																				"src": "13656:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																					"typeString": "function (struct RRUtils.RRIterator memory) pure"
																				}
																			},
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13656:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2042,
																		"nodeType": "ExpressionStatement",
																		"src": "13656:12:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "12826:12:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1979,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "12827:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12832:4:3",
															"memberName": "done",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2607,
															"src": "12827:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bool)"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12827:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2046,
												"initializationExpression": {
													"assignments": [
														1974
													],
													"declarations": [
														{
															"constant": false,
															"id": 1974,
															"mutability": "mutable",
															"name": "iter",
															"nameLocation": "12793:4:3",
															"nodeType": "VariableDeclaration",
															"scope": 2046,
															"src": "12767:30:3",
															"stateVariable": false,
															"storageLocation": "memory",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator"
															},
															"typeName": {
																"id": 1973,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1972,
																	"name": "RRUtils.RRIterator",
																	"nameLocations": [
																		"12767:7:3",
																		"12775:10:3"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 2562,
																	"src": "12767:18:3"
																},
																"referencedDeclaration": 2562,
																"src": "12767:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
																	"typeString": "struct RRUtils.RRIterator"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1978,
													"initialValue": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1975,
																"name": "rrset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "12800:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"id": 1976,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12806:3:3",
															"memberName": "rrs",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2547,
															"src": "12800:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_SignedSet_$2429_memory_ptr_$returns$_t_struct$_RRIterator_$2562_memory_ptr_$bound_to$_t_struct$_SignedSet_$2429_memory_ptr_$",
																"typeString": "function (struct RRUtils.SignedSet memory) pure returns (struct RRUtils.RRIterator memory)"
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12800:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
															"typeString": "struct RRUtils.RRIterator memory"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12767:44:3"
												},
												"loopExpression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1983,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "12853:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12858:4:3",
															"memberName": "next",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2711,
															"src": "12853:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12853:11:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1986,
													"nodeType": "ExpressionStatement",
													"src": "12853:11:3"
												},
												"nodeType": "ForStatement",
												"src": "12748:947:3"
											},
											{
												"errorCall": {
													"arguments": [
														{
															"expression": {
																"id": 2048,
																"name": "rrset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "13728:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13734:10:3",
															"memberName": "signerName",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2424,
															"src": "13728:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2047,
														"name": "NoMatchingProof",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "13712:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes memory) pure"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13712:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "RevertStatement",
												"src": "13705:40:3"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "12190:329:3",
										"text": " @dev Attempts to verify a signed RRSET against an already known hash. This function assumes\n      that the record\n @param rrset The signed set to verify.\n @param data The original data the signed set was read from.\n @param proof The serialized DS or DNSKEY record to use as proof."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyWithDS",
									"nameLocation": "12534:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "12582:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "12557:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 1955,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1954,
														"name": "RRUtils.SignedSet",
														"nameLocations": [
															"12557:7:3",
															"12565:9:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "12557:17:3"
													},
													"referencedDeclaration": 2429,
													"src": "12557:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12624:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "12598:30:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_memory_ptr",
													"typeString": "struct DNSSEC.RRSetWithSignature"
												},
												"typeName": {
													"id": 1958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1957,
														"name": "RRSetWithSignature",
														"nameLocations": [
															"12598:18:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1248,
														"src": "12598:18:3"
													},
													"referencedDeclaration": 1248,
													"src": "12598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRSetWithSignature_$1248_storage_ptr",
														"typeString": "struct DNSSEC.RRSetWithSignature"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "12665:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "12639:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 1961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1960,
														"name": "RRUtils.RRIterator",
														"nameLocations": [
															"12639:7:3",
															"12647:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "12639:18:3"
													},
													"referencedDeclaration": 2562,
													"src": "12639:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12546:131:3"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12692:0:3"
									},
									"scope": 2215,
									"src": "12525:1228:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "14331:937:3",
										"statements": [
											{
												"assignments": [
													2070
												],
												"declarations": [
													{
														"constant": false,
														"id": 2070,
														"mutability": "mutable",
														"name": "keytag",
														"nameLocation": "14349:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "14342:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 2069,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "14342:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2074,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2071,
															"name": "keyrdata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "14358:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14367:13:3",
														"memberName": "computeKeytag",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3350,
														"src": "14358:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (uint16)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14358:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14342:40:3"
											},
											{
												"body": {
													"id": 2173,
													"nodeType": "Block",
													"src": "14429:809:3",
													"statements": [
														{
															"assignments": [
																2084
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2084,
																	"mutability": "mutable",
																	"name": "proofName",
																	"nameLocation": "14457:9:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2173,
																	"src": "14444:22:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2083,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "14444:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2088,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2085,
																		"name": "dsrrs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2059,
																		"src": "14469:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14475:4:3",
																	"memberName": "name",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2734,
																	"src": "14469:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																		"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bytes memory)"
																	}
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14469:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14444:37:3"
														},
														{
															"condition": {
																"id": 2093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "14500:26:3",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 2091,
																			"name": "keyname",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "14518:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 2089,
																			"name": "proofName",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "14501:9:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14511:6:3",
																		"memberName": "equals",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 756,
																		"src": "14501:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory,bytes memory) pure returns (bool)"
																		}
																	},
																	"id": 2092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14501:25:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2100,
															"nodeType": "IfStatement",
															"src": "14496:111:3",
															"trueBody": {
																"id": 2099,
																"nodeType": "Block",
																"src": "14528:79:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2095,
																					"name": "keyname",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2056,
																					"src": "14572:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"id": 2096,
																					"name": "proofName",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2084,
																					"src": "14581:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2094,
																				"name": "ProofNameMismatch",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1366,
																				"src": "14554:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (bytes memory,bytes memory) pure"
																				}
																			},
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14554:37:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2098,
																		"nodeType": "RevertStatement",
																		"src": "14547:44:3"
																	}
																]
															}
														},
														{
															"assignments": [
																2105
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2105,
																	"mutability": "mutable",
																	"name": "ds",
																	"nameLocation": "14641:2:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2173,
																	"src": "14623:20:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																		"typeString": "struct RRUtils.DS"
																	},
																	"typeName": {
																		"id": 2104,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2103,
																			"name": "RRUtils.DS",
																			"nameLocations": [
																				"14623:7:3",
																				"14631:2:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 2858,
																			"src": "14623:10:3"
																		},
																		"referencedDeclaration": 2858,
																		"src": "14623:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DS_$2858_storage_ptr",
																			"typeString": "struct RRUtils.DS"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2117,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2109,
																			"name": "dsrrs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2059,
																			"src": "14682:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																				"typeString": "struct RRUtils.RRIterator memory"
																			}
																		},
																		"id": 2110,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14688:11:3",
																		"memberName": "rdataOffset",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2559,
																		"src": "14682:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2111,
																				"name": "dsrrs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2059,
																				"src": "14718:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																					"typeString": "struct RRUtils.RRIterator memory"
																				}
																			},
																			"id": 2112,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14724:10:3",
																			"memberName": "nextOffset",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2561,
																			"src": "14718:16:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 2113,
																				"name": "dsrrs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2059,
																				"src": "14737:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																					"typeString": "struct RRUtils.RRIterator memory"
																				}
																			},
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "14743:11:3",
																			"memberName": "rdataOffset",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2559,
																			"src": "14737:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14718:36:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2106,
																			"name": "dsrrs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2059,
																			"src": "14646:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																				"typeString": "struct RRUtils.RRIterator memory"
																			}
																		},
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14652:4:3",
																		"memberName": "data",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2549,
																		"src": "14646:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14657:6:3",
																	"memberName": "readDS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2918,
																	"src": "14646:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_DS_$2858_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory,uint256,uint256) pure returns (struct RRUtils.DS memory)"
																	}
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14646:123:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																	"typeString": "struct RRUtils.DS memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14623:146:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"id": 2121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2118,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2105,
																		"src": "14788:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																			"typeString": "struct RRUtils.DS memory"
																		}
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14791:6:3",
																	"memberName": "keytag",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2851,
																	"src": "14788:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2120,
																	"name": "keytag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2070,
																	"src": "14801:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "14788:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2124,
															"nodeType": "IfStatement",
															"src": "14784:68:3",
															"trueBody": {
																"id": 2123,
																"nodeType": "Block",
																"src": "14809:43:3",
																"statements": [
																	{
																		"id": 2122,
																		"nodeType": "Continue",
																		"src": "14828:8:3"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2125,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2105,
																		"src": "14870:2:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																			"typeString": "struct RRUtils.DS memory"
																		}
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14873:9:3",
																	"memberName": "algorithm",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2853,
																	"src": "14870:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"expression": {
																		"id": 2127,
																		"name": "dnskey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2062,
																		"src": "14886:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																			"typeString": "struct RRUtils.DNSKEY memory"
																		}
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14893:9:3",
																	"memberName": "algorithm",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2774,
																	"src": "14886:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "14870:32:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2132,
															"nodeType": "IfStatement",
															"src": "14866:81:3",
															"trueBody": {
																"id": 2131,
																"nodeType": "Block",
																"src": "14904:43:3",
																"statements": [
																	{
																		"id": 2130,
																		"nodeType": "Continue",
																		"src": "14923:8:3"
																	}
																]
															}
														},
														{
															"assignments": [
																2137
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2137,
																	"mutability": "mutable",
																	"name": "buf",
																	"nameLocation": "14984:3:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 2173,
																	"src": "14963:24:3",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																		"typeString": "struct Buffer.buffer"
																	},
																	"typeName": {
																		"id": 2136,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2135,
																			"name": "Buffer.buffer",
																			"nameLocations": [
																				"14963:6:3",
																				"14970:6:3"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 7,
																			"src": "14963:13:3"
																		},
																		"referencedDeclaration": 7,
																		"src": "14963:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_storage_ptr",
																			"typeString": "struct Buffer.buffer"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2138,
															"nodeType": "VariableDeclarationStatement",
															"src": "14963:24:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2142,
																				"name": "keyname",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2056,
																				"src": "15011:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15019:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "15011:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"expression": {
																				"id": 2144,
																				"name": "keyrdata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2064,
																				"src": "15028:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15037:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "15028:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15011:32:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2139,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "15002:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15006:4:3",
																	"memberName": "init",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 45,
																	"src": "15002:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$7_memory_ptr_$bound_to$_t_struct$_buffer_$7_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15002:42:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 2148,
															"nodeType": "ExpressionStatement",
															"src": "15002:42:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2152,
																		"name": "keyname",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "15070:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2149,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "15059:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15063:6:3",
																	"memberName": "append",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "15059:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$7_memory_ptr_$bound_to$_t_struct$_buffer_$7_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 2153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15059:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 2154,
															"nodeType": "ExpressionStatement",
															"src": "15059:19:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2158,
																		"name": "keyrdata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "15104:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2155,
																		"name": "buf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "15093:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																			"typeString": "struct Buffer.buffer memory"
																		}
																	},
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15097:6:3",
																	"memberName": "append",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 220,
																	"src": "15093:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_struct$_buffer_$7_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$7_memory_ptr_$bound_to$_t_struct$_buffer_$7_memory_ptr_$",
																		"typeString": "function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"
																	}
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15093:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																	"typeString": "struct Buffer.buffer memory"
																}
															},
															"id": 2160,
															"nodeType": "ExpressionStatement",
															"src": "15093:20:3"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2162,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "15145:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																				"typeString": "struct RRUtils.DS memory"
																			}
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15148:10:3",
																		"memberName": "digestType",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2855,
																		"src": "15145:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"expression": {
																			"id": 2164,
																			"name": "buf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2137,
																			"src": "15160:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_buffer_$7_memory_ptr",
																				"typeString": "struct Buffer.buffer memory"
																			}
																		},
																		"id": 2165,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15164:3:3",
																		"memberName": "buf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4,
																		"src": "15160:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"expression": {
																			"id": 2166,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2105,
																			"src": "15169:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																				"typeString": "struct RRUtils.DS memory"
																			}
																		},
																		"id": 2167,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15172:6:3",
																		"memberName": "digest",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2857,
																		"src": "15169:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2161,
																	"name": "verifyDSHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2214,
																	"src": "15132:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint8_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																		"typeString": "function (uint8,bytes memory,bytes memory) view returns (bool)"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15132:47:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2172,
															"nodeType": "IfStatement",
															"src": "15128:99:3",
															"trueBody": {
																"id": 2171,
																"nodeType": "Block",
																"src": "15181:46:3",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15207:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 2068,
																		"id": 2170,
																		"nodeType": "Return",
																		"src": "15200:11:3"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "14400:13:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2075,
																"name": "dsrrs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "14401:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14407:4:3",
															"memberName": "done",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2607,
															"src": "14401:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure returns (bool)"
															}
														},
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14401:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2174,
												"loopExpression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2079,
																"name": "dsrrs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "14415:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14421:4:3",
															"memberName": "next",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2711,
															"src": "14415:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$bound_to$_t_struct$_RRIterator_$2562_memory_ptr_$",
																"typeString": "function (struct RRUtils.RRIterator memory) pure"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14415:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2082,
													"nodeType": "ExpressionStatement",
													"src": "14415:12:3"
												},
												"nodeType": "ForStatement",
												"src": "14393:845:3"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15255:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2068,
												"id": 2176,
												"nodeType": "Return",
												"src": "15248:12:3"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "13761:359:3",
										"text": " @dev Attempts to verify a key using DS records.\n @param keyname The DNS name of the key, in DNS label-sequence format.\n @param dsrrs The DS records to use in verification.\n @param dnskey The dnskey to verify.\n @param keyrdata The RDATA section of the key.\n @return True if a DS record verifies this key."
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyKeyWithDS",
									"nameLocation": "14135:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "keyname",
												"nameLocation": "14174:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "14161:20:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14161:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "dsrrs",
												"nameLocation": "14218:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "14192:31:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2057,
														"name": "RRUtils.RRIterator",
														"nameLocations": [
															"14192:7:3",
															"14200:10:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "14192:18:3"
													},
													"referencedDeclaration": 2562,
													"src": "14192:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "dnskey",
												"nameLocation": "14256:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "14234:28:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
													"typeString": "struct RRUtils.DNSKEY"
												},
												"typeName": {
													"id": 2061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2060,
														"name": "RRUtils.DNSKEY",
														"nameLocations": [
															"14234:7:3",
															"14242:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2777,
														"src": "14234:14:3"
													},
													"referencedDeclaration": 2777,
													"src": "14234:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DNSKEY_$2777_storage_ptr",
														"typeString": "struct RRUtils.DNSKEY"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "keyrdata",
												"nameLocation": "14286:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "14273:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14273:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14150:151:3"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "14325:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2066,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14325:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14324:6:3"
									},
									"scope": 2215,
									"src": "14126:1142:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "15714:163:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 2192,
																	"name": "digests",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "15737:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Digest_$3381_$",
																		"typeString": "mapping(uint8 => contract Digest)"
																	}
																},
																"id": 2194,
																"indexExpression": {
																	"id": 2193,
																	"name": "digesttype",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2181,
																	"src": "15745:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "15737:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Digest_$3381",
																	"typeString": "contract Digest"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Digest_$3381",
																	"typeString": "contract Digest"
																}
															],
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15729:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2190,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15729:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15729:28:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15769:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15761:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2196,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15761:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 2199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15761:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15729:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "15725:87:3",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "15773:39:3",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15795:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2189,
															"id": 2202,
															"nodeType": "Return",
															"src": "15788:12:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2209,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2183,
															"src": "15856:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2210,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "15862:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2205,
																"name": "digests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "15829:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint8_$_t_contract$_Digest_$3381_$",
																	"typeString": "mapping(uint8 => contract Digest)"
																}
															},
															"id": 2207,
															"indexExpression": {
																"id": 2206,
																"name": "digesttype",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "15837:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15829:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Digest_$3381",
																"typeString": "contract Digest"
															}
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15849:6:3",
														"memberName": "verify",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3380,
														"src": "15829:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory,bytes memory) pure external returns (bool)"
														}
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15829:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2212,
												"nodeType": "Return",
												"src": "15822:47:3"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "15276:289:3",
										"text": " @dev Attempts to verify a DS record's hash value against some data.\n @param digesttype The digest ID from the DS record.\n @param data The data to digest.\n @param digest The digest data to check against.\n @return True iff the digest matches."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyDSHash",
									"nameLocation": "15580:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "digesttype",
												"nameLocation": "15609:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "15603:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15643:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "15630:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15630:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "15671:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "15658:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15658:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15592:92:3"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "15708:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2187,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15708:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15707:6:3"
									},
									"scope": 2215,
									"src": "15571:306:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2216,
							"src": "928:14952:3",
							"usedErrors": [
								1326,
								1332,
								1338,
								1342,
								1344,
								1350,
								1356,
								1360,
								1366,
								1370
							]
						}
					],
					"src": "33:15847:3"
				},
				"id": 3
			},
			"packages/contracts/src/dnssec-oracle/Owned.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/Owned.sol",
					"exportedSymbols": {
						"Owned": [
							2253
						]
					},
					"id": 2254,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Owned",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2218,
								"nodeType": "StructuredDocumentation",
								"src": "66:55:4",
								"text": " @dev Contract mixin for 'owned' contracts."
							},
							"fullyImplemented": true,
							"id": 2253,
							"linearizedBaseContracts": [
								2253
							],
							"name": "Owned",
							"nameLocation": "132:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 2220,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "160:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "145:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2219,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "145:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2230,
										"nodeType": "Block",
										"src": "196:59:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2223,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "215:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "219:6:4",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "215:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2225,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2220,
																"src": "229:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "215:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "207:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "207:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2228,
												"nodeType": "ExpressionStatement",
												"src": "207:28:4"
											},
											{
												"id": 2229,
												"nodeType": "PlaceholderStatement",
												"src": "246:1:4"
											}
										]
									},
									"id": 2231,
									"name": "owner_only",
									"nameLocation": "183:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "193:2:4"
									},
									"src": "174:81:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "284:37:4",
										"statements": [
											{
												"expression": {
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2234,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "295:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2235,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "303:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "307:6:4",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "303:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "295:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2238,
												"nodeType": "ExpressionStatement",
												"src": "295:18:4"
											}
										]
									},
									"id": 2240,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:4"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:0:4"
									},
									"scope": 2253,
									"src": "263:58:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "383:35:4",
										"statements": [
											{
												"expression": {
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2247,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2220,
														"src": "394:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2248,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "402:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "394:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "394:16:4"
											}
										]
									},
									"functionSelector": "13af4035",
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2245,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2244,
												"name": "owner_only",
												"nameLocations": [
													"372:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2231,
												"src": "372:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "372:10:4"
										}
									],
									"name": "setOwner",
									"nameLocation": "338:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "355:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "347:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:18:4"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "383:0:4"
									},
									"scope": 2253,
									"src": "329:89:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2254,
							"src": "123:298:4",
							"usedErrors": []
						}
					],
					"src": "39:384:4"
				},
				"id": 4
			},
			"packages/contracts/src/dnssec-oracle/RRUtils.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/RRUtils.sol",
					"exportedSymbols": {
						"Buffer": [
							420
						],
						"BytesUtils": [
							1238
						],
						"RRUtils": [
							3351
						]
					},
					"id": 3352,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:5"
						},
						{
							"absolutePath": "packages/contracts/src/dnssec-oracle/BytesUtils.sol",
							"file": "./BytesUtils.sol",
							"id": 2256,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3352,
							"sourceUnit": 1239,
							"src": "66:26:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@ensdomains/buffer/contracts/Buffer.sol",
							"file": "@ensdomains/buffer/contracts/Buffer.sol",
							"id": 2257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3352,
							"sourceUnit": 421,
							"src": "94:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RRUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2258,
								"nodeType": "StructuredDocumentation",
								"src": "147:96:5",
								"text": " @dev RRUtils is a library that provides utilities for parsing DNS resource records."
							},
							"fullyImplemented": true,
							"id": 3351,
							"linearizedBaseContracts": [
								3351
							],
							"name": "RRUtils",
							"nameLocation": "253:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2260,
									"libraryName": {
										"id": 2259,
										"name": "BytesUtils",
										"nameLocations": [
											"274:10:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1238,
										"src": "274:10:5"
									},
									"nodeType": "UsingForDirective",
									"src": "268:23:5"
								},
								{
									"global": false,
									"id": 2262,
									"libraryName": {
										"id": 2261,
										"name": "Buffer",
										"nameLocations": [
											"303:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "303:6:5"
									},
									"nodeType": "UsingForDirective",
									"src": "297:19:5"
								},
								{
									"body": {
										"id": 2309,
										"nodeType": "Block",
										"src": "710:304:5",
										"statements": [
											{
												"assignments": [
													2273
												],
												"declarations": [
													{
														"constant": false,
														"id": 2273,
														"mutability": "mutable",
														"name": "idx",
														"nameLocation": "729:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 2309,
														"src": "721:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2272,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "721:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2275,
												"initialValue": {
													"id": 2274,
													"name": "offset",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2267,
													"src": "735:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:20:5"
											},
											{
												"body": {
													"id": 2303,
													"nodeType": "Block",
													"src": "765:212:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2278,
																			"name": "idx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2273,
																			"src": "787:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"id": 2279,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2265,
																				"src": "793:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "798:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "793:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "787:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2277,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967293,
																	"src": "780:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "780:25:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2283,
															"nodeType": "ExpressionStatement",
															"src": "780:25:5"
														},
														{
															"assignments": [
																2285
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2285,
																	"mutability": "mutable",
																	"name": "labelLen",
																	"nameLocation": "828:8:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2303,
																	"src": "820:16:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2284,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "820:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2290,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2288,
																		"name": "idx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2273,
																		"src": "854:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2286,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2265,
																		"src": "839:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "844:9:5",
																	"memberName": "readUint8",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 773,
																	"src": "839:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory,uint256) pure returns (uint8)"
																	}
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "839:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "820:38:5"
														},
														{
															"expression": {
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2291,
																	"name": "idx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2273,
																	"src": "873:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2292,
																		"name": "labelLen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2285,
																		"src": "880:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "891:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "880:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "873:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2296,
															"nodeType": "ExpressionStatement",
															"src": "873:19:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2297,
																	"name": "labelLen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "911:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "923:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "911:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2302,
															"nodeType": "IfStatement",
															"src": "907:59:5",
															"trueBody": {
																"id": 2301,
																"nodeType": "Block",
																"src": "926:40:5",
																"statements": [
																	{
																		"id": 2300,
																		"nodeType": "Break",
																		"src": "945:5:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "759:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 2304,
												"nodeType": "WhileStatement",
												"src": "752:225:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2305,
														"name": "idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2273,
														"src": "994:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2306,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2267,
														"src": "1000:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "994:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2271,
												"id": 2308,
												"nodeType": "Return",
												"src": "987:19:5"
											}
										]
									},
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "324:268:5",
										"text": " @dev Returns the number of bytes in the DNS name at 'offset' in 'self'.\n @param self The byte array to read a name from.\n @param offset The offset to start reading at.\n @return The length of the DNS name at 'offset', in bytes."
									},
									"id": 2310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nameLength",
									"nameLocation": "607:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "641:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "628:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "628:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "664:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "656:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:60:5"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2310,
												"src": "701:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "700:9:5"
									},
									"scope": 3351,
									"src": "598:416:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "1371:102:5",
										"statements": [
											{
												"assignments": [
													2321
												],
												"declarations": [
													{
														"constant": false,
														"id": 2321,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "1390:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 2333,
														"src": "1382:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2320,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1382:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2326,
												"initialValue": {
													"arguments": [
														{
															"id": 2323,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "1407:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2324,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "1413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2322,
														"name": "nameLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2310,
														"src": "1396:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint256)"
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1382:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2329,
															"name": "offset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "1453:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2330,
															"name": "len",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2321,
															"src": "1461:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2327,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "1438:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1443:9:5",
														"memberName": "substring",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "1438:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2319,
												"id": 2332,
												"nodeType": "Return",
												"src": "1431:34:5"
											}
										]
									},
									"documentation": {
										"id": 2311,
										"nodeType": "StructuredDocumentation",
										"src": "1022:224:5",
										"text": " @dev Returns a DNS format name at the specified offset of self.\n @param self The byte array to read a name from.\n @param offset The offset to start reading at.\n @return ret The name."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readName",
									"nameLocation": "1261:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1293:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1280:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1280:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1316:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1308:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:60:5"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "1366:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1353:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2317,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1353:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:18:5"
									},
									"scope": 3351,
									"src": "1252:221:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "1878:328:5",
										"statements": [
											{
												"assignments": [
													2345
												],
												"declarations": [
													{
														"constant": false,
														"id": 2345,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "1897:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "1889:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1889:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2347,
												"initialValue": {
													"hexValue": "30",
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1905:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1889:17:5"
											},
											{
												"body": {
													"id": 2379,
													"nodeType": "Block",
													"src": "1930:246:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2350,
																			"name": "offset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "1952:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"id": 2351,
																				"name": "self",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "1961:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1966:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "1961:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1952:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2349,
																	"name": "assert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967293,
																	"src": "1945:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1945:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2355,
															"nodeType": "ExpressionStatement",
															"src": "1945:28:5"
														},
														{
															"assignments": [
																2357
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2357,
																	"mutability": "mutable",
																	"name": "labelLen",
																	"nameLocation": "1996:8:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 2379,
																	"src": "1988:16:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2356,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1988:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2362,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2360,
																		"name": "offset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "2022:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2358,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "2007:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2012:9:5",
																	"memberName": "readUint8",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 773,
																	"src": "2007:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory,uint256) pure returns (uint8)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2007:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1988:41:5"
														},
														{
															"expression": {
																"id": 2367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2363,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "2044:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2364,
																		"name": "labelLen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2357,
																		"src": "2054:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2065:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2054:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2044:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2368,
															"nodeType": "ExpressionStatement",
															"src": "2044:22:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2369,
																	"name": "labelLen",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2357,
																	"src": "2085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2097:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2085:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2374,
															"nodeType": "IfStatement",
															"src": "2081:59:5",
															"trueBody": {
																"id": 2373,
																"nodeType": "Block",
																"src": "2100:40:5",
																"statements": [
																	{
																		"id": 2372,
																		"nodeType": "Break",
																		"src": "2119:5:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2375,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2345,
																	"src": "2154:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2163:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2154:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2378,
															"nodeType": "ExpressionStatement",
															"src": "2154:10:5"
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1924:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 2380,
												"nodeType": "WhileStatement",
												"src": "1917:259:5"
											},
											{
												"expression": {
													"id": 2381,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2345,
													"src": "2193:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2343,
												"id": 2382,
												"nodeType": "Return",
												"src": "2186:12:5"
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "1481:279:5",
										"text": " @dev Returns the number of labels in the DNS name at 'offset' in 'self'.\n @param self The byte array to read a name from.\n @param offset The offset to start reading at.\n @return The number of labels in the DNS name at 'offset', in bytes."
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "labelCount",
									"nameLocation": "1775:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "1809:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1796:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1796:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1832:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1824:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1785:60:5"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "1869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1868:9:5"
									},
									"scope": 3351,
									"src": "1766:440:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2387,
									"mutability": "constant",
									"name": "RRSIG_TYPE",
									"nameLocation": "2231:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2214:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2214:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2386,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2244:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2390,
									"mutability": "constant",
									"name": "RRSIG_ALGORITHM",
									"nameLocation": "2269:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2252:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2252:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2389,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2287:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2393,
									"mutability": "constant",
									"name": "RRSIG_LABELS",
									"nameLocation": "2312:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2295:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2295:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2392,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2327:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2396,
									"mutability": "constant",
									"name": "RRSIG_TTL",
									"nameLocation": "2352:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2335:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2394,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 2395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2364:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2399,
									"mutability": "constant",
									"name": "RRSIG_EXPIRATION",
									"nameLocation": "2389:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2372:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2397,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2372:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "38",
										"id": 2398,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2408:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_8_by_1",
											"typeString": "int_const 8"
										},
										"value": "8"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2402,
									"mutability": "constant",
									"name": "RRSIG_INCEPTION",
									"nameLocation": "2433:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2416:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2416:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3132",
										"id": 2401,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2451:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_12_by_1",
											"typeString": "int_const 12"
										},
										"value": "12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2405,
									"mutability": "constant",
									"name": "RRSIG_KEY_TAG",
									"nameLocation": "2477:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2460:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2403,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2460:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3136",
										"id": 2404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2493:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2408,
									"mutability": "constant",
									"name": "RRSIG_SIGNER_NAME",
									"nameLocation": "2519:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "2502:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2502:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 2407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2539:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "RRUtils.SignedSet",
									"id": 2429,
									"members": [
										{
											"constant": false,
											"id": 2410,
											"mutability": "mutable",
											"name": "typeCovered",
											"nameLocation": "2585:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2578:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2409,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2578:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2412,
											"mutability": "mutable",
											"name": "algorithm",
											"nameLocation": "2613:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2607:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2411,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2607:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2414,
											"mutability": "mutable",
											"name": "labels",
											"nameLocation": "2639:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2633:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2413,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2633:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2416,
											"mutability": "mutable",
											"name": "ttl",
											"nameLocation": "2663:3:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2656:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2415,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2656:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2418,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "2684:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2677:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2417,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2677:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2420,
											"mutability": "mutable",
											"name": "inception",
											"nameLocation": "2712:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2705:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2419,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2705:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2422,
											"mutability": "mutable",
											"name": "keytag",
											"nameLocation": "2739:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2732:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2421,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "2732:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2424,
											"mutability": "mutable",
											"name": "signerName",
											"nameLocation": "2762:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2756:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2423,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2756:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2426,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2789:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2783:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2425,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2783:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2428,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "2810:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 2429,
											"src": "2804:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2427,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2804:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SignedSet",
									"nameLocation": "2557:9:5",
									"nodeType": "StructDefinition",
									"scope": 3351,
									"src": "2550:272:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2530,
										"nodeType": "Block",
										"src": "2934:640:5",
										"statements": [
											{
												"expression": {
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2437,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "2945:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2950:11:5",
														"memberName": "typeCovered",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2410,
														"src": "2945:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2442,
																"name": "RRSIG_TYPE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2387,
																"src": "2980:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2440,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "2964:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2969:10:5",
															"memberName": "readUint16",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "2964:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint16)"
															}
														},
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2964:27:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "2945:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "2945:46:5"
											},
											{
												"expression": {
													"id": 2453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2446,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3002:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3007:9:5",
														"memberName": "algorithm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2412,
														"src": "3002:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2451,
																"name": "RRSIG_ALGORITHM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "3034:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2449,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3019:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3024:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "3019:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 2452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3019:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3002:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2454,
												"nodeType": "ExpressionStatement",
												"src": "3002:48:5"
											},
											{
												"expression": {
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2455,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3061:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2457,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3066:6:5",
														"memberName": "labels",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2414,
														"src": "3061:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2460,
																"name": "RRSIG_LABELS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "3090:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2458,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3075:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3080:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "3075:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 2461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3075:28:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3061:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2463,
												"nodeType": "ExpressionStatement",
												"src": "3061:42:5"
											},
											{
												"expression": {
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2464,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3114:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3119:3:5",
														"memberName": "ttl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2416,
														"src": "3114:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2469,
																"name": "RRSIG_TTL",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "3141:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2467,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3125:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3130:10:5",
															"memberName": "readUint32",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "3125:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint32_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint32)"
															}
														},
														"id": 2470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3125:26:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3114:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2472,
												"nodeType": "ExpressionStatement",
												"src": "3114:37:5"
											},
											{
												"expression": {
													"id": 2480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2473,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3162:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3167:10:5",
														"memberName": "expiration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2418,
														"src": "3162:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2478,
																"name": "RRSIG_EXPIRATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "3196:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2476,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3180:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3185:10:5",
															"memberName": "readUint32",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "3180:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint32_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint32)"
															}
														},
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3180:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3162:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2481,
												"nodeType": "ExpressionStatement",
												"src": "3162:51:5"
											},
											{
												"expression": {
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2482,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3224:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2484,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3229:9:5",
														"memberName": "inception",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2420,
														"src": "3224:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2487,
																"name": "RRSIG_INCEPTION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2402,
																"src": "3257:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2485,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3241:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3246:10:5",
															"memberName": "readUint32",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "3241:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint32_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint32)"
															}
														},
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3241:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "3224:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "3224:49:5"
											},
											{
												"expression": {
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2491,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3284:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3289:6:5",
														"memberName": "keytag",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2422,
														"src": "3284:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2496,
																"name": "RRSIG_KEY_TAG",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2405,
																"src": "3314:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2494,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3298:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3303:10:5",
															"memberName": "readUint16",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "3298:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint16)"
															}
														},
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3298:30:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3284:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2499,
												"nodeType": "ExpressionStatement",
												"src": "3284:44:5"
											},
											{
												"expression": {
													"id": 2507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2500,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3339:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3344:10:5",
														"memberName": "signerName",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2424,
														"src": "3339:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2504,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3366:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2505,
																"name": "RRSIG_SIGNER_NAME",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2408,
																"src": "3372:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2503,
															"name": "readName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "3357:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (bytes memory)"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3357:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "3339:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2508,
												"nodeType": "ExpressionStatement",
												"src": "3339:51:5"
											},
											{
												"expression": {
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2509,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "3401:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																"typeString": "struct RRUtils.SignedSet memory"
															}
														},
														"id": 2511,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3406:4:5",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2426,
														"src": "3401:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2514,
																	"name": "RRSIG_SIGNER_NAME",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2408,
																	"src": "3442:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 2515,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "3462:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		"id": 2516,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3467:10:5",
																		"memberName": "signerName",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2424,
																		"src": "3462:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3478:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3462:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3442:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2519,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2431,
																			"src": "3499:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3504:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "3499:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2521,
																		"name": "RRSIG_SIGNER_NAME",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2408,
																		"src": "3513:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3499:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 2523,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2435,
																			"src": "3533:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																				"typeString": "struct RRUtils.SignedSet memory"
																			}
																		},
																		"id": 2524,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3538:10:5",
																		"memberName": "signerName",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2424,
																		"src": "3533:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3549:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3533:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3499:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2512,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2431,
																"src": "3413:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3418:9:5",
															"memberName": "substring",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 966,
															"src": "3413:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
															}
														},
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3413:153:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "3401:165:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "3401:165:5"
											}
										]
									},
									"id": 2531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readSignedSet",
									"nameLocation": "2839:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2876:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "2863:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2863:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2852:35:5"
									},
									"returnParameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "2928:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "2911:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 2434,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2433,
														"name": "SignedSet",
														"nameLocations": [
															"2911:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "2911:9:5"
													},
													"referencedDeclaration": 2429,
													"src": "2911:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2910:23:5"
									},
									"scope": 3351,
									"src": "2830:744:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "3677:51:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2541,
																"name": "rrset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "3706:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
																	"typeString": "struct RRUtils.SignedSet memory"
																}
															},
															"id": 2542,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3712:4:5",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2426,
															"src": "3706:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3718:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2540,
														"name": "iterateRRs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2590,
														"src": "3695:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_RRIterator_$2562_memory_ptr_$",
															"typeString": "function (bytes memory,uint256) pure returns (struct RRUtils.RRIterator memory)"
														}
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3695:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
														"typeString": "struct RRUtils.RRIterator memory"
													}
												},
												"functionReturnParameters": 2539,
												"id": 2545,
												"nodeType": "Return",
												"src": "3688:32:5"
											}
										]
									},
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rrs",
									"nameLocation": "3591:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "rrset",
												"nameLocation": "3622:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "3605:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SignedSet_$2429_memory_ptr",
													"typeString": "struct RRUtils.SignedSet"
												},
												"typeName": {
													"id": 2533,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2532,
														"name": "SignedSet",
														"nameLocations": [
															"3605:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2429,
														"src": "3605:9:5"
													},
													"referencedDeclaration": 2429,
													"src": "3605:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SignedSet_$2429_storage_ptr",
														"typeString": "struct RRUtils.SignedSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:40:5"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "3658:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2536,
														"name": "RRIterator",
														"nameLocations": [
															"3658:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "3658:10:5"
													},
													"referencedDeclaration": 2562,
													"src": "3658:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3657:19:5"
									},
									"scope": 3351,
									"src": "3582:146:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "RRUtils.RRIterator",
									"id": 2562,
									"members": [
										{
											"constant": false,
											"id": 2549,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "3837:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3831:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2548,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3831:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2551,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "3860:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3852:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2550,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3852:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2553,
											"mutability": "mutable",
											"name": "dnstype",
											"nameLocation": "3884:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3877:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2552,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "3877:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2555,
											"mutability": "mutable",
											"name": "class",
											"nameLocation": "3909:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3902:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2554,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "3902:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2557,
											"mutability": "mutable",
											"name": "ttl",
											"nameLocation": "3932:3:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3925:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 2556,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "3925:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2559,
											"mutability": "mutable",
											"name": "rdataOffset",
											"nameLocation": "3954:11:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3946:19:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2558,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3946:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2561,
											"mutability": "mutable",
											"name": "nextOffset",
											"nameLocation": "3984:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 2562,
											"src": "3976:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2560,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3976:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RRIterator",
									"nameLocation": "3809:10:5",
									"nodeType": "StructDefinition",
									"scope": 3351,
									"src": "3802:200:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2589,
										"nodeType": "Block",
										"src": "4351:88:5",
										"statements": [
											{
												"expression": {
													"id": 2577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2573,
															"name": "ret",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "4362:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2575,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4366:4:5",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2549,
														"src": "4362:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2576,
														"name": "self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2565,
														"src": "4373:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "4362:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2578,
												"nodeType": "ExpressionStatement",
												"src": "4362:15:5"
											},
											{
												"expression": {
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2579,
															"name": "ret",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "4388:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2581,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4392:10:5",
														"memberName": "nextOffset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2561,
														"src": "4388:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2582,
														"name": "offset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2567,
														"src": "4405:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4388:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2584,
												"nodeType": "ExpressionStatement",
												"src": "4388:23:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2586,
															"name": "ret",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2571,
															"src": "4427:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														],
														"id": 2585,
														"name": "next",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2711,
														"src": "4422:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_RRIterator_$2562_memory_ptr_$returns$__$",
															"typeString": "function (struct RRUtils.RRIterator memory) pure"
														}
													},
													"id": 2587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4422:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2588,
												"nodeType": "ExpressionStatement",
												"src": "4422:9:5"
											}
										]
									},
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "4010:209:5",
										"text": " @dev Begins iterating over resource records.\n @param self The byte string to read from.\n @param offset The offset to start reading at.\n @return ret An iterator object."
									},
									"id": 2590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "iterateRRs",
									"nameLocation": "4234:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "4268:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "4255:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4255:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "4291:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "4283:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:60:5"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "4346:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 2590,
												"src": "4328:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2569,
														"name": "RRIterator",
														"nameLocations": [
															"4328:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "4328:10:5"
													},
													"referencedDeclaration": 2562,
													"src": "4328:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:23:5"
									},
									"scope": 3351,
									"src": "4225:214:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2606,
										"nodeType": "Block",
										"src": "4688:57:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2599,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2594,
															"src": "4706:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2600,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4711:6:5",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2551,
														"src": "4706:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2601,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "4721:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4726:4:5",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2549,
															"src": "4721:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4731:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4721:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4706:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2598,
												"id": 2605,
												"nodeType": "Return",
												"src": "4699:38:5"
											}
										]
									},
									"documentation": {
										"id": 2591,
										"nodeType": "StructuredDocumentation",
										"src": "4447:168:5",
										"text": " @dev Returns true iff there are more RRs to iterate.\n @param iter The iterator to check.\n @return True iff the iterator has finished."
									},
									"id": 2607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "done",
									"nameLocation": "4630:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "iter",
												"nameLocation": "4653:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4635:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2593,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2592,
														"name": "RRIterator",
														"nameLocations": [
															"4635:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "4635:10:5"
													},
													"referencedDeclaration": 2562,
													"src": "4635:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:24:5"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "4682:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4682:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4681:6:5"
									},
									"scope": 3351,
									"src": "4621:124:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2710,
										"nodeType": "Block",
										"src": "4929:658:5",
										"statements": [
											{
												"expression": {
													"id": 2619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2614,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "4940:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4945:6:5",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2551,
														"src": "4940:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2617,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "4954:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2618,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4959:10:5",
														"memberName": "nextOffset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2561,
														"src": "4954:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4940:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2620,
												"nodeType": "ExpressionStatement",
												"src": "4940:29:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2621,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "4984:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4989:6:5",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2551,
														"src": "4984:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2623,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "4999:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5004:4:5",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2549,
															"src": "4999:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5009:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4999:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4984:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2629,
												"nodeType": "IfStatement",
												"src": "4980:70:5",
												"trueBody": {
													"id": 2628,
													"nodeType": "Block",
													"src": "5017:33:5",
													"statements": [
														{
															"functionReturnParameters": 2613,
															"id": 2627,
															"nodeType": "Return",
															"src": "5032:7:5"
														}
													]
												}
											},
											{
												"assignments": [
													2631
												],
												"declarations": [
													{
														"constant": false,
														"id": 2631,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "5096:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 2710,
														"src": "5088:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5088:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2632,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "5102:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5107:6:5",
														"memberName": "offset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2551,
														"src": "5102:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2635,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "5127:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5132:4:5",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2549,
																"src": "5127:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"expression": {
																	"id": 2637,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "5138:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2638,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5143:6:5",
																"memberName": "offset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2551,
																"src": "5138:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2634,
															"name": "nameLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2310,
															"src": "5116:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint256)"
															}
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5116:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5102:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5088:62:5"
											},
											{
												"expression": {
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2642,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "5201:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5206:7:5",
														"memberName": "dnstype",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2553,
														"src": "5201:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2648,
																"name": "off",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2631,
																"src": "5237:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2645,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "5216:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5221:4:5",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2549,
																"src": "5216:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5226:10:5",
															"memberName": "readUint16",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "5216:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint16)"
															}
														},
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5216:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5201:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2651,
												"nodeType": "ExpressionStatement",
												"src": "5201:40:5"
											},
											{
												"expression": {
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2652,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "5252:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 2653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5252:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2655,
												"nodeType": "ExpressionStatement",
												"src": "5252:8:5"
											},
											{
												"expression": {
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2656,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "5271:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2658,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5276:5:5",
														"memberName": "class",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2555,
														"src": "5271:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2662,
																"name": "off",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2631,
																"src": "5305:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2659,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "5284:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5289:4:5",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2549,
																"src": "5284:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5294:10:5",
															"memberName": "readUint16",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "5284:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint16)"
															}
														},
														"id": 2663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5284:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "5271:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "5271:38:5"
											},
											{
												"expression": {
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2666,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "5320:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 2667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5327:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5320:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "5320:8:5"
											},
											{
												"expression": {
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2670,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "5339:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5344:3:5",
														"memberName": "ttl",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2557,
														"src": "5339:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2676,
																"name": "off",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2631,
																"src": "5371:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2673,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "5350:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5355:4:5",
																"memberName": "data",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2549,
																"src": "5350:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5360:10:5",
															"memberName": "readUint32",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 813,
															"src": "5350:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint32_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint32)"
															}
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5350:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "5339:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2679,
												"nodeType": "ExpressionStatement",
												"src": "5339:36:5"
											},
											{
												"expression": {
													"id": 2682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2680,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "5386:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 2681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5386:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2683,
												"nodeType": "ExpressionStatement",
												"src": "5386:8:5"
											},
											{
												"assignments": [
													2685
												],
												"declarations": [
													{
														"constant": false,
														"id": 2685,
														"mutability": "mutable",
														"name": "rdataLength",
														"nameLocation": "5442:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 2710,
														"src": "5434:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5434:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2691,
												"initialValue": {
													"arguments": [
														{
															"id": 2689,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "5477:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2686,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2611,
																"src": "5456:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5461:4:5",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2549,
															"src": "5456:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5466:10:5",
														"memberName": "readUint16",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "5456:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint16)"
														}
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5456:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5434:47:5"
											},
											{
												"expression": {
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2692,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "5492:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5499:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5492:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "5492:8:5"
											},
											{
												"expression": {
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2696,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "5511:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2698,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5516:11:5",
														"memberName": "rdataOffset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2559,
														"src": "5511:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2699,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2631,
														"src": "5530:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5511:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2701,
												"nodeType": "ExpressionStatement",
												"src": "5511:22:5"
											},
											{
												"expression": {
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2702,
															"name": "iter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "5544:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																"typeString": "struct RRUtils.RRIterator memory"
															}
														},
														"id": 2704,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5549:10:5",
														"memberName": "nextOffset",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2561,
														"src": "5544:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2705,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "5562:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2706,
															"name": "rdataLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2685,
															"src": "5568:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5562:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5544:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2709,
												"nodeType": "ExpressionStatement",
												"src": "5544:35:5"
											}
										]
									},
									"documentation": {
										"id": 2608,
										"nodeType": "StructuredDocumentation",
										"src": "4753:118:5",
										"text": " @dev Moves the iterator to the next resource record.\n @param iter The iterator to advance."
									},
									"id": 2711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "next",
									"nameLocation": "4886:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "iter",
												"nameLocation": "4909:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2711,
												"src": "4891:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2609,
														"name": "RRIterator",
														"nameLocations": [
															"4891:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "4891:10:5"
													},
													"referencedDeclaration": 2562,
													"src": "4891:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4890:24:5"
									},
									"returnParameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4929:0:5"
									},
									"scope": 3351,
									"src": "4877:710:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "5849:156:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2723,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "5918:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5923:6:5",
															"memberName": "offset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2551,
															"src": "5918:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2726,
																		"name": "iter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2715,
																		"src": "5959:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 2727,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5964:4:5",
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2549,
																	"src": "5959:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"expression": {
																		"id": 2728,
																		"name": "iter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2715,
																		"src": "5970:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																			"typeString": "struct RRUtils.RRIterator memory"
																		}
																	},
																	"id": 2729,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5975:6:5",
																	"memberName": "offset",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2551,
																	"src": "5970:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2725,
																"name": "nameLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "5948:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																}
															},
															"id": 2730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5948:34:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2720,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2715,
																"src": "5880:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2721,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5885:4:5",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2549,
															"src": "5880:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5890:9:5",
														"memberName": "substring",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "5880:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5880:117:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2719,
												"id": 2732,
												"nodeType": "Return",
												"src": "5860:137:5"
											}
										]
									},
									"documentation": {
										"id": 2712,
										"nodeType": "StructuredDocumentation",
										"src": "5595:173:5",
										"text": " @dev Returns the name of the current record.\n @param iter The iterator.\n @return A new bytes object containing the owner name from the RR."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "5783:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2715,
												"mutability": "mutable",
												"name": "iter",
												"nameLocation": "5806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "5788:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2713,
														"name": "RRIterator",
														"nameLocations": [
															"5788:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "5788:10:5"
													},
													"referencedDeclaration": 2562,
													"src": "5788:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5787:24:5"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "5835:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2717,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5835:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5834:14:5"
									},
									"scope": 3351,
									"src": "5774:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2755,
										"nodeType": "Block",
										"src": "6281:161:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2746,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2738,
																"src": "6350:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2747,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6355:11:5",
															"memberName": "rdataOffset",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2559,
															"src": "6350:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2748,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2738,
																	"src": "6385:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2749,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6390:10:5",
																"memberName": "nextOffset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2561,
																"src": "6385:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 2750,
																	"name": "iter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2738,
																	"src": "6403:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																		"typeString": "struct RRUtils.RRIterator memory"
																	}
																},
																"id": 2751,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6408:11:5",
																"memberName": "rdataOffset",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2559,
																"src": "6403:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6385:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2743,
																"name": "iter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2738,
																"src": "6312:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
																	"typeString": "struct RRUtils.RRIterator memory"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6317:4:5",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2549,
															"src": "6312:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6322:9:5",
														"memberName": "substring",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "6312:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 2753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6312:122:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2742,
												"id": 2754,
												"nodeType": "Return",
												"src": "6292:142:5"
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "6013:170:5",
										"text": " @dev Returns the rdata portion of the current record.\n @param iter The iterator.\n @return A new bytes object containing the RR's RDATA."
									},
									"id": 2756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rdata",
									"nameLocation": "6198:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "iter",
												"nameLocation": "6232:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "6214:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RRIterator_$2562_memory_ptr",
													"typeString": "struct RRUtils.RRIterator"
												},
												"typeName": {
													"id": 2737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2736,
														"name": "RRIterator",
														"nameLocations": [
															"6214:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2562,
														"src": "6214:10:5"
													},
													"referencedDeclaration": 2562,
													"src": "6214:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RRIterator_$2562_storage_ptr",
														"typeString": "struct RRUtils.RRIterator"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6203:40:5"
									},
									"returnParameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2756,
												"src": "6267:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2740,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6267:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:14:5"
									},
									"scope": 3351,
									"src": "6189:253:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2759,
									"mutability": "constant",
									"name": "DNSKEY_FLAGS",
									"nameLocation": "6467:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "6450:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2757,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6450:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2758,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6482:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2762,
									"mutability": "constant",
									"name": "DNSKEY_PROTOCOL",
									"nameLocation": "6507:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "6490:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6490:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2761,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6525:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2765,
									"mutability": "constant",
									"name": "DNSKEY_ALGORITHM",
									"nameLocation": "6550:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "6533:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2763,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6533:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2764,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6569:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2768,
									"mutability": "constant",
									"name": "DNSKEY_PUBKEY",
									"nameLocation": "6594:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "6577:34:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2766,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6577:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 2767,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6610:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "RRUtils.DNSKEY",
									"id": 2777,
									"members": [
										{
											"constant": false,
											"id": 2770,
											"mutability": "mutable",
											"name": "flags",
											"nameLocation": "6652:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 2777,
											"src": "6645:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2769,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "6645:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2772,
											"mutability": "mutable",
											"name": "protocol",
											"nameLocation": "6674:8:5",
											"nodeType": "VariableDeclaration",
											"scope": 2777,
											"src": "6668:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2771,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6668:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2774,
											"mutability": "mutable",
											"name": "algorithm",
											"nameLocation": "6699:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 2777,
											"src": "6693:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2773,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "6693:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2776,
											"mutability": "mutable",
											"name": "publicKey",
											"nameLocation": "6725:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 2777,
											"src": "6719:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2775,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "6719:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DNSKEY",
									"nameLocation": "6627:6:5",
									"nodeType": "StructDefinition",
									"scope": 3351,
									"src": "6620:122:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2836,
										"nodeType": "Block",
										"src": "6898:333:5",
										"statements": [
											{
												"expression": {
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2789,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "6909:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 2791,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6914:5:5",
														"memberName": "flags",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2770,
														"src": "6909:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2794,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "6938:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2795,
																	"name": "DNSKEY_FLAGS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2759,
																	"src": "6947:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6938:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2792,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "6922:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6927:10:5",
															"memberName": "readUint16",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "6922:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint16)"
															}
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6922:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "6909:51:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2799,
												"nodeType": "ExpressionStatement",
												"src": "6909:51:5"
											},
											{
												"expression": {
													"id": 2809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2800,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "6971:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 2802,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6976:8:5",
														"memberName": "protocol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2772,
														"src": "6971:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2805,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "7002:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2806,
																	"name": "DNSKEY_PROTOCOL",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2762,
																	"src": "7011:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7002:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2803,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "6987:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6992:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "6987:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 2808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6987:40:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6971:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2810,
												"nodeType": "ExpressionStatement",
												"src": "6971:56:5"
											},
											{
												"expression": {
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2811,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "7038:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 2813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7043:9:5",
														"memberName": "algorithm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2774,
														"src": "7038:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2816,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "7070:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2817,
																	"name": "DNSKEY_ALGORITHM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2765,
																	"src": "7079:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7070:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2814,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "7055:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7060:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "7055:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 2819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7055:41:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7038:58:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2821,
												"nodeType": "ExpressionStatement",
												"src": "7038:58:5"
											},
											{
												"expression": {
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2822,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "7107:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
																"typeString": "struct RRUtils.DNSKEY memory"
															}
														},
														"id": 2824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7112:9:5",
														"memberName": "publicKey",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2776,
														"src": "7107:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2827,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2781,
																	"src": "7153:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2828,
																	"name": "DNSKEY_PUBKEY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "7162:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7153:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2830,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2783,
																	"src": "7190:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2831,
																	"name": "DNSKEY_PUBKEY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2768,
																	"src": "7199:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7190:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2825,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2779,
																"src": "7124:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7129:9:5",
															"memberName": "substring",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 966,
															"src": "7124:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
															}
														},
														"id": 2833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7124:99:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "7107:116:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2835,
												"nodeType": "ExpressionStatement",
												"src": "7107:116:5"
											}
										]
									},
									"id": 2837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readDNSKEY",
									"nameLocation": "6759:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2779,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6793:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "6780:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "6816:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "6808:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6808:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2783,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "6841:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "6833:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6769:85:5"
									},
									"returnParameters": {
										"id": 2788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "6892:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "6878:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DNSKEY_$2777_memory_ptr",
													"typeString": "struct RRUtils.DNSKEY"
												},
												"typeName": {
													"id": 2786,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2785,
														"name": "DNSKEY",
														"nameLocations": [
															"6878:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2777,
														"src": "6878:6:5"
													},
													"referencedDeclaration": 2777,
													"src": "6878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DNSKEY_$2777_storage_ptr",
														"typeString": "struct RRUtils.DNSKEY"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6877:20:5"
									},
									"scope": 3351,
									"src": "6750:481:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2840,
									"mutability": "constant",
									"name": "DS_KEY_TAG",
									"nameLocation": "7256:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "7239:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2838,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7239:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 2839,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7269:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2843,
									"mutability": "constant",
									"name": "DS_ALGORITHM",
									"nameLocation": "7294:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "7277:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2841,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7277:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 2842,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7309:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2846,
									"mutability": "constant",
									"name": "DS_DIGEST_TYPE",
									"nameLocation": "7334:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "7317:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2844,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7317:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2845,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7351:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 2849,
									"mutability": "constant",
									"name": "DS_DIGEST",
									"nameLocation": "7376:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 3351,
									"src": "7359:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2847,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7359:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 2848,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7388:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "RRUtils.DS",
									"id": 2858,
									"members": [
										{
											"constant": false,
											"id": 2851,
											"mutability": "mutable",
											"name": "keytag",
											"nameLocation": "7426:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2858,
											"src": "7419:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 2850,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "7419:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2853,
											"mutability": "mutable",
											"name": "algorithm",
											"nameLocation": "7449:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 2858,
											"src": "7443:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2852,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "7443:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2855,
											"mutability": "mutable",
											"name": "digestType",
											"nameLocation": "7475:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 2858,
											"src": "7469:16:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2854,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "7469:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2857,
											"mutability": "mutable",
											"name": "digest",
											"nameLocation": "7502:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 2858,
											"src": "7496:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2856,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "7496:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DS",
									"nameLocation": "7405:2:5",
									"nodeType": "StructDefinition",
									"scope": 3351,
									"src": "7398:118:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "7664:281:5",
										"statements": [
											{
												"expression": {
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2870,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "7675:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																"typeString": "struct RRUtils.DS memory"
															}
														},
														"id": 2872,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7680:6:5",
														"memberName": "keytag",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2851,
														"src": "7675:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2875,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "7705:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2876,
																	"name": "DS_KEY_TAG",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2840,
																	"src": "7714:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7705:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2873,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2860,
																"src": "7689:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7694:10:5",
															"memberName": "readUint16",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "7689:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint16_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint16)"
															}
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7689:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "7675:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 2880,
												"nodeType": "ExpressionStatement",
												"src": "7675:50:5"
											},
											{
												"expression": {
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2881,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "7736:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																"typeString": "struct RRUtils.DS memory"
															}
														},
														"id": 2883,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7741:9:5",
														"memberName": "algorithm",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2853,
														"src": "7736:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2886,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "7768:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2887,
																	"name": "DS_ALGORITHM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2843,
																	"src": "7777:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7768:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2884,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2860,
																"src": "7753:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7758:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "7753:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7753:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7736:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2891,
												"nodeType": "ExpressionStatement",
												"src": "7736:54:5"
											},
											{
												"expression": {
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2892,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "7801:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																"typeString": "struct RRUtils.DS memory"
															}
														},
														"id": 2894,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7806:10:5",
														"memberName": "digestType",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2855,
														"src": "7801:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2897,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "7834:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2898,
																	"name": "DS_DIGEST_TYPE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2846,
																	"src": "7843:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7834:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2895,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2860,
																"src": "7819:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7824:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "7819:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7819:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "7801:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2902,
												"nodeType": "ExpressionStatement",
												"src": "7801:57:5"
											},
											{
												"expression": {
													"id": 2915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2903,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "7869:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
																"typeString": "struct RRUtils.DS memory"
															}
														},
														"id": 2905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7874:6:5",
														"memberName": "digest",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2857,
														"src": "7869:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2910,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2908,
																	"name": "offset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2862,
																	"src": "7898:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2909,
																	"name": "DS_DIGEST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2849,
																	"src": "7907:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7898:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2911,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2864,
																	"src": "7918:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2912,
																	"name": "DS_DIGEST",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2849,
																	"src": "7927:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7918:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2906,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2860,
																"src": "7883:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7888:9:5",
															"memberName": "substring",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 966,
															"src": "7883:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
															}
														},
														"id": 2914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7883:54:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "7869:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2916,
												"nodeType": "ExpressionStatement",
												"src": "7869:68:5"
											}
										]
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "readDS",
									"nameLocation": "7533:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7563:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "7550:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7550:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "7586:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "7578:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7578:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "7611:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "7603:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7603:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7539:85:5"
									},
									"returnParameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "7658:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "7648:14:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DS_$2858_memory_ptr",
													"typeString": "struct RRUtils.DS"
												},
												"typeName": {
													"id": 2867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2866,
														"name": "DS",
														"nameLocations": [
															"7648:2:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2858,
														"src": "7648:2:5"
													},
													"referencedDeclaration": 2858,
													"src": "7648:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DS_$2858_storage_ptr",
														"typeString": "struct RRUtils.DS"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7647:16:5"
									},
									"scope": 3351,
									"src": "7524:421:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "8069:296:5",
										"statements": [
											{
												"assignments": [
													2928
												],
												"declarations": [
													{
														"constant": false,
														"id": 2928,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "8088:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "8080:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2927,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8080:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2930,
												"initialValue": {
													"hexValue": "30",
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8094:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8080:15:5"
											},
											{
												"assignments": [
													2932
												],
												"declarations": [
													{
														"constant": false,
														"id": 2932,
														"mutability": "mutable",
														"name": "counts",
														"nameLocation": "8114:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "8106:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2931,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8106:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2937,
												"initialValue": {
													"arguments": [
														{
															"id": 2934,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "8134:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8140:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2933,
														"name": "labelCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "8123:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint256)"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8123:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8106:36:5"
											},
											{
												"assignments": [
													2939
												],
												"declarations": [
													{
														"constant": false,
														"id": 2939,
														"mutability": "mutable",
														"name": "othercounts",
														"nameLocation": "8161:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "8153:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2938,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8153:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2944,
												"initialValue": {
													"arguments": [
														{
															"id": 2941,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "8186:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8193:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2940,
														"name": "labelCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "8175:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint256)"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8175:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8153:42:5"
											},
											{
												"body": {
													"id": 2958,
													"nodeType": "Block",
													"src": "8237:75:5",
													"statements": [
														{
															"expression": {
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2948,
																	"name": "off",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2928,
																	"src": "8252:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2950,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2920,
																			"src": "8267:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 2951,
																			"name": "off",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2928,
																			"src": "8273:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2949,
																		"name": "progress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3166,
																		"src": "8258:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8258:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8252:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2954,
															"nodeType": "ExpressionStatement",
															"src": "8252:25:5"
														},
														{
															"expression": {
																"id": 2956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "8292:8:5",
																"subExpression": {
																	"id": 2955,
																	"name": "counts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2932,
																	"src": "8292:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2957,
															"nodeType": "ExpressionStatement",
															"src": "8292:8:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2945,
														"name": "counts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "8215:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2946,
														"name": "othercounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2939,
														"src": "8224:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8215:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2959,
												"nodeType": "WhileStatement",
												"src": "8208:104:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2962,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "8343:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2963,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "8348:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8355:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 2960,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "8331:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8336:6:5",
														"memberName": "equals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "8331:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,bytes memory,uint256) pure returns (bool)"
														}
													},
													"id": 2965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8331:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2926,
												"id": 2966,
												"nodeType": "Return",
												"src": "8324:33:5"
											}
										]
									},
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isSubdomainOf",
									"nameLocation": "7962:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "7999:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "7986:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2919,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7986:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "8027:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "8014:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8014:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7975:64:5"
									},
									"returnParameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "8063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8062:6:5"
									},
									"scope": 3351,
									"src": "7953:412:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3122,
										"nodeType": "Block",
										"src": "8490:1381:5",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2979,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "8517:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2977,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "8505:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8510:6:5",
														"memberName": "equals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 756,
														"src": "8505:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory) pure returns (bool)"
														}
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8505:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2984,
												"nodeType": "IfStatement",
												"src": "8501:59:5",
												"trueBody": {
													"id": 2983,
													"nodeType": "Block",
													"src": "8525:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2976,
															"id": 2982,
															"nodeType": "Return",
															"src": "8540:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													2986
												],
												"declarations": [
													{
														"constant": false,
														"id": 2986,
														"mutability": "mutable",
														"name": "off",
														"nameLocation": "8580:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "8572:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2985,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8572:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2987,
												"nodeType": "VariableDeclarationStatement",
												"src": "8572:11:5"
											},
											{
												"assignments": [
													2989
												],
												"declarations": [
													{
														"constant": false,
														"id": 2989,
														"mutability": "mutable",
														"name": "otheroff",
														"nameLocation": "8602:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "8594:16:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8594:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2990,
												"nodeType": "VariableDeclarationStatement",
												"src": "8594:16:5"
											},
											{
												"assignments": [
													2992
												],
												"declarations": [
													{
														"constant": false,
														"id": 2992,
														"mutability": "mutable",
														"name": "prevoff",
														"nameLocation": "8629:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "8621:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8621:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2993,
												"nodeType": "VariableDeclarationStatement",
												"src": "8621:15:5"
											},
											{
												"assignments": [
													2995
												],
												"declarations": [
													{
														"constant": false,
														"id": 2995,
														"mutability": "mutable",
														"name": "otherprevoff",
														"nameLocation": "8655:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "8647:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2994,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2996,
												"nodeType": "VariableDeclarationStatement",
												"src": "8647:20:5"
											},
											{
												"assignments": [
													2998
												],
												"declarations": [
													{
														"constant": false,
														"id": 2998,
														"mutability": "mutable",
														"name": "counts",
														"nameLocation": "8686:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "8678:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2997,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8678:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3003,
												"initialValue": {
													"arguments": [
														{
															"id": 3000,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "8706:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 3001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8712:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2999,
														"name": "labelCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "8695:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint256)"
														}
													},
													"id": 3002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8695:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8678:36:5"
											},
											{
												"assignments": [
													3005
												],
												"declarations": [
													{
														"constant": false,
														"id": 3005,
														"mutability": "mutable",
														"name": "othercounts",
														"nameLocation": "8733:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 3122,
														"src": "8725:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8725:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3010,
												"initialValue": {
													"arguments": [
														{
															"id": 3007,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "8758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8765:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 3006,
														"name": "labelCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "8747:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) pure returns (uint256)"
														}
													},
													"id": 3009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8747:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8725:42:5"
											},
											{
												"body": {
													"id": 3028,
													"nodeType": "Block",
													"src": "8903:103:5",
													"statements": [
														{
															"expression": {
																"id": 3016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3014,
																	"name": "prevoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2992,
																	"src": "8918:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3015,
																	"name": "off",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "8928:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8918:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3017,
															"nodeType": "ExpressionStatement",
															"src": "8918:13:5"
														},
														{
															"expression": {
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3018,
																	"name": "off",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "8946:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3020,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "8961:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 3021,
																			"name": "off",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2986,
																			"src": "8967:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3019,
																		"name": "progress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3166,
																		"src": "8952:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8952:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8946:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3024,
															"nodeType": "ExpressionStatement",
															"src": "8946:25:5"
														},
														{
															"expression": {
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "8986:8:5",
																"subExpression": {
																	"id": 3025,
																	"name": "counts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2998,
																	"src": "8986:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3027,
															"nodeType": "ExpressionStatement",
															"src": "8986:8:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3011,
														"name": "counts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "8881:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3012,
														"name": "othercounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "8890:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8881:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3029,
												"nodeType": "WhileStatement",
												"src": "8874:132:5"
											},
											{
												"body": {
													"id": 3047,
													"nodeType": "Block",
													"src": "9047:129:5",
													"statements": [
														{
															"expression": {
																"id": 3035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3033,
																	"name": "otherprevoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "9062:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3034,
																	"name": "otheroff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "9077:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9062:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3036,
															"nodeType": "ExpressionStatement",
															"src": "9062:23:5"
														},
														{
															"expression": {
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3037,
																	"name": "otheroff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "9100:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3039,
																			"name": "other",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2972,
																			"src": "9120:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 3040,
																			"name": "otheroff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "9127:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3038,
																		"name": "progress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3166,
																		"src": "9111:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9111:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9100:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3043,
															"nodeType": "ExpressionStatement",
															"src": "9100:36:5"
														},
														{
															"expression": {
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "--",
																"prefix": false,
																"src": "9151:13:5",
																"subExpression": {
																	"id": 3044,
																	"name": "othercounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3005,
																	"src": "9151:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3046,
															"nodeType": "ExpressionStatement",
															"src": "9151:13:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3030,
														"name": "othercounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "9025:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3031,
														"name": "counts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "9039:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9025:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3048,
												"nodeType": "WhileStatement",
												"src": "9018:158:5"
											},
											{
												"body": {
													"id": 3086,
													"nodeType": "Block",
													"src": "9304:195:5",
													"statements": [
														{
															"expression": {
																"id": 3062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3060,
																	"name": "prevoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2992,
																	"src": "9319:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3061,
																	"name": "off",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "9329:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9319:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3063,
															"nodeType": "ExpressionStatement",
															"src": "9319:13:5"
														},
														{
															"expression": {
																"id": 3069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3064,
																	"name": "off",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "9347:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3066,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2970,
																			"src": "9362:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 3067,
																			"name": "off",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2986,
																			"src": "9368:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3065,
																		"name": "progress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3166,
																		"src": "9353:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9353:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9347:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3070,
															"nodeType": "ExpressionStatement",
															"src": "9347:25:5"
														},
														{
															"expression": {
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3071,
																	"name": "otherprevoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "9387:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3072,
																	"name": "otheroff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "9402:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9387:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3074,
															"nodeType": "ExpressionStatement",
															"src": "9387:23:5"
														},
														{
															"expression": {
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3075,
																	"name": "otheroff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "9425:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 3077,
																			"name": "other",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2972,
																			"src": "9445:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"id": 3078,
																			"name": "otheroff",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "9452:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3076,
																		"name": "progress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3166,
																		"src": "9436:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (bytes memory,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9436:25:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9425:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3081,
															"nodeType": "ExpressionStatement",
															"src": "9425:36:5"
														},
														{
															"expression": {
																"id": 3084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3082,
																	"name": "counts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2998,
																	"src": "9476:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9486:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9476:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3085,
															"nodeType": "ExpressionStatement",
															"src": "9476:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3049,
															"name": "counts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "9254:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9263:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9254:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 3058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "9268:34:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 3054,
																	"name": "off",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "9281:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3055,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "9286:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 3056,
																	"name": "otheroff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2989,
																	"src": "9293:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3052,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2970,
																	"src": "9269:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9274:6:5",
																"memberName": "equals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 702,
																"src": "9269:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory,uint256,bytes memory,uint256) pure returns (bool)"
																}
															},
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9269:33:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9254:48:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3087,
												"nodeType": "WhileStatement",
												"src": "9247:252:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3088,
														"name": "off",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "9515:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3089,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9522:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9515:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3095,
												"nodeType": "IfStatement",
												"src": "9511:50:5",
												"trueBody": {
													"id": 3094,
													"nodeType": "Block",
													"src": "9525:36:5",
													"statements": [
														{
															"expression": {
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "9547:2:5",
																"subExpression": {
																	"hexValue": "31",
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9548:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															},
															"functionReturnParameters": 2976,
															"id": 3093,
															"nodeType": "Return",
															"src": "9540:9:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3096,
														"name": "otheroff",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "9575:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9575:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3102,
												"nodeType": "IfStatement",
												"src": "9571:54:5",
												"trueBody": {
													"id": 3101,
													"nodeType": "Block",
													"src": "9590:35:5",
													"statements": [
														{
															"expression": {
																"hexValue": "31",
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9612:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"functionReturnParameters": 2976,
															"id": 3100,
															"nodeType": "Return",
															"src": "9605:8:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3105,
																"name": "prevoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2992,
																"src": "9688:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9698:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9688:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3110,
																	"name": "prevoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2992,
																	"src": "9733:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3108,
																	"name": "self",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2970,
																	"src": "9718:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9723:9:5",
																"memberName": "readUint8",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 773,
																"src": "9718:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory,uint256) pure returns (uint8)"
																}
															},
															"id": 3111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9718:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3112,
															"name": "other",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "9760:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3113,
																"name": "otherprevoff",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2995,
																"src": "9784:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 3114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9799:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "9784:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3118,
																	"name": "otherprevoff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2995,
																	"src": "9835:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3116,
																	"name": "other",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "9819:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9825:9:5",
																"memberName": "readUint8",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 773,
																"src": "9819:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory,uint256) pure returns (uint8)"
																}
															},
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9819:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"expression": {
															"id": 3103,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "9657:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9662:7:5",
														"memberName": "compare",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 642,
														"src": "9657:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256,bytes memory,uint256,uint256) pure returns (int256)"
														}
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9657:206:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2976,
												"id": 3121,
												"nodeType": "Return",
												"src": "9637:226:5"
											}
										]
									},
									"id": 3123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compareNames",
									"nameLocation": "8382:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "self",
												"nameLocation": "8418:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "8405:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2969,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8405:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "other",
												"nameLocation": "8446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "8433:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8433:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8394:64:5"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3123,
												"src": "8482:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2974,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8482:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8481:8:5"
									},
									"scope": 3351,
									"src": "8373:1498:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3146,
										"nodeType": "Block",
										"src": "10073:88:5",
										"statements": [
											{
												"id": 3145,
												"nodeType": "UncheckedBlock",
												"src": "10084:70:5",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_int32",
																"typeString": "int32"
															},
															"id": 3143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int32",
																	"typeString": "int32"
																},
																"id": 3141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3135,
																			"name": "i1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3126,
																			"src": "10122:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 3134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10116:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int32_$",
																			"typeString": "type(int32)"
																		},
																		"typeName": {
																			"id": 3133,
																			"name": "int32",
																			"nodeType": "ElementaryTypeName",
																			"src": "10116:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10116:9:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 3139,
																			"name": "i2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3128,
																			"src": "10134:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		],
																		"id": 3138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10128:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int32_$",
																			"typeString": "type(int32)"
																		},
																		"typeName": {
																			"id": 3137,
																			"name": "int32",
																			"nodeType": "ElementaryTypeName",
																			"src": "10128:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10128:9:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int32",
																		"typeString": "int32"
																	}
																},
																"src": "10116:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int32",
																	"typeString": "int32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 3142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10141:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10116:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"functionReturnParameters": 3132,
														"id": 3144,
														"nodeType": "Return",
														"src": "10109:33:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3124,
										"nodeType": "StructuredDocumentation",
										"src": "9879:87:5",
										"text": " @dev Compares two serial numbers using RFC1982 serial number math."
									},
									"id": 3147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "serialNumberGte",
									"nameLocation": "9981:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "i1",
												"nameLocation": "10014:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "10007:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3125,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10007:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "i2",
												"nameLocation": "10034:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "10027:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3127,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10027:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9996:47:5"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "10067:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10067:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10066:6:5"
									},
									"scope": 3351,
									"src": "9972:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3165,
										"nodeType": "Block",
										"src": "10276:55:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3156,
															"name": "off",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3151,
															"src": "10294:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10300:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "10294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 3161,
																"name": "off",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "10319:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3159,
																"name": "body",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3149,
																"src": "10304:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 3160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10309:9:5",
															"memberName": "readUint8",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 773,
															"src": "10304:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint8_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint8)"
															}
														},
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10304:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10294:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3155,
												"id": 3164,
												"nodeType": "Return",
												"src": "10287:36:5"
											}
										]
									},
									"id": 3166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "progress",
									"nameLocation": "10178:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "body",
												"nameLocation": "10210:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "10197:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10197:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "off",
												"nameLocation": "10233:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "10225:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10225:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10186:57:5"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3166,
												"src": "10267:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10266:9:5"
									},
									"scope": 3351,
									"src": "10169:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3349,
										"nodeType": "Block",
										"src": "10576:3998:5",
										"statements": [
											{
												"id": 3348,
												"nodeType": "UncheckedBlock",
												"src": "12339:2228:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3175,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3169,
																			"src": "12372:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 3176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12377:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "12372:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "38313932",
																		"id": 3177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12387:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8192_by_1",
																			"typeString": "int_const 8192"
																		},
																		"value": "8192"
																	},
																	"src": "12372:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4c6f6e67206b657973206e6f74207065726d6974746564",
																	"id": 3179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12393:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_7e23270aecf7702fd4b1bd212912c277507361dc8248ebed5ad0286c9b051069",
																		"typeString": "literal_string \"Long keys not permitted\""
																	},
																	"value": "Long keys not permitted"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_7e23270aecf7702fd4b1bd212912c277507361dc8248ebed5ad0286c9b051069",
																		"typeString": "literal_string \"Long keys not permitted\""
																	}
																],
																"id": 3174,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12364:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12364:55:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3181,
														"nodeType": "ExpressionStatement",
														"src": "12364:55:5"
													},
													{
														"assignments": [
															3183
														],
														"declarations": [
															{
																"constant": false,
																"id": 3183,
																"mutability": "mutable",
																"name": "ac1",
																"nameLocation": "12442:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 3348,
																"src": "12434:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12434:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3184,
														"nodeType": "VariableDeclarationStatement",
														"src": "12434:11:5"
													},
													{
														"assignments": [
															3186
														],
														"declarations": [
															{
																"constant": false,
																"id": 3186,
																"mutability": "mutable",
																"name": "ac2",
																"nameLocation": "12468:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 3348,
																"src": "12460:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3185,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12460:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3187,
														"nodeType": "VariableDeclarationStatement",
														"src": "12460:11:5"
													},
													{
														"body": {
															"id": 3251,
															"nodeType": "Block",
															"src": "12537:634:5",
															"statements": [
																{
																	"assignments": [
																		3203
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 3203,
																			"mutability": "mutable",
																			"name": "word",
																			"nameLocation": "12564:4:5",
																			"nodeType": "VariableDeclaration",
																			"scope": 3251,
																			"src": "12556:12:5",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 3202,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "12556:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 3204,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "12556:12:5"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "12596:78:5",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "12619:36:5",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "data",
																											"nodeType": "YulIdentifier",
																											"src": "12641:4:5"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12647:2:5",
																											"type": "",
																											"value": "32"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "12637:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12637:13:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12652:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12633:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12633:21:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12627:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12627:28:5"
																				},
																				"variableNames": [
																					{
																						"name": "word",
																						"nodeType": "YulIdentifier",
																						"src": "12619:4:5"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 3169,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "12641:4:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3189,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "12652:1:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 3203,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "12619:4:5",
																			"valueSize": 1
																		}
																	],
																	"id": 3205,
																	"nodeType": "InlineAssembly",
																	"src": "12587:87:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3206,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3189,
																				"src": "12696:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12700:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12696:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"expression": {
																				"id": 3209,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3169,
																				"src": "12705:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 3210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "12710:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "12705:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12696:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3234,
																	"nodeType": "IfStatement",
																	"src": "12692:169:5",
																	"trueBody": {
																		"id": 3233,
																		"nodeType": "Block",
																		"src": "12718:143:5",
																		"statements": [
																			{
																				"assignments": [
																					3213
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 3213,
																						"mutability": "mutable",
																						"name": "unused",
																						"nameLocation": "12749:6:5",
																						"nodeType": "VariableDeclaration",
																						"scope": 3233,
																						"src": "12741:14:5",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"typeName": {
																							"id": 3212,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "12741:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 3223,
																				"initialValue": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3222,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "323536",
																						"id": 3214,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12758:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"value": "256"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3221,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3218,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 3215,
																											"name": "data",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 3169,
																											"src": "12765:4:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes_memory_ptr",
																												"typeString": "bytes memory"
																											}
																										},
																										"id": 3216,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "12770:6:5",
																										"memberName": "length",
																										"nodeType": "MemberAccess",
																										"src": "12765:11:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "-",
																									"rightExpression": {
																										"id": 3217,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3189,
																										"src": "12779:1:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12765:15:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3219,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12764:17:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"hexValue": "38",
																							"id": 3220,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12784:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_8_by_1",
																								"typeString": "int_const 8"
																							},
																							"value": "8"
																						},
																						"src": "12764:21:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12758:27:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "12741:44:5"
																			},
																			{
																				"expression": {
																					"id": 3231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 3224,
																						"name": "word",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3203,
																						"src": "12808:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3230,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 3227,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 3225,
																										"name": "word",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3203,
																										"src": "12816:4:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"id": 3226,
																										"name": "unused",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3213,
																										"src": "12824:6:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12816:14:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 3228,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "12815:16:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 3229,
																							"name": "unused",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3213,
																							"src": "12835:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12815:26:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12808:33:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3232,
																				"nodeType": "ExpressionStatement",
																				"src": "12808:33:5"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"id": 3242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3235,
																			"name": "ac1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3183,
																			"src": "12879:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3236,
																							"name": "word",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3203,
																							"src": "12908:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307846463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030",
																							"id": 3237,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "12940:66:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_115341536360906404779899502576747487978354537254490211650198994186870666100480_by_1",
																								"typeString": "int_const 1153...(70 digits omitted)...0480"
																							},
																							"value": "0xFF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00"
																						},
																						"src": "12908:98:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3239,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "12907:100:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13032:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12907:126:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12879:154:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3243,
																	"nodeType": "ExpressionStatement",
																	"src": "12879:154:5"
																},
																{
																	"expression": {
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3244,
																			"name": "ac2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3186,
																			"src": "13052:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3245,
																						"name": "word",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3203,
																						"src": "13060:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"hexValue": "307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646",
																						"id": 3246,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13088:66:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1",
																							"typeString": "int_const 4505...(67 digits omitted)...9455"
																						},
																						"value": "0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"
																					},
																					"src": "13060:94:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3248,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13059:96:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13052:103:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3250,
																	"nodeType": "ExpressionStatement",
																	"src": "13052:103:5"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3192,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3189,
																"src": "12506:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3193,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3169,
																		"src": "12510:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12515:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12510:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3331",
																	"id": 3195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12524:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"value": "31"
																},
																"src": "12510:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12506:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3252,
														"initializationExpression": {
															"assignments": [
																3189
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3189,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "12499:1:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 3252,
																	"src": "12491:9:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3188,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12491:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3191,
															"initialValue": {
																"hexValue": "30",
																"id": 3190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12503:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "12491:13:5"
														},
														"loopExpression": {
															"expression": {
																"id": 3200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3198,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3189,
																	"src": "12528:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 3199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12533:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12528:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3201,
															"nodeType": "ExpressionStatement",
															"src": "12528:7:5"
														},
														"nodeType": "ForStatement",
														"src": "12486:685:5"
													},
													{
														"expression": {
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3253,
																"name": "ac1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "13185:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3254,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "13209:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"hexValue": "307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646",
																				"id": 3255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13236:66:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1",
																					"typeString": "int_const 1766...(65 digits omitted)...4255"
																				},
																				"value": "0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"
																			},
																			"src": "13209:93:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3257,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13208:95:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3258,
																							"name": "ac1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3183,
																							"src": "13325:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307846464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030",
																							"id": 3259,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13352:66:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_115790322417210952336529717160220497262186272106556906860092653394915770695680_by_1",
																								"typeString": "int_const 1157...(70 digits omitted)...5680"
																							},
																							"value": "0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000"
																						},
																						"src": "13325:93:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3261,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13324:95:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13444:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "13324:122:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3264,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13323:124:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13208:239:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13185:262:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3267,
														"nodeType": "ExpressionStatement",
														"src": "13185:262:5"
													},
													{
														"expression": {
															"id": 3281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3268,
																"name": "ac2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3186,
																"src": "13462:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3269,
																				"name": "ac2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3186,
																				"src": "13486:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"hexValue": "307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646",
																				"id": 3270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13513:66:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1",
																					"typeString": "int_const 1766...(65 digits omitted)...4255"
																				},
																				"value": "0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"
																			},
																			"src": "13486:93:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13485:95:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3273,
																							"name": "ac2",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3186,
																							"src": "13602:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307846464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030",
																							"id": 3274,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13629:66:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_115790322417210952336529717160220497262186272106556906860092653394915770695680_by_1",
																								"typeString": "int_const 1157...(70 digits omitted)...5680"
																							},
																							"value": "0xFFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000"
																						},
																						"src": "13602:93:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3276,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13601:95:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13721:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "13601:122:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3279,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13600:124:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13485:239:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13462:262:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3282,
														"nodeType": "ExpressionStatement",
														"src": "13462:262:5"
													},
													{
														"expression": {
															"id": 3290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3283,
																"name": "ac1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "13739:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3284,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "13746:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13753:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "13746:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3287,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13745:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 3288,
																	"name": "ac2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3186,
																	"src": "13758:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13745:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13739:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3291,
														"nodeType": "ExpressionStatement",
														"src": "13739:22:5"
													},
													{
														"expression": {
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3292,
																"name": "ac1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "13776:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3293,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "13800:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"hexValue": "307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646",
																				"id": 3294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13827:66:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1",
																					"typeString": "int_const 2695...(60 digits omitted)...3855"
																				},
																				"value": "0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"
																			},
																			"src": "13800:93:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3296,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13799:95:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3299,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3297,
																							"name": "ac1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3183,
																							"src": "13916:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307846464646464646463030303030303030464646464646464630303030303030304646464646464646303030303030303046464646464646463030303030303030",
																							"id": 3298,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "13943:66:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_115792089210356248762697446947946071893095522863849111501270640965525260206080_by_1",
																								"typeString": "int_const 1157...(70 digits omitted)...6080"
																							},
																							"value": "0xFFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000"
																						},
																						"src": "13916:93:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3300,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "13915:95:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14035:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "13915:122:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3303,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13914:124:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13799:239:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13776:262:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3306,
														"nodeType": "ExpressionStatement",
														"src": "13776:262:5"
													},
													{
														"expression": {
															"id": 3320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3307,
																"name": "ac1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "14053:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3308,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "14077:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"hexValue": "307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646",
																				"id": 3309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14104:66:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763495507056286727952657427581105975853055_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...3055"
																				},
																				"value": "0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"
																			},
																			"src": "14077:93:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3311,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14076:95:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 3314,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 3312,
																							"name": "ac1",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3183,
																							"src": "14193:3:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"hexValue": "307846464646464646464646464646464646303030303030303030303030303030304646464646464646464646464646464630303030303030303030303030303030",
																							"id": 3313,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "14220:66:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_115792089237316195417293883273301227089774477609353836086800156426807153786880_by_1",
																								"typeString": "int_const 1157...(70 digits omitted)...6880"
																							},
																							"value": "0xFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF0000000000000000"
																						},
																						"src": "14193:93:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 3315,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "14192:95:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14312:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "14192:122:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3318,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14191:124:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14076:239:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14053:262:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3321,
														"nodeType": "ExpressionStatement",
														"src": "14053:262:5"
													},
													{
														"expression": {
															"id": 3332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3322,
																"name": "ac1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "14330:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3323,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "14354:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&",
																			"rightExpression": {
																				"hexValue": "307830303030303030303030303030303030303030303030303030303030303030304646464646464646464646464646464646464646464646464646464646464646",
																				"id": 3324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14381:66:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1455"
																				},
																				"value": "0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			},
																			"src": "14354:93:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3326,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14353:95:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3327,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "14469:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "313238",
																				"id": 3328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14476:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_128_by_1",
																					"typeString": "int_const 128"
																				},
																				"value": "128"
																			},
																			"src": "14469:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3330,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14468:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14353:127:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14330:150:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3333,
														"nodeType": "ExpressionStatement",
														"src": "14330:150:5"
													},
													{
														"expression": {
															"id": 3341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3334,
																"name": "ac1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "14495:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3335,
																				"name": "ac1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "14503:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "14510:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "14503:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3338,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "14502:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "307846464646",
																	"id": 3339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14516:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_65535_by_1",
																		"typeString": "int_const 65535"
																	},
																	"value": "0xFFFF"
																},
																"src": "14502:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14495:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3342,
														"nodeType": "ExpressionStatement",
														"src": "14495:27:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 3345,
																	"name": "ac1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "14551:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14544:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint16_$",
																	"typeString": "type(uint16)"
																},
																"typeName": {
																	"id": 3343,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "14544:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 3346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14544:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"functionReturnParameters": 3173,
														"id": 3347,
														"nodeType": "Return",
														"src": "14537:18:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3167,
										"nodeType": "StructuredDocumentation",
										"src": "10339:158:5",
										"text": " @dev Computes the keytag for a chunk of data.\n @param data The data to compute a keytag for.\n @return The computed key tag."
									},
									"id": 3350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeKeytag",
									"nameLocation": "10512:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3169,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10539:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 3350,
												"src": "10526:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10526:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10525:19:5"
									},
									"returnParameters": {
										"id": 3173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3350,
												"src": "10568:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3171,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10568:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10567:8:5"
									},
									"scope": 3351,
									"src": "10503:4071:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3352,
							"src": "245:14332:5",
							"usedErrors": []
						}
					],
					"src": "39:14540:5"
				},
				"id": 5
			},
			"packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/algorithms/Algorithm.sol",
					"exportedSymbols": {
						"Algorithm": [
							3367
						]
					},
					"id": 3368,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3353,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Algorithm",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3354,
								"nodeType": "StructuredDocumentation",
								"src": "66:87:6",
								"text": " @dev An interface for contracts implementing a DNSSEC (signing) algorithm."
							},
							"fullyImplemented": false,
							"id": 3367,
							"linearizedBaseContracts": [
								3367
							],
							"name": "Algorithm",
							"nameLocation": "165:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3355,
										"nodeType": "StructuredDocumentation",
										"src": "182:243:6",
										"text": " @dev Verifies a signature.\n @param key The public key to verify with.\n @param data The signed data to verify.\n @param signature The signature to verify.\n @return True iff the signature is valid."
									},
									"functionSelector": "de8f50a1",
									"id": 3366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "440:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3357,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "472:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 3366,
												"src": "457:18:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "457:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3359,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "501:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 3366,
												"src": "486:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "486:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3361,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "531:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 3366,
												"src": "516:24:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "516:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:101:6"
									},
									"returnParameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3366,
												"src": "579:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3363,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "579:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:6:6"
									},
									"scope": 3367,
									"src": "431:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3368,
							"src": "155:433:6",
							"usedErrors": []
						}
					],
					"src": "39:551:6"
				},
				"id": 6
			},
			"packages/contracts/src/dnssec-oracle/digests/Digest.sol": {
				"ast": {
					"absolutePath": "packages/contracts/src/dnssec-oracle/digests/Digest.sol",
					"exportedSymbols": {
						"Digest": [
							3381
						]
					},
					"id": 3382,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Digest",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3370,
								"nodeType": "StructuredDocumentation",
								"src": "66:74:7",
								"text": " @dev An interface for contracts implementing a DNSSEC digest."
							},
							"fullyImplemented": false,
							"id": 3381,
							"linearizedBaseContracts": [
								3381
							],
							"name": "Digest",
							"nameLocation": "152:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3371,
										"nodeType": "StructuredDocumentation",
										"src": "166:212:7",
										"text": " @dev Verifies a cryptographic hash.\n @param data The data to hash.\n @param hash The hash to compare to.\n @return True iff the hashed data matches the provided hash value."
									},
									"functionSelector": "f7e83aee",
									"id": 3380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "393:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "410:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3372,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "410:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "455:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "440:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "440:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:67:7"
									},
									"returnParameters": {
										"id": 3379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3380,
												"src": "498:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3377,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "498:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:6:7"
									},
									"scope": 3381,
									"src": "384:120:7",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3382,
							"src": "142:365:7",
							"usedErrors": []
						}
					],
					"src": "39:470:7"
				},
				"id": 7
			}
		}
	}
}